Path: utzoo!utgpu!jarvis.csri.toronto.edu!mailrus!csd4.milw.wisc.edu!cs.utexas.edu!uunet!zephyr.ens.tek.com!tektronix!tekgen!tekred!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v07i093:  NetHack3 -  display oriented dungeons & dragons (Ver. 3.0), Part38/38
Message-ID: <4350@tekred.CNA.TEK.COM>
Date: 24 Jul 89 19:11:31 GMT
Sender: nobody@tekred.CNA.TEK.COM
Lines: 214
Approved: billr@saab.CNA.TEK.COM

Submitted-by: Izchak Miller <izchak@linc.cis.upenn.edu>
Posting-number: Volume 7, Issue 93
Archive-name: NetHack3/Part38



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 38 (of 38)."
# Contents:  amiga/amifont.uu amiga/fcntl.h auxil/Makefile.auxil
#   include/gold.h include/lev.h include/spell.h
# Wrapped by billr@saab on Sun Jul 23 21:33:25 1989
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'amiga/amifont.uu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'amiga/amifont.uu'\"
else
echo shar: Extracting \"'amiga/amifont.uu'\" \(407 characters\)
sed "s/^X//" >'amiga/amifont.uu' <<'END_OF_FILE'
X
Xbegin 644 hack.font
XM#P```4YE=$AA8VLZ:&%C:R\X````````````````````````````````````F
XM`````````````````````````````````````````````````````````````
XM`````````````````````````````````````````````````````````````
XM`````````````````````````````````````````````````````````````
XM`````````````````````````````````````````````````````````````
XG````````````````````````````````````````````````"`!`(
X``
Xend
Xsize 264
END_OF_FILE
if test 407 -ne `wc -c <'amiga/amifont.uu'`; then
    echo shar: \"'amiga/amifont.uu'\" unpacked with wrong size!
fi
# end of 'amiga/amifont.uu'
fi
if test -f 'amiga/fcntl.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'amiga/fcntl.h'\"
else
echo shar: Extracting \"'amiga/fcntl.h'\" \(443 characters\)
sed "s/^X//" >'amiga/fcntl.h' <<'END_OF_FILE'
X/* Copyright (C) 1986,1987 by Manx Software Systems, Inc. */
X
X#ifndef FCNTL_H
X#define FCNTL_H
X
X#define O_RDONLY	0
X#define O_WRONLY	1
X#define O_RDWR		2
X#define O_CREAT 	0x0100
X#define O_TRUNC 	0x0200
X#define O_EXCL		0x0400
X#define O_APPEND	0x0800
X
X#define O_CONRAW	0x4000
X#define O_STDIO 	0x8000
X
Xextern struct _dev {
X	long	fd;
X	short	mode;
X} *_devtab;
X
Xextern short _numdev;
X
X#define O_BINARY	0   /* For MSDOS */
X#define setmode(f,m)
X
X#endif
X
END_OF_FILE
if test 443 -ne `wc -c <'amiga/fcntl.h'`; then
    echo shar: \"'amiga/fcntl.h'\" unpacked with wrong size!
fi
# end of 'amiga/fcntl.h'
fi
if test -f 'auxil/Makefile.auxil' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'auxil/Makefile.auxil'\"
else
echo shar: Extracting \"'auxil/Makefile.auxil'\" \(406 characters\)
sed "s/^X//" >'auxil/Makefile.auxil' <<'END_OF_FILE'
X#	Hack Makefile.
X#	SCCS Id: @(#)Makefile.auxdir	3.0	89/02/16
X
XVARAUX = data rumors
X
Xall:	Guidebook $(VARAUX) spec_levs
X
XGuidebook:	Guidebook.mn
X	nroff -mn Guidebook.mn > Guidebook
X
Xdata:	data.base ../include/config.h
X	( cd ../src ; ./makedefs -d )
X
Xrumors:	rumors.tru rumors.fal
X	( cd ../src ; ./makedefs -r )
X
Xspec_levs:
X	../src/lev_comp castle.des
X	../src/lev_comp endgame.des
X	../src/lev_comp tower.des
END_OF_FILE
if test 406 -ne `wc -c <'auxil/Makefile.auxil'`; then
    echo shar: \"'auxil/Makefile.auxil'\" unpacked with wrong size!
fi
# end of 'auxil/Makefile.auxil'
fi
if test -f 'include/gold.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'include/gold.h'\"
else
echo shar: Extracting \"'include/gold.h'\" \(384 characters\)
sed "s/^X//" >'include/gold.h' <<'END_OF_FILE'
X/*	SCCS Id: @(#)gold.h	3.0	88/08/08
X/* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X/* NetHack may be freely redistributed.  See license for details. */
X
X#ifndef GOLD_H
X#define GOLD_H
X
Xstruct gold {
X	struct gold *ngold;
X	xchar gx,gy;
X	long amount;
X};
X
Xextern struct gold *fgold;
X#define newgold()	(struct gold *) alloc(sizeof(struct gold))
X
X#endif /* GOLD_H /**/
END_OF_FILE
if test 384 -ne `wc -c <'include/gold.h'`; then
    echo shar: \"'include/gold.h'\" unpacked with wrong size!
fi
# end of 'include/gold.h'
fi
if test -f 'include/lev.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'include/lev.h'\"
else
echo shar: Extracting \"'include/lev.h'\" \(361 characters\)
sed "s/^X//" >'include/lev.h' <<'END_OF_FILE'
X/*	SCCS Id: @(#)lev.h	3.0	88/08/05
X/* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X/* NetHack may be freely redistributed.  See license for details. */
X
X/*	Common include file for save.c and restore.c */
X
X#ifndef LEV_H
X#define LEV_H
X
X#ifndef TOS
X#define OMASK	0
X#else
X#define msmsg	cprintf
X#define OMASK	0x8000
X#endif
X
X#endif /* LEV_H /**/
END_OF_FILE
if test 361 -ne `wc -c <'include/lev.h'`; then
    echo shar: \"'include/lev.h'\" unpacked with wrong size!
fi
# end of 'include/lev.h'
fi
if test -f 'include/spell.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'include/spell.h'\"
else
echo shar: Extracting \"'include/spell.h'\" \(376 characters\)
sed "s/^X//" >'include/spell.h' <<'END_OF_FILE'
X/*	SCCS Id: @(#)spell.h	2.1	87/10/18
X/*	Copyright 1986, M. Stephenson */
X/* NetHack may be freely redistributed.  See license for details. */
X
X#ifndef SPELL_H
X#define SPELL_H
X
Xstruct	spell  {
X
X	int	sp_id;			/* spell id */
X	int	sp_lev;			/* power level */
X	int	sp_flags;		/* spfx flags */
X#ifdef HARD
X	int 	sp_uses;		/* uses left to spell */
X#endif
X};
X
X#endif /* SPELL_H /**/
X
END_OF_FILE
if test 376 -ne `wc -c <'include/spell.h'`; then
    echo shar: \"'include/spell.h'\" unpacked with wrong size!
fi
# end of 'include/spell.h'
fi
echo shar: End of archive 38 \(of 38\).
cp /dev/null ark38isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 38 archives.
    echo building monst.c from monst.c1 and monst.c2
    cat monst.c1 monst.c2 >monst.c
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
