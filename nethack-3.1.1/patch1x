Subject:  v17i065:  nethack31 - display oriented dungeons & dragons (Ver. 3.1), Patch1x/31
Newsgroups: comp.sources.games
Approved: billr@saab.CNA.TEK.COM

Submitted-by: izchak@linc.cis.upenn.edu (Izchak Miller)
Posting-number: Volume 17, Issue 65
Archive-name: nethack31/Patch1x
Patch-To: nethack31: Volume 16, Issue 1-116
Environment: Amiga, Atari, Mac, MS-DOS, Windows-NT, OS2, Unix, VMS, X11



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 24 (of 31)."
# Contents:  sys/share/lev_lex.c1 sys/share/sounds/toolhorn.uu
# Wrapped by billr@saab on Fri Mar  5 10:50:48 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'sys/share/lev_lex.c1' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'sys/share/lev_lex.c1'\" to \"'sys/share/lev_lex.c1.orig'\"
  mv -f 'sys/share/lev_lex.c1' 'sys/share/lev_lex.c1.orig'
fi
echo shar: Extracting \"'sys/share/lev_lex.c1'\" \(34420 characters\)
sed "s/^X//" >'sys/share/lev_lex.c1' <<'END_OF_FILE'
X/* A lexical scanner generated by flex */
X
X/* scanner skeleton version:
X * $Header: /usr/fsys/odin/a/vern/flex/RCS/flex.skel,v 2.16 90/08/03 14:09:36 vern Exp $
X */
X
X#define FLEX_SCANNER
X
X#include <stdio.h>
X
X
X/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
X#ifdef c_plusplus
X#ifndef __cplusplus
X#define __cplusplus
X#endif
X#endif
X
X
X#ifdef __cplusplus
X
X#include <stdlib.h>
X#include <osfcn.h>
X
X/* use prototypes in function declarations */
X#define YY_USE_PROTOS
X
X/* the "const" storage-class-modifier is valid */
X#define YY_USE_CONST
X
X#else	/* ! __cplusplus */
X
X#ifdef __STDC__
X
X#ifdef __GNUC__
X#include <stddef.h>
Xvoid *malloc( size_t );
X#else
X#include <stdlib.h>
X#endif	/* __GNUC__ */
X
X#define YY_USE_PROTOS
X#define YY_USE_CONST
X
X#endif	/* __STDC__ */
X#endif	/* ! __cplusplus */
X
X
X#ifdef __TURBOC__
X#define YY_USE_CONST
X#endif
X#ifdef VMS
X# define YY_USE_CONST
X# ifdef USE_PROTOTYPES
X#  define YY_USE_PROTOS
X# endif
X#endif
X
X
X#ifndef YY_USE_CONST
X#define const
X#endif
X
X
X#ifdef YY_USE_PROTOS
X#define YY_PROTO(proto) proto
X#else
X#define YY_PROTO(proto) ()
X/* we can't get here if it's an ANSI C compiler, or a C++ compiler,
X * so it's got to be a K&R compiler, and therefore there's no standard
X * place from which to include these definitions
X */
Xchar *malloc();
Xint read();
X#endif
X
X
X/* amount of stuff to slurp up with each read */
X#ifndef YY_READ_BUF_SIZE
X#define YY_READ_BUF_SIZE 8192
X#endif
X
X/* returned upon end-of-file */
X#define YY_END_TOK 0
X
X/* copy whatever the last rule matched to the standard output */
X
X/* cast to (char *) is because for 8-bit chars, yytext is (unsigned char *) */
X/* this used to be an fputs(), but since the string might contain NUL's,
X * we now use fwrite()
X */
X#define ECHO (void) fwrite( (char *) yytext, yyleng, 1, yyout )
X
X/* gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
X * is returned in "result".
X */
X#define YY_INPUT(buf,result,max_size) \
X	if ( (result = read( fileno(yyin), (char *) buf, max_size )) < 0 ) \
X	    YY_FATAL_ERROR( "read() in flex scanner failed" );
X#define YY_NULL 0
X
X/* no semi-colon after return; correct usage is to write "yyterminate();" -
X * we don't want an extra ';' after the "return" because that will cause
X * some compilers to complain about unreachable statements.
X */
X#define yyterminate() return ( YY_NULL )
X
X/* report a fatal error */
X
X/* The funky do-while is used to turn this macro definition into
X * a single C statement (which needs a semi-colon terminator).
X * This avoids problems with code like:
X *
X * 	if ( something_happens )
X *		YY_FATAL_ERROR( "oops, the something happened" );
X *	else
X *		everything_okay();
X *
X * Prior to using the do-while the compiler would get upset at the
X * "else" because it interpreted the "if" statement as being all
X * done when it reached the ';' after the YY_FATAL_ERROR() call.
X */
X
X#define YY_FATAL_ERROR(msg) \
X	do \
X		{ \
X		(void) fputs( msg, stderr ); \
X		(void) putc( '\n', stderr ); \
X		exit( 1 ); \
X		} \
X	while ( 0 )
X
X/* default yywrap function - always treat EOF as an EOF */
X#define yywrap() 1
X
X/* enter a start condition.  This macro really ought to take a parameter,
X * but we do it the disgusting crufty way forced on us by the ()-less
X * definition of BEGIN
X */
X#define BEGIN yy_start = 1 + 2 *
X
X/* action number for EOF rule of a given start state */
X#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
X
X/* special action meaning "start processing a new file" */
X#define YY_NEW_FILE \
X	do \
X		{ \
X		yy_init_buffer( yy_current_buffer, yyin ); \
X		yy_load_buffer_state(); \
X		} \
X	while ( 0 )
X
X/* default declaration of generated scanner - a define so the user can
X * easily add parameters
X */
X#define YY_DECL int yylex YY_PROTO(( void )) 
X
X/* code executed at the end of each rule */
X#define YY_BREAK break;
X
X#define YY_END_OF_BUFFER_CHAR 0
X
X#ifndef YY_BUF_SIZE
X#define YY_BUF_SIZE (YY_READ_BUF_SIZE * 2) /* size of default input buffer */
X#endif
X
Xtypedef struct yy_buffer_state *YY_BUFFER_STATE;
X
X#define YY_CHAR char
X# line 1 "lev_comp.l"
X#define INITIAL 0
X# line 2 "lev_comp.l"
X/*	SCCS Id: @(#)lev_lex.c	3.1	92/07/12	*/
X/*	Copyright (c) 1989 by Jean-Christophe Collet */
X/* NetHack may be freely redistributed.  See license for details. */
X
X#define LEV_LEX_C
X
X#include "hack.h"
X#include "lev_comp.h"
X#include "sp_lev.h"
X
X/* Most of these don't exist in flex, yywrap is macro and
X * yyunput is properly declared in flex.skel.
X */
X#ifndef FLEX_SCANNER
Xint FDECL (yyback, (int *, int));
Xint NDECL (yylook);
Xint NDECL (yyinput);
Xint NDECL (yywrap);
Xint NDECL (yylex);
X	/* Traditional lexes let yyunput() and yyoutput() default to int;
X	 * newer ones may declare them as void since they don't return
X	 * values.  For even more fun, the lex supplied as part of the
X	 * newer unbundled compiler for SunOS 4.x adds the void declarations
X	 * (under __STDC__ or _cplusplus ifdefs -- otherwise they remain
X	 * int) while the bundled lex and the one with the older unbundled
X	 * compiler do not.  To detect this, we need help from outside --
X	 * sys/unix/Makefile.utl.
X	 */
X# if defined(NeXT) || defined(SVR4)
X#  define VOIDYYPUT
X# endif
X# if !defined(VOIDYYPUT)
X#  if defined(POSIX_TYPES) && !defined(BOS) && !defined(HISX)
X#   define VOIDYYPUT
X#  endif
X# endif
X# if !defined(VOIDYYPUT) && defined(WEIRD_LEX)
X#  if defined(SUNOS4) && defined(__STDC__) && (WEIRD_LEX > 1) 
X#   define VOIDYYPUT
X#  endif
X# endif
X# ifdef VOIDYYPUT
Xvoid FDECL (yyunput, (int));
Xvoid FDECL (yyoutput, (int));
X# else
Xint FDECL (yyunput, (int));
Xint FDECL (yyoutput, (int));
X# endif
X#endif	/* FLEX_SCANNER */
X
Xvoid FDECL (init_yyin, (FILE *));
Xvoid FDECL (init_yyout, (FILE *));
X
X#ifdef MICRO
X#undef exit
Xextern void FDECL(exit, (int));
X#endif
X
X/* this doesn't always get put in lev_comp.h
X * (esp. when using older versions of bison)
X */
X
Xextern YYSTYPE yylval;
X
Xint line_number = 1, colon_line_number = 1;
X
X/* This is *** UGLY *** but I can't think a better way to do it
X * I really need a huge buffer to scan maps...
X */
X
X#undef YYLMAX
X#define YYLMAX	2048
X
X/*
X *	This is a hack required by Michael Hamel to get things
X *	working on the Mac.
X */
X#if defined(applec) && !defined(FLEX_SCANNER)
X#undef input
X#undef unput
X#define unput(c) { yytchar = (c); if (yytchar == 10) yylineno--; *yysptr++ = yytchar; }
X# ifndef YYNEWLINE
X# define YYNEWLINE 10
X# endif
X
Xchar
Xinput() {	/* Under MPW \n is chr(13)! Compensate for this. */
X
X	if (yysptr > yysbuf) return(*--yysptr);
X	else {
X		yytchar = getc(yyin);
X		if (yytchar == '\n') {
X		    yylineno++;
X		    return(YYNEWLINE);
X		}
X		if (yytchar == EOF) return(0);
X		else		    return(yytchar);
X	}
X}
X#endif	/* applec && !FLEX_SCANNER */
X
X#define MAPC 1
X# line 108 "lev_comp.l"
X
X/* done after the current pattern has been matched and before the
X * corresponding action - sets up yytext
X */
X#define YY_DO_BEFORE_ACTION \
X	yytext = yy_bp; \
X	yytext -= yy_more_len; \
X	yyleng = yy_cp - yytext; \
X	yy_hold_char = *yy_cp; \
X	*yy_cp = '\0'; \
X	yy_c_buf_p = yy_cp;
X
X#define EOB_ACT_CONTINUE_SCAN 0
X#define EOB_ACT_END_OF_FILE 1
X#define EOB_ACT_LAST_MATCH 2
X
X/* return all but the first 'n' matched characters back to the input stream */
X#define yyless(n) \
X	do \
X		{ \
X		/* undo effects of setting up yytext */ \
X		*yy_cp = yy_hold_char; \
X		yy_c_buf_p = yy_cp = yy_bp + n; \
X		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
X		} \
X	while ( 0 )
X
X#define unput(c) yyunput( c, yytext )
X
X
Xstruct yy_buffer_state
X    {
X    FILE *yy_input_file;
X
X    YY_CHAR *yy_ch_buf;		/* input buffer */
X    YY_CHAR *yy_buf_pos;	/* current position in input buffer */
X
X    /* size of input buffer in bytes, not including room for EOB characters*/
X    int yy_buf_size;	
X
X    /* number of characters read into yy_ch_buf, not including EOB characters */
X    int yy_n_chars;
X
X    int yy_eof_status;		/* whether we've seen an EOF on this buffer */
X#define EOF_NOT_SEEN 0
X    /* "pending" happens when the EOF has been seen but there's still
X     * some text process
X     */
X#define EOF_PENDING 1
X#define EOF_DONE 2
X    };
X
Xstatic YY_BUFFER_STATE yy_current_buffer;
X
X/* we provide macros for accessing buffer states in case in the
X * future we want to put the buffer states in a more general
X * "scanner state"
X */
X#define YY_CURRENT_BUFFER yy_current_buffer
X
X
X/* yy_hold_char holds the character lost when yytext is formed */
Xstatic YY_CHAR yy_hold_char;
X
Xstatic int yy_n_chars;		/* number of characters read into yy_ch_buf */
X
X
X
X#ifndef YY_USER_ACTION
X#define YY_USER_ACTION
X#endif
X
X#ifndef YY_USER_INIT
X#define YY_USER_INIT
X#endif
X
Xextern YY_CHAR *yytext;
Xextern int yyleng;
Xextern FILE *yyin, *yyout;
X
XYY_CHAR *yytext;
Xint yyleng;
X
XFILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
X
X#define YY_END_OF_BUFFER 106
Xtypedef int yy_state_type;
Xstatic const short int yy_accept[573] =
X    {   0,
X        0,    0,    0,    0,  106,  104,  102,  101,  104,  104,
X      104,   99,    4,  104,  104,  104,  104,  104,  104,  104,
X      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
X      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
X      104,  104,  104,  104,  104,  104,  104,  104,  104,    2,
X      102,  104,  104,  104,  104,  104,  104,  104,  104,  104,
X      104,  104,  104,  102,    0,  100,    0,   99,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,   84,    0,
X        0,    3,    0,    2,  102,    0,    0,    0,    0,    0,
X        0,    0,    2,    0,  103,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X
X        0,    0,    0,    0,    0,    0,    0,    0,   71,    0,
X        0,   66,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,   64,    0,    0,    0,    0,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,   16,
X        0,    0,    0,    0,    0,   39,    0,    0,    0,    6,
X        0,    0,   41,    0,    0,    0,   32,    0,    0,    0,
X       35,   31,    0,    0,    0,   15,    0,    0,    0,    0,
X        0,    0,    0,    0,   90,    0,    0,    0,    0,   85,
X       88,   50,    0,    0,    0,    0,    0,    0,   59,    0,
X
X        0,    0,    0,    0,   91,    0,    0,    0,    0,    0,
X       54,    0,    0,    0,   44,    0,    0,    0,    0,    0,
X        0,    0,    0,   87,    0,    0,    0,   52,   12,    0,
X        0,   24,    0,    0,    0,    0,    0,   10,    0,    0,
X        0,    0,    8,    0,    0,    0,    7,    0,    0,    0,
X        0,    0,    0,   26,    0,    0,    0,   58,   83,    0,
X       77,    0,    0,    0,    0,   73,    0,    0,    0,   86,
X        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X        0,    0,    0,    0,   49,    0,    0,    0,   57,    0,
X       63,    0,    0,    0,   51,    0,    0,   67,    0,    0,
X
X       29,   42,    0,    0,    0,    0,    0,    0,   25,    0,
X        0,    0,    0,    0,   13,   27,    0,   20,    0,    0,
X        0,   76,    0,   65,   48,   61,   45,   94,    0,   68,
X        0,    0,    0,    0,    0,   46,    0,    0,    0,    0,
X        0,    0,   47,   97,    0,   55,    0,   53,    0,    0,
X       82,    0,    0,    1,    0,    0,    0,    0,    0,    0,
X        0,    5,   14,    0,    0,    0,   36,    0,   19,   92,
X       89,    0,    0,    0,   75,    0,    0,    0,    0,   56,
X       72,   70,    0,    0,   81,    0,    0,    0,   38,    0,
X        0,   30,   11,    9,   18,    0,    0,    0,    0,    0,
X
X        0,    0,    0,    0,    0,    0,    0,    0,   80,    0,
X       74,    0,   93,   69,    0,   40,    0,    0,    0,    0,
X        0,    0,    0,   60,    0,   96,   43,   78,   79,    0,
X        0,   17,    0,    0,    0,    0,    0,    0,    0,   62,
X       95,    0,    0,    0,    0,    0,    0,    0,    0,    0,
X       33,   34,    0,    0,    0,    0,    0,   98,    0,    0,
X        0,   23,    0,    0,    0,   21,    0,    0,   22,   28,
X       37,    0
X    } ;
X
Xstatic const YY_CHAR yy_ec[128] =
X    {   0,
X        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    4,    1,    5,    6,    1,    1,    1,    7,    1,
X        1,    1,    8,    1,    9,   10,    1,   11,   11,   11,
X       11,   11,   11,   11,   11,   11,   11,   12,    1,    1,
X        1,    1,    1,    1,   13,   14,   15,   16,   17,   18,
X       19,   20,   21,   22,   23,   24,   25,   26,   27,   28,
X        1,   29,   30,   31,   32,   33,   34,    1,   35,   36,
X        1,   10,    1,    1,   37,    1,   38,   39,   40,   41,
X
X       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
X       52,   53,    1,   54,   55,   56,   57,   58,   59,    1,
X        1,    1,   10,   10,   10,    1,    1
X    } ;
X
Xstatic const YY_CHAR yy_meta[60] =
X    {   0,
X        1,    2,    3,    2,    1,    2,    1,    2,    2,    2,
X        1,    1,    2,    2,    2,    1,    1,    1,    1,    2,
X        2,    1,    2,    2,    1,    1,    1,    2,    1,    2,
X        1,    1,    1,    2,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1
X    } ;
X
Xstatic const short int yy_base[577] =
X    {   0,
X        0,   54,   77,   57,  674,  675,   60,  675,  668,    0,
X      661,  660,  675,  646,  640,   41,   38,  642,   42,   57,
X      641,   58,   76,   75,  652,  638,   82,   83,   79,  651,
X       57,   68,   79,   20,   72,   32,   75,   88,   81,   87,
X       92,   93,  100,   99,   89,   96,  621,  659,  135,  675,
X      151,  154,  156,  158,  161,  166,  635,  163,  168,  152,
X      156,  161,  191,  171,  655,  675,  652,  647,  626,  643,
X      642,  625,  626,  639,  632,  637,  617,  621,  623,  625,
X      629,  611,  607,  612,  615,  615,  166,  617,  169,  612,
X      618,  609,  609,  621,  619,  608,  618,  606,  157,  580,
X
X      590,  585,  570,  573,  570,  572,  584,  569,  566,  560,
X      563,  562,  572,  566,  565,  153,  558,  553,  165,  555,
X      570,  166,  555,  557,  550,  179,  559,  563,  566,  565,
X      551,  557,  549,  170,  542,  545,  540,  188,  675,  541,
X      592,  675,  198,  675,  236,  239,  241,  167,   57,  232,
X      233,  234,  675,    0,  675,  581,  567,  566,  562,  561,
X      555,  559,  568,  560,  560,  568,  552,  566,  564,  563,
X      549,  548,  560,  563,  538,  557,  549,  541,  555,  549,
X      544,  545,  546,  537,  548,  536,  539,  518,  523,  518,
X      511,  503,  501,  508,  504,  498,  501,  497,  496,  499,
X
X      493,  492,  493,  491,  496,  501,  502,  486,  675,  485,
X      486,  675,  491,  496,  485,  497,  487,  479,  477,  483,
X      479,  480,  487,  472,  485,  484,  474,  484,  483,  481,
X      476,  480,  465,  472,  461,  675,  474,  458,  468,  467,
X      456,  508,  239,  485,  240,  480,  493,  492,  485,  675,
X      491,  491,  473,  471,  484,  675,  463,  482,  474,  463,
X      483,  464,  675,  466,  238,  478,  675,  479,  464,  463,
X      675,  675,  460,  461,  459,  675,  465,  434,  430,  441,
X      440,  426,  428,  437,  675,  436,  422,  434,  433,  675,
X      675,  675,  436,  431,  430,  462,  427,  423,  675,  426,
X
X      425,  428,  414,  417,  675,  407,  408,  415,  408,  421,
X      675,  413,  408,  416,  675,  413,  412,  401,  396,  395,
X      394,  398,  403,  675,  393,  397,  389,  675,  675,  431,
X      250,  675,  423,  425,  425,  411,  406,  675,  425,  406,
X      411,  406,  675,  421,  414,  415,  675,  410,  417,  398,
X      404,  402,  400,  675,  398,  397,  405,  675,  675,  369,
X      675,  379,  370,  368,  364,  675,  376,  375,  357,  675,
X      373,  178,  364,  363,  367,  369,  353,  353,  365,  364,
X      367,  360,  349,  349,  675,  359,  344,  356,  675,  348,
X      675,  340,  341,  353,  675,  339,  344,  675,  364,  256,
X
X      675,  675,  364,  369,  368,  367,  358,  373,  675,  361,
X      367,  354,  363,  351,  675,  675,  343,  675,  354,  349,
X      342,  675,  335,  675,  675,  675,  675,  675,  333,  675,
X      332,  327,  320,  329,  324,  675,  312,  312,  327,  312,
X      316,  313,  675,  675,  310,  675,  305,  675,  311,  314,
X      675,  317,  316,  675,  328,  340,  329,  328,  318,  324,
X      328,  675,  675,  331,  319,  253,  675,  317,  675,  675,
X      675,  304,  302,  293,  675,  292,  289,  300,  285,  675,
X      675,  675,  288,  290,  675,  294,  296,  295,  675,  316,
X      315,  675,  675,  675,  675,  320,  298,  304,  303,  315,
X
X      304,  290,  270,  280,  270,  272,  280,  267,  675,  266,
X      675,  274,  675,  675,  301,  675,  303,  303,  286,  288,
X      291,  299,  282,  675,  254,  675,  675,  675,  675,  253,
X      252,  675,  283,  282,  276,  274,  286,  287,  284,  675,
X      675,  258,  282,  274,  276,  265,  280,  277,  274,  251,
X      675,  675,  263,  260,  245,  245,  249,  675,  235,  232,
X      230,  675,  228,  207,  180,  675,  124,  102,  675,  675,
X      675,  675,  281,  284,  286,  288
X    } ;
X
Xstatic const short int yy_def[577] =
X    {   0,
X      572,    1,    1,    3,  572,  572,  572,  572,  573,  574,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  575,  572,  572,
X      576,  576,  576,  576,  576,  576,  572,  576,  576,   56,
X       56,   59,  575,  572,  573,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      575,  572,  572,  572,  576,  576,  576,   59,  572,   59,
X       59,   59,  572,   63,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,   59,  572,   59,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X       59,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,   59,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,    0,  572,  572,  572,  572
X    } ;
X
Xstatic const short int yy_nxt[735] =
X    {   0,
X        6,    7,    8,    7,    9,    6,   10,   11,   11,    6,
X       12,   13,   14,   15,   16,   17,   18,   19,   20,    6,
X       21,    6,    6,   22,   23,   24,   25,   26,   27,   28,
X       29,    6,    6,   30,    6,    6,    6,   31,   32,   33,
X       34,   35,   36,    6,   37,    6,    6,    6,   38,   39,
X       40,   41,   42,   43,   44,   45,   46,    6,   47,   48,
X       71,   64,   63,   64,   73,   76,   74,   72,   77,  114,
X       81,  110,  244,   78,   82,  162,  111,  115,   49,   50,
X       51,   49,   52,   79,   53,   53,   52,   86,   83,   54,
X       55,   56,   84,   57,   90,   96,   52,   58,   91,   52,
X
X       59,   87,   85,   93,   60,   99,   61,   97,   92,  112,
X       62,  100,  116,   94,   95,  101,  102,  122,  123,  103,
X      106,  104,  113,  107,  105,  118,  117,  108,  125,  119,
X      127,  571,  124,  120,  129,  109,  133,  131,  126,  121,
X      136,  130,  137,  134,  128,  132,  138,  143,  139,  570,
X      135,   84,   64,  144,  145,  572,  144,  572,  144,  572,
X      144,   85,  572,  144,  572,  144,   68,  572,  144,  572,
X      144,  146,   64,  152,   64,  146,  151,  572,   89,  243,
X      150,  147,  572,  572,   82,  148,   94,   95,   80,   70,
X      174,  175,   72,  153,  154,  177,  154,  178,  154,  154,
X
X      154,  206,  188,  154,  154,  154,  207,  210,  214,  569,
X      154,  154,  189,  154,  154,  215,  220,  216,  154,  221,
X      154,  233,  211,  234,  154,  242,  431,  238,  222,  223,
X      239,  432,  224,  170,  225,  568,  240,   64,  144,  145,
X      572,  144,  572,  144,  146,  146,  146,  168,  572,  572,
X      572,  146,  146,  348,  567,  572,  572,  245,  182,  566,
X      565,  564,  146,  331,  248,  349,  572,  498,  146,  563,
X      400,  156,  572,  421,  562,  561,  560,  499,  559,  500,
X      501,   65,   65,   65,   67,   67,  141,  141,  141,  146,
X      146,  558,  557,  556,  555,  554,  553,  552,  551,  550,
X
X      549,  548,  547,  546,  545,  544,  543,  542,  541,  540,
X      539,  538,  537,  536,  535,  534,  533,  532,  531,  530,
X      529,  528,  527,  526,  525,  524,  523,  522,  521,  520,
X      519,  518,  517,  516,  515,  514,  513,  512,  511,  510,
X      509,  508,  507,  506,  505,  504,  503,  502,  497,  496,
X      495,  494,  493,  492,  491,  490,  489,  488,  487,  486,
X      485,  484,  483,  482,  481,  480,  479,  478,  477,  476,
X      475,  474,  473,  472,  471,  470,  469,  468,  467,  466,
X      465,  464,  463,  462,  461,  460,  459,  458,  457,  456,
X      455,  454,  453,  452,  451,  450,  449,  448,  447,  446,
X
X      445,  444,  443,  442,  441,  440,  439,  438,  437,  436,
X      435,  434,  433,  430,  429,  428,  427,  426,  425,  424,
X      423,  422,  421,  420,  419,  418,  417,  416,  415,  414,
X      413,  412,  411,  410,  409,  408,  407,  406,  405,  404,
X      403,  402,  401,  399,  398,  397,  396,  395,  394,  393,
X      392,  391,  390,  389,  388,  387,  386,  385,  384,  383,
X      382,  381,  380,  379,  378,  377,  376,  375,  374,  373,
X      372,  371,  370,  369,  368,  367,  366,  365,  364,  363,
X      362,  361,  360,  359,  358,  357,  356,  355,  354,  353,
X      352,  351,  350,  347,  346,  345,  344,  343,  342,  341,
X
X      340,  339,  338,  337,  336,  335,  334,  333,  332,  330,
X      329,  328,  327,  326,  325,  324,  323,  322,  321,  320,
X      319,  318,  317,  316,  315,  314,  313,  312,  311,  310,
X      309,  308,  307,  306,  305,  304,  303,  302,  301,  300,
X      299,  298,  297,  296,  295,  294,  293,  292,  291,  290,
X      289,  288,  287,  286,  285,  284,  283,  282,  281,  280,
X      279,  278,  277,  276,  275,  274,  273,  272,  271,  270,
X      269,  268,  267,  266,  265,  264,  263,  262,  261,  260,
X      259,  258,  257,  256,  255,  254,  253,  252,  251,  250,
X      249,  248,  247,  246,  142,  241,  237,  236,  235,  232,
X
X      231,  230,  229,  228,  227,  226,  219,  218,  217,  213,
X      212,  209,  208,  205,  204,  203,  202,  201,  200,  199,
X      198,  197,  196,  195,  194,  193,  192,  191,  190,  187,
X      186,  185,  184,  183,  182,  181,  180,  179,  176,  173,
X      172,  171,  170,  169,  168,  167,  166,  165,  164,  163,
X      162,  161,  160,  159,  158,  157,  156,   68,  155,   66,
X      149,  142,  140,   98,   89,   88,   80,   75,   70,   69,
X       68,   68,   66,  572,    5,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572
X    } ;
X
Xstatic const short int yy_chk[735] =
X    {   0,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
X        1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
X       16,    7,    4,    7,   17,   19,   17,   16,   19,   36,
X       22,   34,  149,   20,   22,  149,   34,   36,    2,    3,
X        3,    4,    3,   20,    3,    3,    3,   24,   23,    3,
X        3,    3,   23,    3,   27,   29,    3,    3,   27,    3,
X
X        3,   24,   23,   28,    3,   31,    3,   29,   27,   35,
X        3,   31,   37,   28,   28,   31,   32,   39,   39,   32,
X       33,   32,   35,   33,   32,   38,   37,   33,   40,   38,
X       41,  568,   39,   38,   42,   33,   44,   43,   40,   38,
X       45,   42,   45,   44,   41,   43,   46,   49,   46,  567,
X       44,   49,   51,   51,   51,   52,   52,   53,   53,   54,
X       54,   49,   55,   55,   58,   58,   53,   56,   56,   59,
X       59,   60,   64,   62,   64,   61,   61,   62,   60,  148,
X       59,   54,   61,  148,   59,   56,   61,   61,   58,   55,
X       87,   87,   56,   63,   63,   89,   63,   89,   63,   63,
X
X       63,  116,   99,   63,   63,   63,  116,  119,  122,  565,
X       63,   63,   99,   63,   63,  122,  126,  122,   63,  126,
X       63,  134,  119,  134,   63,  143,  372,  138,  126,  126,
X      138,  372,  126,  143,  126,  564,  138,  145,  145,  145,
X      146,  146,  147,  147,  150,  151,  152,  150,  150,  151,
X      152,  243,  245,  265,  563,  243,  245,  152,  151,  561,
X      560,  559,  331,  245,  243,  265,  331,  466,  400,  557,
X      331,  147,  400,  400,  556,  555,  554,  466,  553,  466,
X      466,  573,  573,  573,  574,  574,  575,  575,  575,  576,
X      576,  550,  549,  548,  547,  546,  545,  544,  543,  542,
X
X      539,  538,  537,  536,  535,  534,  533,  531,  530,  525,
X      523,  522,  521,  520,  519,  518,  517,  515,  512,  510,
X      508,  507,  506,  505,  504,  503,  502,  501,  500,  499,
X      498,  497,  496,  491,  490,  488,  487,  486,  484,  483,
X      479,  478,  477,  476,  474,  473,  472,  468,  465,  464,
X      461,  460,  459,  458,  457,  456,  455,  453,  452,  450,
X      449,  447,  445,  442,  441,  440,  439,  438,  437,  435,
X      434,  433,  432,  431,  429,  423,  421,  420,  419,  417,
X      414,  413,  412,  411,  410,  408,  407,  406,  405,  404,
X      403,  399,  397,  396,  394,  393,  392,  390,  388,  387,
X
X      386,  384,  383,  382,  381,  380,  379,  378,  377,  376,
X      375,  374,  373,  371,  369,  368,  367,  365,  364,  363,
X      362,  360,  357,  356,  355,  353,  352,  351,  350,  349,
X      348,  346,  345,  344,  342,  341,  340,  339,  337,  336,
X      335,  334,  333,  330,  327,  326,  325,  323,  322,  321,
X      320,  319,  318,  317,  316,  314,  313,  312,  310,  309,
X      308,  307,  306,  304,  303,  302,  301,  300,  298,  297,
X      296,  295,  294,  293,  289,  288,  287,  286,  284,  283,
X      282,  281,  280,  279,  278,  277,  275,  274,  273,  270,
X      269,  268,  266,  264,  262,  261,  260,  259,  258,  257,
X
X      255,  254,  253,  252,  251,  249,  248,  247,  246,  244,
X      242,  241,  240,  239,  238,  237,  235,  234,  233,  232,
X      231,  230,  229,  228,  227,  226,  225,  224,  223,  222,
X      221,  220,  219,  218,  217,  216,  215,  214,  213,  211,
X      210,  208,  207,  206,  205,  204,  203,  202,  201,  200,
X      199,  198,  197,  196,  195,  194,  193,  192,  191,  190,
X      189,  188,  187,  186,  185,  184,  183,  182,  181,  180,
X      179,  178,  177,  176,  175,  174,  173,  172,  171,  170,
X      169,  168,  167,  166,  165,  164,  163,  162,  161,  160,
X      159,  158,  157,  156,  141,  140,  137,  136,  135,  133,
X
X      132,  131,  130,  129,  128,  127,  125,  124,  123,  121,
X      120,  118,  117,  115,  114,  113,  112,  111,  110,  109,
X      108,  107,  106,  105,  104,  103,  102,  101,  100,   98,
X       97,   96,   95,   94,   93,   92,   91,   90,   88,   86,
X       85,   84,   83,   82,   81,   80,   79,   78,   77,   76,
X       75,   74,   73,   72,   71,   70,   69,   68,   67,   65,
X       57,   48,   47,   30,   26,   25,   21,   18,   15,   14,
X       12,   11,    9,    5,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572,  572,  572,  572,  572,  572,  572,
X      572,  572,  572,  572
X    } ;
X
Xstatic yy_state_type yy_last_accepting_state;
Xstatic YY_CHAR *yy_last_accepting_cpos;
X
X/* the intent behind this definition is that it'll catch
X * any uses of REJECT which flex missed
X */
X#define REJECT reject_used_but_not_detected
Xstatic int yy_more_flag = 0;
Xstatic int yy_doing_yy_more = 0;
Xstatic int yy_more_len = 0;
X#define yymore() { yy_more_flag = 1; }
X#define YY_MORE_ADJ (yy_doing_yy_more ? yy_more_len : 0)
X
X/* these variables are all declared out here so that section 3 code can
X * manipulate them
X */
X/* points to current character in buffer */
Xstatic YY_CHAR *yy_c_buf_p = (YY_CHAR *) 0;
Xstatic int yy_init = 1;		/* whether we need to initialize */
Xstatic int yy_start = 0;	/* start state number */
X
X/* flag which is used to allow yywrap()'s to do buffer switches
X * instead of setting up a fresh yyin.  A bit of a hack ...
X */
Xstatic int yy_did_buffer_switch_on_eof;
X
Xstatic yy_state_type yy_get_previous_state YY_PROTO(( void ));
Xstatic yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
Xstatic int yy_get_next_buffer YY_PROTO(( void ));
Xstatic void yyunput YY_PROTO(( YY_CHAR c, YY_CHAR *buf_ptr ));
Xvoid yyrestart YY_PROTO(( FILE *input_file ));
Xvoid yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
Xvoid yy_load_buffer_state YY_PROTO(( void ));
XYY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
Xvoid yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
Xvoid yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
X
X#define yy_new_buffer yy_create_buffer
X
X#ifdef __cplusplus
Xstatic int yyinput YY_PROTO(( void ));
X#else
Xstatic int input YY_PROTO(( void ));
X#endif
X
XYY_DECL
X    {
X    register yy_state_type yy_current_state;
X    register YY_CHAR *yy_cp, *yy_bp;
X    register int yy_act;
X
X
X
X    if ( yy_init )
X	{
X	YY_USER_INIT;
X
X	if ( ! yy_start )
X	    yy_start = 1;	/* first start state */
X
X	if ( ! yyin )
X	    yyin = stdin;
X
X	if ( ! yyout )
X	    yyout = stdout;
X
X	if ( yy_current_buffer )
X	    yy_init_buffer( yy_current_buffer, yyin );
X	else
X	    yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );
X
X	yy_load_buffer_state();
X
X	yy_init = 0;
X	}
X
X    while ( 1 )		/* loops until end-of-file is reached */
X	{
X	yy_more_len = 0;
X	yy_doing_yy_more = yy_more_flag;
X	if ( yy_doing_yy_more )
X	    {
X	    yy_more_len = yyleng;
X	    yy_more_flag = 0;
X	    }
X	yy_cp = yy_c_buf_p;
X
X	/* support of yytext */
X	*yy_cp = yy_hold_char;
X
X	/* yy_bp points to the position in yy_ch_buf of the start of the
X	 * current run.
X	 */
X	yy_bp = yy_cp;
X
X	yy_current_state = yy_start;
X	if ( yy_bp[-1] == '\n' )
X	    ++yy_current_state;
Xyy_match:
X	do
X	    {
X	    register YY_CHAR yy_c = yy_ec[*yy_cp];
X	    if ( yy_accept[yy_current_state] )
X		{
X		yy_last_accepting_state = yy_current_state;
X		yy_last_accepting_cpos = yy_cp;
X		}
X	    while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
X		{
X		yy_current_state = yy_def[yy_current_state];
X		if ( yy_current_state >= 573 )
X		    yy_c = yy_meta[yy_c];
X		}
X	    yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
X	    ++yy_cp;
X	    }
X	while ( yy_current_state != 572 );
X	yy_cp = yy_last_accepting_cpos;
X	yy_current_state = yy_last_accepting_state;
X
Xyy_find_action:
X	yy_act = yy_accept[yy_current_state];
X
X	YY_DO_BEFORE_ACTION;
X	YY_USER_ACTION;
X
Xdo_action:	/* this label is used only to access EOF actions */
X
X
END_OF_FILE
if test 34420 -ne `wc -c <'sys/share/lev_lex.c1'`; then
    echo shar: \"'sys/share/lev_lex.c1'\" unpacked with wrong size!
fi
# end of 'sys/share/lev_lex.c1'
if test -f 'sys/share/sounds/toolhorn.uu' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'sys/share/sounds/toolhorn.uu'\" to \"'sys/share/sounds/toolhorn.uu.orig'\"
  mv -f 'sys/share/sounds/toolhorn.uu' 'sys/share/sounds/toolhorn.uu.orig'
fi
echo shar: Extracting \"'sys/share/sounds/toolhorn.uu'\" \(21192 characters\)
sed "s/^X//" >'sys/share/sounds/toolhorn.uu' <<'END_OF_FILE'
Xbegin 644 Tooled_Horn
XM``M4;V]L960@2&]R;@``````````````````````````````````````````
XM``````````````````````````!!249&4V0R80$``((`10```````#DB```!
XMSJ<]K0&G/:TS``````````````````````````````"!@1/]``!&3U)-```Y
XM&D%)1D934TY$```W'@````````````````````````````#_____________
XM__________________________\```````````````````````````#_____
XM________```!`@,#!`4%!@8&!@8%!00$`P("`0$``/____________\`````
XM`0$!`@("`P,#`P,#`@("`@("`0$``/___OW]^_KY]_;T\_'P[^_N[^_P\O/V
XM^/O]``0&"`L-#Q`0$!`/#0P+"0@&!`,!`/_^_OW]_?W]_?W]_?[^__\``0$"
XM`P0$!04%!04%!04%!`,#`@$`__[]^_GW]?+P[>OIY^7EY>7GZ>SP]/G]`@8*
XM#A(5%Q@9&!<6%!$/#`H(!@0"`/_]_/S[^_O[^_O[_/S]_?[_``$#`P0$!04&
XM!@<("`D)"`<&!`,!__W[^?;R[NKEX=W;V=?7V=O>X^CN]?L""`X4&1P?(2(A
XM(!X<&183#PP*!P4#`?_^_/OZ^OKZ^OKZ^OO[_/W^``$"`P0%!@<("`D*"PL+
XM"@D(!@4#`?[[^/3OZN7?VM;2S\[/T-/7V^'F[?3[!`P3&B`D*"HJ*B@E(AX;
XM%Q,/#`D&`P'__?S[^OKZ^?GY^OK[_/W^``$"`P,$!`4&!P@)"0H*"@D(!P8%
XM`P#]^O;Q[.?AV]71S<G)R<O-T=7;XNGR^P4.%R`G+#`R,C$O*R<C'AD5$0T)
XM!@,`_OS[^OGY^?CX^/GY^OS]_P`!`@(#!`4&!P@)"PP-#0T,"@D(!@0!_OKU
XM\>KCW=?1R\?#P<#"Q,C-U-SE[_H&$1PF+C0X.CHX-3`K)B$;%A(-"04"__W[
XM^OGX]_?W]_?X^/G[_/X``0("`P0%!P@)"@L,#`P+"@D(!P8#`/WX\^WFW]?0
XMR,.^NKBZO,'(T=KE[_L'$AXG,#8Z/#PZ-S,M*"(=&!,/"P<$`/[\^OGX^/?W
XM]_?W^/GZ_/[_``$"!`4&"`D+#0X/$`\.#0L*"`0`_/CS[>;?UL['P+JULK&S
XMMKW%T-SI]P85(BXX/T-%1$(^.#(K)1\9%`\+!P0!_OSZ^?CW]_?W]_CY^?O]
XM_O\``0$"`P0%!P@*"PP-#0T,#`L*"`4!_??RZ^3;T\S$OKBSL*^QM+K"SMOK
XM^PL;*C8_14E*2$0_.#$J(QT7$0T)!0(`_OS[^OGY^?CX^?GZ^_S]_O[__P``
XM`0(#!08'"0H+#`P+"PL*"`4"_OGS[.7<U<S%OKBSL*^QM+K"SMOK_`X>+3E!
XM1TI*2$,]-BXG(!H4#PL(!0(`__[]_/S\^_O[^_S\_?W^_O[^_O[^_O\``0,%
XM!PD*"PP-#0T,"@<$`/SU[N;>U<['P+JTL;"PLK:^R-;G^0L=+3I$2DU-2D4^
XM-R\F'QD3#@H&!`(`__[]_?S\_/S\_/S\_?W^_O[]_?W]_O[_`0($!@@)"0H*
XM"@H)"`8$`?WX\>KCVM/,Q+ZZM[:VN+O"RM7D]`46)3(\1$A)1T,^-R\H(!H4
XM#PL(!0(`__[^_?W]_?S\_/S]_?[^_O[^_O[^_O\``@,%!@<("0H+"PL)"`8#
XM__KT[.7<U<S$OKBSL+"QM+O$T>'S!1<H-D%(3$U+1T`Y,"D@&A0."@8#`0#_
XM_O[]_?W]_?[^_O__``#___[^_O[^_O\!`@0&!P@("0D*"0@'!0/_^O7NY][7
XMS\C`NK6QL+"RMK[*V>K^$2,S0$A.4$]+1#PT*R(;%`\+!P0"`0#___[^_O[^
XM_O[^____``#___[^_?W]_?X``@,%!P@*"PP,"PH(!0+]^/'JX]K3S,2^N+.P
XMK["RM\#-W?`%&2LZ1DY14D]*0SHP)Q\7$0P(!0,!``#___________\```$!
XM`0#___[]_/S\_/[_`0,%!@@)"@L,#`H(!0']^/'JXMO3S,6_N;2QL+"RM\#,
XMW?$&&RT\2$]34U!)0CDO)AT6$`L'!`,!````______[^_O___P```/___O[]
XM_?W]_?X``0,%!@<("0D*"0@'!0/_^O/LY-W5SL;`N[>TL[2VN\/.W>\#%B@W
XM0TM/44Y)0CDP)Q\7$0P(!0,"`0``_____O[^_O[__P````#__O[]_?W]_O\`
XM`@,%!@<'"`D*"@H)!P0`^_3LY=S3S,.\MK*OKJ^RN<32Y/@-(#(_24]244U'
XM/C8L(QL4#@H&!`(!`/_^_O[^_O[^_O__``$!`0#___[^_?W]_O\!`P4'"0H*
XM"PL+"0@&!`#[]>[GWM;-Q;ZWL:VKK*^TOLO;[P4:+#Q'3U-34$I#.C`G'A<1
XM#`@%`P$`___^_O[^_O[^____```!`0#___[]_?W]_@`!`P4'"`@)"@L*"@@&
XM!`#Z].SDW=3,P[RVL*RKK;"UO\S>\PD=+SY*45144$E"."\F'180"P<%`P(!
XM`/___O[^_O[^_O__```!`0#___[]_?W]_@`"!`8'"0H+"PL+"@@'!`#[].WD
XMW-/,P[RVL:ZMK:^TOLO<\0<<+S]*4E5544I"."\E'!40"P<%`P(!`/___O[^
XM_O[^_O[^_P```/___OW]_?W]_@`!`P4&"`D*"@L+"PH)!@/]]^_GWM;-Q;VW
XMLJZLK*ZSO,G:[@09+#Q(4%1544M#.C`G'Q<1#0D&!`(!`/___O[^_O[^_O[^
XM____`/___OW]_?W^_@`!`P4'"`D*"@H+"PH(!0+^^/'HX-?/Q[^XLJ^MKK"V
XMOLO<[P08*CE%35!13DE".3`H'Q@2#@H'!0,!`/_^_O[]_?W]_O[^_O__``#_
XM__[^_?[^_O\!`P4'"0L,#`T,"PH(!0']]N_FW=3+P[NTKJNJJZ^VP,_A]@L?
XM,#Y)3U)13DA`-R\F'A@2#0H'!`(`__[]_?W]_?W]_?W^_O_______OW]_?W^
XM_P`"!`8("@H+"PP+"PD'!0'\]>[EW=3+PKFRK*FHJ:RTP-#C^0\C-4-,4E13
XM3D<_-BTD'181#0D'!0,!`/_^_?W]_?W]_?W^_O_______OW]_/W]_@`"`P4'
XM"0H+#`T-#0P*!P/^]^_FW=3+PKFRK*BFIJFQO,SA^`XC-4--4U543T@_-BTD
XM'!81#0D'!0,!`/_^_?W]_?W]_?W^_O[____^_?S\_/S]_O\``@0&"`H+#`T-
XM#0L)!@/_^O/JXMG0R+^XLJZJJ:JON,;8[@4:+3U(4%-34$E".3`G(!D3#PL)
XM!P0"`?_^_?W]_/S\_/S]_?[^_O_^_OW]_?W]_@`!`@0&"`H+"PP,#`P*"`0`
XM^_7MYMW4R\.\MK&NK:ZQN<33YOL/(C-`24]03TM$.S0L(QT7$@X+"`8$`@#^
XM_?W\_/S\_/S\_/S\_?W]_?W\_/S]_P`"!`8("0L,#`P+"PL*!P0!_/;OY][6
XMSL6^MK&MJZROML'0Y/D.(C-`2E!14$Q%/#4L)!X8$P\,"`8$`?_^_?S\^_O[
XM^_O[_/S\_?W]_?W\_/W]_@`"!`8'"`H+#`P,#`L*!P0!_/?PZ-_6S<2[M:^K
XMJJJMM<#0Y?H/(S1!2U!244Q%/C4M)1\9%!`,"08#`?_^_?S[^_O[^_O[^_S\
XM_/W]_/S\_/S]_@`!`P4'"0H,#`T-#0P+"08#_OCQZN'7SL6\M:^JJ*>JL;S,
XMX?<-(3-!2U%34DU&/S8N)B`:%!`-"@<$`?_^_/S[^_O[^_O\_/S\_?W]_/S[
XM^_O\_?X``@0&"0L,#0X-#0P+"`4"__KSZ^+9T,B_N+&MJJFKL+K)W/$'&RT\
XM2$Y144Y(03@O*"$;%A(."P@&`P'__OW\_/S\^_O[^_O[^_S\_/O[^_O[_?X`
XM`0,%!PD*#`T.#@X-#`D&`O[W\.C?ULW$N[2OJZFHJ[*^T.7[$24V0TQ24U%,
XM13PU+"4>&141#0H'!`'__?S[^_KZ^OKZ^OK[^_S\_/S\^_O[_/[_`0($!@@*
XM#`X.#0T-#`D&`_[Y\NKAV=#(P;NVL:ZMKK*\RMSQ!QLM.T9-4%!-1T`W,"@B
XM'!<3#PL(!0(`_OW\^_KZ^OGY^?GY^OK[^_O[^_S\_?\``@0&"`D+#`T-#0T-
XM"PD'`__Z\^OCVM#'OK>QK*BGJK"[RM[T"AXP/DA/4E%.2$$Y,"DB'!<3#PL'
XM!0'__?S[^OKZ^OKZ^OGY^?GY^?KY^?K[_/X!`P4'"0H+#`P,"PL*"0@%`O_Z
XM].WFW=7,Q+RWL:VKJZZVQ-;K`18I.45-45)/2D,\,RLE'QD5$0T*!@0!_OW[
XM^OGY^?GY^?GY^?GZ^OKZ^OK[_/W_`0,%!PD+#0X.#0T,"PD'!`']]N[GWM7,
XMP[NUKZNHIZJRP-/I`!8J.TA05%113$4]-"PE'AD5$0T)!@,`_OW[^OKZ^OKZ
XM^OKZ^OKZ^OKZ^?GZ^_S^``($!0<("0L,#0X-#0T+"`4!_/7LY-O2R+^XL:NG
XMI:>LM\?<]`LA,T),4E533TA!."\H(AP7$P\+"`0"`/[\^_KY^?GY^?GY^?KZ
XM^_OZ^OKZ^OO]_P$#!`8("@P-#@X.#0P+"`4"_??PY][5S<2\M:^JIJ:JL\'5
XM[`,9+#Q(4%1444M$/#,L)1\9%!`,"`4"__W\^_KZ^?GY^?CX^/CY^?KY^?GY
XM^OO\_@$#!0<("@P-#@X.#@T,"08#_OGRZN'8SL6\M*ZHI*.FK[W1Z0`7*SM(
XM4%154DQ%/30L)1X9%!`,"04"__W[^OGY^?GY^?GY^?KZ^_O[^_KZ^OO\_?\!
XM`P4("@P-#@X/#@T,"@8"_OCQZN'8S\>_N+*LJ*>HK[O,XOD0)#9$3E-44TY'
XM/C<N)R$;%A(."@8#`/[\^_KY^?GX^/CX^/CY^?KZ^OGZ^OO\_@`"!`8'"0L-
XM#0X.#@T-"P@%`?OT[./:T<G`N;*LJ*:GK;C)WO4,(3-"35-44T](03@P*"$<
XM%Q(."P<#`?[\^_KY^?GZ^OGY^?GZ^OKZ^?GX^?K[_/X``@0'"0L,#0X.#0T,
XM"P@%`OWX\>KAV=#'OK>PJJ6CI:Z]T>H#&BX_2E)655)+1#LS*R0>&!00#0D%
XM`O_]^_KY^?GY^?GY^?GZ^OO[^_KZ^OK\_?\``@0%!PD*"PP-#@X.#0H'!/_Y
XM\NOAV,_%O+2MJ*2CIJZ\T.@`%RL\25%555),13TT+"4?&100#`D%`O_]_/KZ
XM^?GY^OKY^?GY^OKZ^OGY^?K[_/X``@0%!PD+#`T-#@X.#0H'!0#Z\^SBV=#'
XMOK>OJJ:DIZZ[SN3\$R<X1D]455)-1C\V+28@&A41#0D&`P#]^_KY^?GY^?GY
XM^?GY^?KZ^OGY^?GZ_/X``@,%!PD,#0X/$`\/#@P)!0'\]>WDV]+)P+BQJZ:C
XMI*JUQ]SS#"(T0TY3551/2$`W+R<A&Q82#@H'!`'^_/OZ^?GZ^OKZ^OKZ^OO[
XM^_KZ^?GZ^_S^_P$$!@D,#0X/#PX.#0P)!@+]]_#GW];-Q+RTKJBCHJ:OO]7N
XM!AXR0DU45U912D(Y,2@A'!82#@L'!`#^_/KY^/CY^?GZ^OKZ^OKZ^OKZ^?GZ
XM^_S^``($!@@*#`X.#P\/#@T+"`3_^O/KXMK1R+^WL*FDHJ6KN<SC_!0I.TE1
XM5E=43D<^-2TE'QD5$0T)!0+__?OY^/CX^/GY^?GY^?GZ^OKZ^?GY^OO]_P$$
XM!@@+#0X/#Q`0$`\,"08!_/7MY-O2R<"YL:JDHJ.HM,;<]0XD-D5/55954$E`
XM-R\G(1L6$0T*!@,`_?OZ^?CY^?GZ^OKZ^OKZ^_KZ^?GY^OO]_P$#!0<)"PP,
XM#0X.#@T,"08"_??PZ-_6S<2[M*ZHI**FL<+8\0H@,T-.5%9544I".3`I(AP7
XM$@X+!P,!_OSZ^?CX^/CX^?GY^?KZ^_OZ^OKZ^_S]_P`"!0<)"PT/$!`0$`\-
XM"@<#_O?PYMS3R<"XL*>?FYN@K<':]`XE.4A26%E644I!."\G(1L5$0T)!0+_
XM_?OY^/CX^?GZ^OO[^_O[^_OZ^?CX^?K\_@`"!`8)"PT.#@X-#0P+"08"_?CQ
XMZ.#7SL6^MJ^GHJ&CK+S2[`4=,4%-5%=644I#.C$I(AP7$P\+"`0!__W[^OKZ
XM^OKZ^OKZ^OO[^_OZ^?CX^?K[_?\!`P4'"0L,#0X/#P\.#`D%`/OT[./:TLG`
XMN+"GH9^@I[;+Y/\8+C],5%A75$U%/#,J(QP7$P\+"`4!__W[^OGY^OKZ^OKZ
XM^OO[^_OZ^?GY^?K[_?\!`P4("@L-#@\0$!`/#0H&`?SU[>3;TLB_MZZEGIN;
XMHK''X?T6+4!-55E954]'/C4L)!X8$P\,"`0"__W[^OGY^?GZ^OK[^_O[^_O[
XM^OGX^/GZ_/X``@4'"@P-#Q`1$1`/#0D%`?OT[>3;TLG`MZ^HHIZ=I+''X?L6
XM+#Y,5%E954Y'/C4L)!X8%!`,"`4"__W[^OGY^?GZ^OK[^_O\_/S[^OGY^?GZ
XM_/X``@0'"@P-#@\/#P\-#`D&`OWV[N;<T\K!N*^GH9N:H*[$WOH4*SY+55E9
XM5D](/C4L)!T8$P\+"`0!_OSZ^?CX^?GZ^OO[^_S\_/S\^OGY^?G[_/X``@0&
XM"`L-#@\/$!`/#0L(!/[W\.;<T\G`N*^FGYJ9GZS!V_<2*CU,55I;5U%)/S8M
XM)!T8$P\,"`4"__W[^OGY^?KZ^_O[^_O\_/S[^OGY^/CY^_S^`0,%!PH,#@\0
XM#P\/#@P)!/_Y\NG@U\[%O;2LI)Z:G*:XTNT)(C='4UE;6%-+0C@O)B`:%1$-
XM"08#`/[\^OGY^?GZ^_O[^_O\_/S\^_KY^/GY^_W_`@0&!PD+#0X/#Q`0#PT*
XM!@'[\^OBV=#&O;6KHIR7F:*TSNL'(3=(4UI<6E1,0SDP*"`:%1$-"08"`/W[
XM^?CX^/GZ^OO[_/S\_/S\^_KY^?GZ^_W_`0,%"`H-$!(3%!,2$0X*!0#Y\NG?
XMULS"N;&HH)F6F*.VT.P((C=(5%M=6E5-1#HQ*"$:%1$-"08#__W[^OGY^?K[
XM_/S\_/S\_/S[^OGX]_?X^OS_`00'"0P.$!$1$1`/#0L(!`#Y\NG@U\_&O;6L
XMI)V9FJ*RR^<#'C1&4EE<6E1-1#HQ*"$:%1$."@8$`?[\^OGY^?GZ^_S\_/W]
XM_?W\^_GX^/CY^OS_`0,%"`H,#0\0$!$0#PP)!0'[].SBV=#'OK>NI9Z9F)^O
XMR.0!'#)$45E<6U9.13PR*2(;%A(."@8$`/[\^OGY^?KZ^_O\_/S\_?W\^_KZ
XM^?GY^OO]``($!PH,#@\0$!`/#@P*!P+]]NWEW-/*P;FQIYZ7E)FIP=[\&#!#
XM4EI=7%=01STT*R,<%Q,/"P@$`?[\^OGX^/GY^OO[_/S\_?W]_/OZ^?GY^OS^
XM``($!@@*#`T.#P\/#PT+"`3_^/#GW=3+PKFPIYZ7E9JHO]OY%2U`3UA<7%A1
XM2#XT*R,=%Q,/#`@%`O_]^_KY^?GZ^OO[^_S\_/S\_/OZ^?GY^OS^``($!PH,
XM#@\/#P\/#PX,"04`^?'HWM7+PKFOI9R4D9:DO-GW%"U!4%I>7EI32D`V+24>
XM&!,/"P@$`?[\^OGX^/GY^OO[_/S\_/S\_/OZ^?CX^?O]``($!PH,#@\0$1(2
XM$0\-"04`^?#HWM7,P[JPIIR4D).@M]3S$2M`3UE>7EI32D`V+24>&!,/#`@%
XM`O_\^OGX^/GZ^_O\_/S\_/S\_/OY^/CX^?O]_@`#!@D,#Q$2$Q,2$A`-"@8`
XM^?'GW=/)P+:LHI>0C9.CO-KY%B]#4EI>75E22#XT*R,<%Q(."P<%`?_]^_GY
XM^?GZ^_S\_?W]_?W]_?SZ^?CX^/K[_0`"!`<+#0\0$1$2$0\-"@8`^?'HW];,
XMP[JPIIR4CY*?MM/S$2H_4%I?7UM42D`W+B4>&!,/#`D%`O_]^_KY^?GZ^OO[
XM_/S\_/S\_/OZ^/CX^?K\_0`"!0@+#0\0$1(3$Q$/#`@"_/7LX]K0Q[ZUK**9
XMD9"9J\;E!"`W255<7EQ63D0Z,2DA&Q82#@H'`P#]^_KY^?GY^OO\_/S]_?W]
XM_/SZ^?CW^/G[_0`#!0@,#@\0$1(2$A$."P<#_/7LX]K2R<&XKZ6<E92:JL/A
XM_QLR15):75M63T4[,BDB'!82#@L'!`'^_/KY^/GY^OO[_/S\_/W]_?S[^OGX
XM^/G[_/X``P8*#0\1$A,4%!,1#@H%__COY=S2R+^VK:.:E)&7IK[<^A<O0E%9
XM75Q844@^-2PD'1@4$`P)!0+__/KY^/CY^OO[_/S\^_O[^_OZ^?CX^/G[_0`#
XM!0@*#`X0$1(3$Q(0#0D%`/GPY][5R\&XKZ:=EI.7I;O7]1(J/DU76UM844D_
XM-BTE'QD4$`T)!@/__?OY^/CX^?K[^_S\_/S\_/S[^OKY^OO\_O\!`P4("PT.
XM#Q`1$A(1#@H&`/GQY][4R\&XKJ29DH^5I+S9]Q0M05!975Q844@^-2PD'A@4
XM$`P(!0+__?OZ^?GY^OO\_/W]_?W]_?S[^OCX^/CZ_/X``@0'"PX0$A(3$Q,1
XM#@H&`?KQZ-_7SL6\M*J?EI"1G+'-[`LF.TQ875Y;5$Q".3`G(1L6$@X*!P,`
XM_?OY^/CX^?GZ^_O\_/S]_?W\^OGX^/GZ_/X``P4'"@P.$!$2$Q,2$`T)!/WV
XM[>7<TLG`N*^EG):4FZK"W_T8,$-065Q;5D]&/3,K(QT8%`\,"`4!__W[^OGY
XM^?KZ^_O[^_O[_/S\^_KY^?GZ^_W_`0,&"0T/$!(3%!02$`T*!?_X\.?>U<S#
XMNK"FG)20E**ZU_83+$!/65U=65))/S8M)1X9%1$-"04"__SZ^?CX^/GZ^OK[
XM^_KZ^_O[^_KY^?K[_?\``@0&"`L-#Q$2$Q,2$`T*!0#Y\NG?ULW$N[*IH)B5
XMEZ.XT_`,)#E)5%E:5U)*03@O)R$;%A(."@<#`/W[^?CX^/CY^OKZ^OKZ^OO[
XM^OGY^/GZ^_X``@0'"@T/$1(3$Q,2$`X+!P+[].OBV,[%N[*GG9..D9VTT.\-
XM)SQ,5EM<65)+03@O)R`:%1$."@8#__WZ^/?W^/GZ^_O\_/S\_/S[^_KX^/CX
XM^OS^``,&"0P.$!(3$Q,2$`X+!P'[].OBV=#'OK2JH)>1D9NNRND'(SE*5EQ=
XM6U5-1#HQ*"(<%Q,/"P<$`?[\^OGX^/GY^OO[^_O[^_S[^_KY^/CY^OS^``,&
XM"`L.$!$1$A(2$0\,"03]]N_FW-/)P+>LH)6-BY2IQ>0#'S9)5EQ>7%9/1CPS
XM*B,=%Q,/"P@$`/[[^?CX^/GZ^_O\_/S\_/S\^_KX]_?X^?K\_@`#!@H.$!$2
XM$Q,3$0\-"@8`^?#HW]7,P[FOI)B/BY"AN]KZ%S%$4UM>75A11SXU+"0>&!00
XM#`@%`?_\^OGX^/GY^OO[_/S\_/S\_/KY^/CX^OO]_P$#!@@*#0\0$1$1$0\-
XM"@8"^_3LX]K1R+^UJY^5CY";LL_N#"8[3%9;7%E22D$X+R<@&A82#@H&`O_\
XM^OGX]_CY^OO[^_O[^_O\^_KY^/CX^/G[_@`#!@@+#0\1$A,3$Q$."P<"_/7M
XMY-O2R<"VK**8D9":KLGH!R(X251;7%I43$,Z,2@B'!82#@L'`P#]^_GX^/CY
XM^OO[^_O[^_O[^_KY^/CX^?O]_P$#!@@+#A`1$A,3$A$/#`@$_?;MY-O1R+ZT
XMJ9V2BXN6K,GI"20[3%A>7UQ53D0[,BHB'!82#@H&`__]^_GW]_CX^?K[_/S\
XM_/S\_/OY^/?W^/K\_@`"!0<)#`\1$A04$A$/"P@#_O?OYMW3R;^UJIZ3BXN5
XMJL?G!R(Y2U==7EM6340Z,2DB'!<2#@H'`P'^^_GX^/CY^OO\_/S\_/S\^_KY
XM^/?W]_G[_?\!`P8("PX0$A04%!02#PL&`?KQZ-[4R\&VJIV1AX6/I,+D!"$Y
XM2U=>7UQ63T4[,BHB'!<2#@L'!`'^^_GX^/CY^OO\_?W]_?S\^_OY^/?W]_CZ
XM_/X``P8)#0\1$Q04%!,1#@H%`/GRZ>#7S<2ZL*.7C(>-G[G:^A@R151<7UY8
XM44<^-"LC'1<3#PL(!0+__/KY^/CX^?K[_/S\_/S\_/OZ^??W]_CY^_W_`@4(
XM#`\1$Q04%!01#@H&`?KRZN'8S\:]LZF=DHR.F[/1\1`J/T]975U:4TI`-RXF
XM'QD5$0T)!@/__?OY^/CY^?K[^_S\_/S[^_OZ^??W]_?Y^_W_`@4(#`X0$A05
XM%102#PL'`OWV[>3;T\K"N;"DF9&/EJG$Y`0?-DE56UU;5$U$.C$H(1L6$@X*
XM!P0!_OOY^/CX^?KZ^_S\_/S\_/O[^OGX^/GZ_/X``@0&"@T/$1,4%103$0T)
XM!/[W[^?>U<S"N:ZCF(^,DJ7`X``<-$=46UY<5U!'/30K)!T8$P\+!P0!_?OY
XM^/CX^?K[_/S\_/S\^_KY^/?W]_CZ_/X!`P4("@T/$1(3$Q(1#@L(`_[W\.C?
XMU\[%N["DF(^+DJ.^WO\<-$=46UY<5T]&/30K)!T8$Q`,"`4"_OSZ^/?W^/GZ
XM^_S\_/S\_/OZ^??V]O?Y^_W_`@4'"@X0$1,4%!03$0\+!0#Y\NC?ULW$N[&G
XMG)&-D9^XUO84+D)065U<6%%(/C4L)1X9%1$-"@<#`/WZ^?CW^/GZ^_S\_?W\
XM_/S[^?CW]_CY^_S^_P(%"`L.$!(3%!44$P\+!P+[\NG@U\[%N[&FFY&,CYVU
XMT_,2+$%06EY=65)*0#8M)1\9%!`,"`4"__W[^?CX^/G[_/S]_?W\_/OZ^?CW
XM]O;X^?O]_P$$!PH.$A05%A85$Q`-"`/\]>SCVM'(OK6JGI.,C)>LR>D((SI+
XM5EQ=6E1,0SDP*"(<%A(."P<$`?W[^?CX^/GZ^_O\_/S\_/O[^OCW]_?X^?O^
XM`0,&"0P/$1(3%!03$0\,"03_^/#HW];-Q+FMH)2*B)&DP>(#(#=*5EU?7%5.
XM13LR*2(<%Q(."P<$`?W[^??W]_CY^OO\_/W\_/S\^_GX^/CX^?O]``($!PD,
XM#Q$3%!44$Q$."03_^._GWM3+PKFNHI6,B9&DP.`!'C9)55Q?7%9/13PS*B,=
XM%Q,/"P@%`O[\^OCX^/CY^OO\_/S\_/S[^OCW]O;W^/K\_@$%"`L/$1(4%144
XM$Q$."@4`^O/JX=C/QKRQI9F.B(R=M];W%B]#45M>75A12#XU+"4=&!00#`D%
XM`P#]^OCX^/CY^OO\_/S\_/S\^_KX]_?X^?K\_@`"!`<*#1`2$Q04%!(/#`@#
XM_/7LXMG0QKRRIYN1C(Z;L]'Q$"H_3EA=75E224`W+B8?&100#`D%`__]^_GX
XM^/CY^OO\_/S\_/S\^_KY^/?W]_G[_?\"!0@,$!,6%Q<6%1,0#`<!^_3KX=G/
XMQKRRIYN0B8J7K\[O#RH_4%I>7EI32T$X+R<@&A41#0D&`O_\^OGX]_CY^OO\
XM_?W]_?S\^_KY]_?W^/GZ_/X!!`<+#Q(3%186%1,0#0D#_?;MY-O1R+^UJY^4
XMC8V7K,CH!R,Y2E9;7%I32T,Y,"DA&Q82#@H'!`'^_/KY^/CY^OO\_?W]_?S\
XM^_KY^/?W^/G[_/\"!0@,#A`1$A,3$A$/#0H%__CQZ-_6S,.YK:&4BXB1I</D
XM!2$X2E9=7EM53D4[,BDB'!<2#@L'!`'^^_GX]_CX^?O\_/W]_?W\_/OZ^??W
XM]_?Y^_T``P<*#A$3%!04%102#PL&`/GQZ-_6S,.YK:&3B(.*GKW@`2`X2UA?
XM85Y84$8\,RHC'!<2#@H'!`'^^_GX]_CY^OO\_?W]_?S\^_KX]_;U]?;X^OT`
XM`P<+#A$3%!45%102$`P'`OOTZ^+8S\6[L:69CXJ-F[/2\Q(L05!975U94DD_
XM-BTD'A@4$`T)!@/__?OY^/CX^?K[_/S\_/S\_/OZ^??W]_CY^_W^`00'"PX1
XM$Q06%Q84$0T(`_STZ^+9S\:\LJ::CXF*F+#/\1`K0%!:7UY:4TI!-RXF(!H5
XM$0T)!@+__/KY^/CX^?K[_/W]_?S\_/OZ^/?W]_CY^_T``P8)#`\1$Q05%102
XM$`P'`_SU[./:T<B_MJJ>DHJ*E:S+[`PH/4Y875Y:5$M"."\H(!H5$0T)!@(`
XM_?KX]_?X^?K[_/S\_/S\_/OZ^?CW]_CZ^_T``@4("PX1$Q05%102$`P(`_WV
XM[N7<TLB^M*F=DXR+EJS)Z@HE/$U875Y;5$Q".3`G(1L5$0T*!P0!_OSZ^?GY
XM^?K\_/W]_?W]_/OZ^??V]O?Y^_T``P4(#`X0$A,3%!,1#PP(`_WV[>7<T\G`
XMMJR@E(R+E:O)Z@HE/$U875Y;5$M"."\G(!H6$@X*!P0!_OOY^/?X^?K[_/W^
XM_O[^_?SZ^??V]O?X^OW_`0,&"0P.$!(3%144$Q`+!@'Z\>C?U<O!MZR?D8:"
XMBZ'`X@,A.4Q97V!=6$]%/#,J(AP6$@X*!@,`_OOY^/?W^/G[_/W]_?W]_/OZ
XM^/?V]?;W^?O]``0'"@T/$1(4%!04$@\,!P+[\^KAU\[$NJ^CE8F#B9NWV?L:
XM-$A67F!>65!'/3,J(QP7$P\,"04"__SZ^/?W^/GZ^_S]_?[^_?W[^OGW]_?X
XM^OO]_P(%"0L-#Q$2$Q03$A`,"`/\\^OBV,W$NK"DF(V(C)RVUO@7,$547%]>
XM65%(/C4L)!X8$P\+"`0!_OSZ^/?W^/GZ_/W^_O[^_?W[^OCW]_?X^OO]``(%
XM"0P/$1,5%144$Q`,!P+[\^K@U\W$NK"CE8J%B9JVU_D9,T=67F%?65)(/S4L
XM)1X8$P\+"`0!_OSZ^/?X^/G[_/W^_O[^_OW\^OCW]_?X^?O]``,%"`P.$!$3
XM%!03$@\,"`/\\^OAV,[$N:Z@D86`AIJXW/\?.4Q98&)?65%'/30K(QT7$@X*
XM!@0!_?OY^/?X^/K[_?[______OW\^OCW]?7V^/K]``,&"0P/$1(3$Q,3$0X+
XM!@'[\^KAV,_&O;*FF8V'BIBRT_45,$5476!?6E)(/C0K)!P7$P\+"`4"`/W[
XM^?CX^?K[_/W^_O___OW\^OGW]_?W^?K\_@$$!PH-#Q$2$Q,3$@\,"03]]NWD
XMW-/*P;>KG8^%A9"HR.P.*D%276)A7%1+03<N)1\9%!`,"08"`/W[^?CX^/GZ
XM_/W^______[\^_GX]_;W^/K\_@`#!@D,#Q`2$Q,3$@\,"`/]]N[EW-/*PKBM
XMH)*(AI"GQ^H,*3]06V!@7%5+03<N)1\9%!`,"`8#`/W[^?CW^/GZ^_W]_O[^
XM_OW\^_KX]_?X^?K\_@`$!PH.$1,4%144$Q$."@7^]^[EV]+(OK6IFX^&A9&H
XMQND**#]06V%A759-0SDP)R`:%!`,"08#`/W[^??W^/GZ_/W^______[]^_GX
XM]_?W^?K\_@$$!PP0$A06%A85$Q`-"`/\].OBV,[$NJ^CEHJ$AI6QTO46,495
XM7F%@6U-)/S4L)!X8$P\+!P4"__W[^?CX^?K\_?[_````__[\^OCW]O7V]_K\
XM_P($!PL-#A`2$Q,3$A`-"03^]^_FW=3+PKFNH96+AX^CP>,%(SM.6F!@759.
XM0SDP*"`:%1$-"@<$`?[\^OCW]_CZ^_S^______[]_/KX]_?W^/GZ_0`"!0D,
XM$!(3%!04$Q(/"P8`^?#FW=3+PKFNHI2*AHV@O-X`'SE,66!A7EA/13LQ*"$;
XM%A(."P@$`?[\^?CW]_CY^_W^_O____[]^_KX]_?W^/K\_@`#!@@+#A`1$Q04
XM$Q$."@8`^?+HW]?.Q;VSIIJ/BHV=M]?Y&#)&5%Q?75A01STT*R,=%Q,/"P@%
XM`O_\^OGX^/CY^OS]_O[^_O[\^_KY^/?W^/K\_@`#!0@+#0\1$A(3$Q(/#`@"
XM_/3LX]K1R+^TJ)J.AXF7L='S%"]$4UQ@7UI324`V+24?&100#`D%`O_\^OCW
XM]_CY^OS]_?[^_OW\^_GX]_;V^/G[_@$$!PH-$!(3$Q03$A`-"@8!^O/KXMG0
XMQ[VSIYR1BXV;L]/U%"Y#4EM>75E123\V+24>&!,/#`D%`@#\^OGW]_CY^OS]
XM_O[^_O[]_/KY^/?W^?K\_@`#!@D-#Q$3%!03$Q$."@8`^?+IX-?/QKVSIYJ/
XMB8R:LM+T$RY#4UU@7UM32D`W+B4?&100#`@&`__]^_GX^/CY^OS]_O[__O[\
XM^_GX]_;W^/G\_@`#!0@+#A`2$A,3$A$."P@"_/7MY-O2R<"WK*"5C8R6JL?H
XM""4\35A>7EM53$(Y,"<A&Q41#0H'!`'^_/KX^/CY^OO\_?[^_O[]_/KY^/?X
XM^/G[_/W_`@4)#`\1$Q05%102#PL%__?OY=S3R;^UJIV2BHB2I\/D!B,[35A>
XM7UQ6340Z,2DA&Q81#0H'!`'^_/KY^/CY^OO\_?[^_O[]_/OY^/?W]_CZ_/\"
XM!`<*#0\1$Q04%!,1#@H%_O?OYMS2R+ZSIYJ-@X*-I<7J#"E!4EUB8EY73D4Z
XM,2@A&Q41#0D%`O_\^?CW]_?X^OS]_O_____^_/OY]_;V]_CZ_/X!!`<+#A$3
XM%!44$Q(/#`@#_?7MY-K1R+^UJYZ2BHJ4J<?G""4\3EI?8%Q5340Z,2@A&Q41
XM#0H&!`'^_/KY^/CY^OS]_O____[]_/KY]_;V]OCZ_/X!`P8*#1`2$Q04%!,1
XM#0H%__CPY][4RL"VJIV0AX2.I,/F""4^4%MA8EY73D0Z,2@@&A40#`H'!`'^
XM^_GX]_CX^OO]_O__`/_^_?OY^/?V]O?Y^_T!!`<*#A`1$A,4%!,1#@H%__CP
XMY][6S,.ZKI^1A8&(G+O@`R,\3UMB8U]83T4[,BDB&Q82#@H'!`'^_/KX]_CX
XM^?O\_?[^_O[]_/OY^/?V]_CY^OT``@4)#`X1$Q45%!,2#PL&`/GRZ=_6S<2Z
XMKZ&3AX*)G;S@`B$Z35E?8%U634,Z,2@A&A41#0D'!`'^^_KX]_CX^OO]_O__
XM___^_/OY^/?V]O?Y^_T``@4("PX1$Q04%!,1#@L&`?KSZ^/:TLB_M*>:CXF-
XMG;C9^A@Q15)97%I4340Z,2DA&Q82#@L(!0+__/KY^/CY^OO\_?[____^_?OY
XM^/CX^/CY^_W_`00(#`\0$1,4$Q,1#PL'`OOT[.+9T,B_M:B:CXN0H;S<_1LS
XM1E)96UE42T(Y,"@@&A00#`D&`P#^_/KY^/GY^OS]_O_____^_?OZ^/?W]_CY
XM^_W_`@0'"PX0$A,3$Q(0#@L&`?SU[>3<T\K"N*R?E(^3HKS;^Q@O0DY55U50
XM24`W+R<@&A41#0D'!`'__/KY^/CY^OS]_O_____^_?SZ^?CW]_CZ^_W_`@4(
XM"PT/$1(2$A$/#0H&`?SU[N;?UL_&O;*GG9B9I+G4\P\G.D=04U-/2$`X+R@A
XM&Q82#@H(!0(`_OSZ^?GY^OO]_O[____^_?OZ^?CX^/CY^_S_`0,&"0L-#Q`1
XM$1$0#@P(!/[W\.G@V=#)P+6IGYF9H[C3\0TD-T5-45!-1C\V+B<@&A41#0H'
XM!`(`_?OZ^?CY^?O\_?[____^_OS[^OCX^/CY^OO]_P(%"0P/$1(2$A(1#PP(
XM`__Y\NKCV]++P[FOI9Z=I;?0[`<>,D!)34U*13XW+B<A&Q41#@L(!0,`_OSZ
XM^?GY^OO\_?[____^_?S[^OGX^/GZ^_S^`0,%"0P-#Q`0$`\.#`H'!/_Y\^SE
XMW=;/Q[VSJJ2BJ;G/Z00;+CQ%2DM(0STV+B<@&A41#0L(!@,!__W[^OGY^OO\
XM_?[^__[^_?S[^OGY^?GZ^_S^``(%"`H,#A`0$!`/#@L(!/_Z\^SEWM?0R<*X
XMKZFFK+G-YP`6*3A!1DA&0CLT+28@&A41#@L(!@,!__W[^OGY^OO\_?[^___^
XM_OW\^_KY^?K[_/W_``($!@D+#0X/$`\.#0H'!`#Z]>[HX=K4S<2[LJJGK+G.
XMYP`6*#8_1$9$0#DS+"4?&100#0H(!0,!__W[^OGZ^OO\_?[______OW\^OKY
XM^?GZ^_S^``($!@D+#`T-#0T-#`H(!0'\]_'KY-[8T<G`MZ^JJ[?*XOL1(S([
XM04-"/C@R*R4>&141#0H(!@,!__W[^OKZ^OO\_?[^_____OW\^_KZ^?KZ^_S]
XM_P$#!0@+#0X/#PX-#`H'!`'\]_+KY-[7T<K`M["LL+O-Y/P1(S`Z/T$_.S8P
XM*2,=&!00#`H'!0,!__W\^_KZ^_O\_?[______OW\^_KY^?GZ^_S^_P$#!0@*
XM#`T.#@X-#`H'!`'\]_+LYN#:U,W$N[6RM<#0Y?L/("TU.ST[.#,N*"(<%Q,/
XM#`D'!0,!`/[]_/O[^_S]_?[______OW\^_KZ^?KZ^_S^_P$#!`8("@L,#0T-
XM#`H(!@+^^O3OZ>/=U]#'O[>TMK_/X_@,'2HS.#HY-S(M)R`;%A(.#`D'!0,"
XM`/[]_/O[^_S\_?[^_____OW]_/OZ^OK[_/W^``(#!0<)"@H+"PL+"@D'!`'^
XM^O7OZN7@V]7.Q;ZZN;_,W_,'&"4O-3@X-3$L)B$;%Q,/#`H(!@0"`/_]_/O[
XM^_O\_?[^_____O[]_/O[^OKZ^_S]_P$"!`8'"0H+#`P,"PD'!0+_^_;Q[.?A
XMW-;/Q[^ZNL#.X/0'%R0M,S4U,R\J)!\:%A(."PD'!0,!__[\^_O[^_O\_?[^
XM_____O[]_/OZ^OKZ^_S]_P`"`P4("@L,#`P+"PD'!0+_^_?R[>GDW]K3S,7`
XMOL/.W_$#$A\H+C$R,"TH(QX9%1$-"PD'!00"`/_^_?S[^_S\_?[^_O[^_O[]
XM_/S[^_K[^_S]_@`!`P4'"`D+"PL+"PH(!@,`_?GT[^KEX-S7T,K%P\?0W>W^
XM#1HD*BXO+BLH(QX:%A(/#`D'!0,"`/_^_?S\_/S]_?[^_____O[]_?S[^_O[
XM_/W^_P`!`@,%!P@)"@H*"0@'!@0!_OKV\N[IY>'<U]',R<K0V^GX!Q0=)2DK
XM*RDF(AX:%A(.#`H(!@0#`?_^_?S\_/S\_?W^_O[^_O[]_?W\_/S\_/W]_O\!
XM`P0&!P@)"0H*"0@'!0,!_OOX]/#LZ.3?VM3/R\O0VNCW!1(;(B<I*2<E(1T9
XM%1$.#`D'!@0#`?_^_?S\_/S\_?W^_O[^_O[^_?W\_/S\_/W]_O\``@,%!@<(
XM"0D)"0@'!0,!__SX]/'MZ>7@V];2S\_4W>GV!`\8'R,F)B0B'QL7%!`-"PD'
XM!@0#`0#__OW\_/S]_?[^_O[___[^_OW\_/S\_/W]_O\``0($!08&!P<("`<&
XM!00"`/WZ]_/P[.CDX-O7U-/6W>?S``L4&Q\B(R(@'1H6$Q`-"PD'!@0#`@'_
XM_OW]_/S]_?W^_O[^_O[^_OW]_/S\_/W]_O\``0(#!08'!P@("`<&!0,"`/[[
XM^/7R[NOHY.#<V-;8W>7P_`<0%AL?("`>'!D6$P\-"PD'!@0#`@$`__[]_?W]
XM_?W^_O[^_O[^_OW]_?W\_?W]_O\```$"!`4&!P<'!P<&!00"`?_\^?;S\.SJ
XMY^/?W-K:WN;P^@0-$Q@<'1T<&A@5$@\-"PD'!@0#`@$`__[^_?W]_?[^_O[^
XM_O[^_O[]_?W]_?W]_O__``$"`P0%!@8&!@8&!0,"`?_]^_CU\_#MZN?DX=_?
XMX>;M]O\(#A08&1H:&!84$0\,"@@'!@0#`@$``/_^_OW]_?[^_O[^_O[^_OW]
XM_?W]_?W^_O__``$"`P0%!08&!@8%!00#`0#^_/KW]/+O[.GFXN#@X>;N]O\'
XM#1(6%Q@8%A02$`X,"@@'!00#`@$`___^_OW]_?[^_O[____^_O[^_?W]_?W]
XM_O[_``$"`@,$!04%!04$!`,"`?_^_/KX]O3Q[^WIY^7DY>GO]OX$"@\2%!45
XM%!(1#PP+"0<&!00#`@$``/_^_O[^_O[^_O[______O[^_OW]_?[^_O[_```!
XM`@,#!`0$!`0$!`,"`0#__OSZ^/;S\>_LZ>?FY^KO]OT#"0T0$A,3$A$/#0L*
XM"`<%!`,"`0$`___^_O[^_O[^__________[^_O[^_O[^_O[__P`!`0(#`P,$
XM!`0$`P,"`0'__OW[^??V]/+O[>OIZ>SP]OP"!PL.#Q`0$`X-"PH(!P8$!`,"
XM`0$``/___O[^_O[____________^_O[^_O[^_O___P```0("`P,#`P,#`P("
XM`0#__OW\^OGW]O3S\>_M[>_R]OL`!`@+#`T.#0P+"@@'!@4$`P("`0$``/__
XM__[^_O[______________O[^_O[^_O___P```0$"`@("`@("`@(!`0#___[\
XM^_KY^/?U]/+Q\?+T]_O_`P8("@L+"PH)"`<&!00#`@(!`0$``/__________
XM_________________________P````$!`0$!`@("`0$!`0``__[]_?S[^OGX
XM]_;U]/7V^/O_`00&!P@("`@'!@4%!`,"`@$!`0````#_________________
XM__________________\````!`0$!`0$!`0$!````___^_OW\_/OZ^OGX^/CY
XM^OS^``($!04%!04%!`0#`@("`0$!``````#_________________________
XM__________\``````````0$`````````_____O[^_?W]_/S[^_O[_/W_``$"
XM`@,#`P,"`@(!`0$!``````````#_________________________________
XM__\`````````````````````______________[^_O[^____````````````
XM````````````````````````````````````````````````````````````
XM````````````````````````````````````````````````````````````
XM````````````````````````````````````````````````````````````
XM````````````````````````````````````````````````````````````
XM``````````````````````````````````````````````````!#3TU-````
XM$@`!```W%@`(0`VL1````````$U!4DL````"``!)3E-4````%#P``'\`?P``
XM````````````````05!03````:A39#)A``(```````````!%]```!``*`*``
XM`'E%]````@`*J8$``'D(Q2LCU@`````@5@`BW@!$]`````%$!P`%]"(`__\%
XM]"4``_]F]!,`#`!(`0`&`(0``(Q(7@!G]```#``%]"<``_\*J:,``+,*J80`
XM`)$*J"0,`*4-`2(*J80``+-A]```!`!']```#@`-`+4BK@`@`'0.D)X-`3X*
XMJ80``+,-`2(*J80``+-A]```!`!']```#@`-`+4BK@`@`'0.$*P-`3X*J:0`
XM`)<*J`0```0*`*```.9"@0!(@@!$]"`___]$@T9(`49$]````"!$]$```_\A
XMT@!6@0`&WR!'!B-$]$8`#`!%@T`$"```````"0`C`````````````````'@`
XM```$``0```````#\`/___X`````!`0`&455N:71S````````````````````
XM`````````````````````0(`!B!S86UP<P``````````````````````````
XM`````````````````````````````````````"<`+P`/__;_^0`!````````
XM````````````````````````````````````````````````````````````
XM````````````````````````````````````````````````````````````
XM`0````%X````>````%9N(&EN=&4@9&5L87,@9IIR<HIN(&1U(&AA<B!S=&%R
XM=`M4;V]L960@2&]R;@(```!!249&4V0R80````````````!!249&4V0R80``
XM`````````````````````````````*<]K0$``#DB```!SC]^4')O9W)A;2!K
XM86X@:6YT92!D96QA<R!FFG)RBFX@9'4@:&%R('-T87)T870@<')O9W)A;6R*
XM;FMN:6YG(&D@:6YS=(IL;&YI;F=S<')O9W)A;6UE="!&:6QD96QN:6YG+B!6
XM:6QL(&1U()IP<&YA($9I;&1E;&YI;F<@;G4_F%`````:`"D`#P)J`S$`*@`#
XM`FT#/0`I``\"00,B`0`````:`"D`#P%0`?$`*@`#`FT#/0``````````````
XM```:`"P`%@$^`=P`*@`#`FT#/0`````````````````:````````````````
XM``````````````````````$````!>````'@```!6`'&XO!RF````'`!6``!7
XM<W1A``,`"@`!__\````````````"__\````>```````#__\````\```````$
XM__\```!:````````````````````````````````````````````````````
X/````````````````````
X`
Xend
END_OF_FILE
if test 21192 -ne `wc -c <'sys/share/sounds/toolhorn.uu'`; then
    echo shar: \"'sys/share/sounds/toolhorn.uu'\" unpacked with wrong size!
fi
# end of 'sys/share/sounds/toolhorn.uu'
echo shar: End of archive 24 \(of 31\).
cp /dev/null ark24isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 31 archives.
    echo "Now execute 'patchit.sh'"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
