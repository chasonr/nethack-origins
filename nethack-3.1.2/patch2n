Path: uunet!news.tek.com!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v17i089:  nethack31 - display oriented dungeons & dragons (Ver. 3.1), Patch2n/33
Date: 11 Jun 1993 00:11:38 GMT
Organization: Tektronix, Inc, Redmond, OR, USA
Lines: 1773
Approved: billr@saab.CNA.TEK.COM
Message-ID: <1v8ijq$j29@ying.cna.tek.com>
NNTP-Posting-Host: saab.cna.tek.com
Xref: uunet comp.sources.games:1777

Submitted-by: izchak@linc.cis.upenn.edu (Izchak Miller)
Posting-number: Volume 17, Issue 89
Archive-name: nethack31/Patch2n
Patch-To: nethack31: Volume 16, Issue 1-116
Environment: Amiga, Atari, Mac, MS-DOS, Windows-NT, OS2, Unix, VMS, X11



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 14 (of 33)."
# Contents:  patches02o sys/amiga/charwin.uu
# Wrapped by billr@saab on Thu Jun 10 16:55:03 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'patches02o' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'patches02o'\" to \"'patches02o.orig'\"
  mv -f 'patches02o' 'patches02o.orig'
fi
echo shar: Extracting \"'patches02o'\" \(54581 characters\)
sed "s/^X//" >'patches02o' <<'END_OF_FILE'
X*** /tmp/da10711	Tue Jun  1 16:03:40 1993
X--- include/winami.h	Thu May  6 11:19:19 1993
X***************
X*** 9,18 ****
X  /* descriptor for Amiga Intuition-based windows.  If we decide to cope with
X   * tty-style windows also, then things will need to change. */
X  /* per-window data */
X! struct WinDesc {
X      xchar type;			/* type of window */
X      boolean active;		/* true if window is active */
X      xchar offx, offy;		/* offset from topleft of display */
X      short rows, cols;		/* dimensions */
X      short curx, cury;		/* current cursor position */
X      short maxrow, maxcol;	/* the maximum size used -- for INVEN wins */
X--- 9,21 ----
X  /* descriptor for Amiga Intuition-based windows.  If we decide to cope with
X   * tty-style windows also, then things will need to change. */
X  /* per-window data */
X! struct amii_WinDesc {
X      xchar type;			/* type of window */
X      boolean active;		/* true if window is active */
X+     boolean wasup;		/* true if menu/text window was already open */
X+     short disprows;		/* Rows displayed so far (used for paging in message win) */
X      xchar offx, offy;		/* offset from topleft of display */
X+     short vwx, vwy, vcx, vcy;	/* View cursor location */
X      short rows, cols;		/* dimensions */
X      short curx, cury;		/* current cursor position */
X      short maxrow, maxcol;	/* the maximum size used -- for INVEN wins */
X***************
X*** 31,37 ****
X  #endif
X  #define FLMAP_INGLYPH	1	/* An NHW_MAP window is in glyph mode */
X  #define FLMAP_CURSUP	2	/* An NHW_MAP window has the cursor displayed */
X!     long flags;
X      short cursx, cursy;		/* Where the cursor is displayed at */
X      short curs_apen,		/* Color cursor is displayed in */
X  	  curs_bpen;
X--- 34,42 ----
X  #endif
X  #define FLMAP_INGLYPH	1	/* An NHW_MAP window is in glyph mode */
X  #define FLMAP_CURSUP	2	/* An NHW_MAP window has the cursor displayed */
X! #define FLMAP_SKIP	4
X! #define FLMSG_FIRST	1	/* First message in the NHW_MESSAGE window for this turn */
X!     long wflags;
X      short cursx, cursy;		/* Where the cursor is displayed at */
X      short curs_apen,		/* Color cursor is displayed in */
X  	  curs_bpen;
X***************
X*** 40,46 ****
X  /* descriptor for intuition-based displays -- all the per-display data */
X  /* this is a generic thing - think of it as Screen level */
X  
X! struct DisplayDesc {
X  /* we need this for Screen size (which will vary with display mode) */
X      uchar rows, cols;		/* width & height of display in text units */
X      short xpix, ypix;		/* width and height of display in pixels */
X--- 45,51 ----
X  /* descriptor for intuition-based displays -- all the per-display data */
X  /* this is a generic thing - think of it as Screen level */
X  
X! struct amii_DisplayDesc {
X  /* we need this for Screen size (which will vary with display mode) */
X      uchar rows, cols;		/* width & height of display in text units */
X      short xpix, ypix;		/* width and height of display in pixels */
X***************
X*** 63,69 ****
X  			int qual;
X  		} mouse;
X  		long menucode;
X! 	} u;
X  } WEVENT;
X  
X  #define MAXWIN 20		/* maximum number of windows, cop-out */
X--- 68,74 ----
X  			int qual;
X  		} mouse;
X  		long menucode;
X! 	} un;
X  } WEVENT;
X  
X  #define MAXWIN 20		/* maximum number of windows, cop-out */
X***************
X*** 70,80 ****
X  
X  /* port specific variable declarations */
X  extern winid WIN_BASE;
X  #define NHW_BASE	6
X  
X! extern struct WinDesc *wins[MAXWIN + 1];
X  
X! extern struct DisplayDesc *amiIDisplay;	/* the Amiga Intuition descriptor */
X  
X  extern char morc;		/* last character typed to xwaitforspace */
X  extern char defmorestr[];	/* default --more-- prompt */
X--- 75,89 ----
X  
X  /* port specific variable declarations */
X  extern winid WIN_BASE;
X+ extern winid WIN_VIEW;
X+ extern winid WIN_VIEWBOX;
X  #define NHW_BASE	6
X+ #define NHW_VIEW	7
X+ #define NHW_VIEWBOX	8
X  
X! extern struct amii_WinDesc *amii_wins[MAXWIN + 1];
X  
X! extern struct amii_DisplayDesc *amiIDisplay;	/* the Amiga Intuition descriptor */
X  
X  extern char morc;		/* last character typed to xwaitforspace */
X  extern char defmorestr[];	/* default --more-- prompt */
X*** /tmp/da10719	Tue Jun  1 16:03:42 1993
X--- include/winprocs.h	Tue Apr 27 17:00:10 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)winprocs.h	3.1	92/09/19	*/
X  /* Copyright (c) David Cohrs, 1992				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)winprocs.h	3.1	93/04/26	*/
X  /* Copyright (c) David Cohrs, 1992				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 45,54 ****
X--- 45,60 ----
X  #endif /* COM_COMPL */
X      void FDECL((*win_number_pad), (int));
X      void NDECL((*win_delay_output));
X+ #ifdef CHANGE_COLOR
X+     void FDECL((*win_change_color), (int,long,int));
X+     char * NDECL((*win_get_color_string));
X+ #endif
X  
X      /* other defs that really should go away (they're tty specific) */
X      void NDECL((*win_start_screen));
X      void NDECL((*win_end_screen));
X+ 
X+     void FDECL((*win_outrip), (winid,int));
X  };
X  
X  extern NEARDATA struct window_procs windowprocs;
X***************
X*** 96,104 ****
X--- 102,115 ----
X  #endif
X  #define number_pad (*windowprocs.win_number_pad)
X  #define delay_output (*windowprocs.win_delay_output)
X+ #ifdef CHANGE_COLOR
X+ #define change_color (*windowprocs.win_change_color)
X+ #define get_color_string (*windowprocs.win_get_color_string)
X+ #endif
X  
X  /* other defs that really should go away (they're tty specific) */
X  #define start_screen (*windowprocs.win_start_screen)
X  #define end_screen (*windowprocs.win_end_screen)
X  
X+ #define outrip (*windowprocs.win_outrip)
X  #endif
X*** /tmp/da10727	Tue Jun  1 16:03:43 1993
X--- include/wintty.h	Fri May 28 11:31:56 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)wintty.h	3.1	92/10/06		  */
X  /* Copyright (c) David Cohrs, 1991,1992				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)wintty.h	3.1	93/05/26		  */
X  /* Copyright (c) David Cohrs, 1991,1992				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 102,107 ****
X--- 102,125 ----
X  E void NDECL(graph_off);
X  E void NDECL(cl_eos);
X  
X+ /*
X+  * termcap.c (or facsimiles in other ports) is the right place for doing
X+  * strange and arcane things such as outputting escape sequences to select
X+  * a color or whatever.  wintty.c should concern itself with WHERE to put
X+  * stuff in a window.
X+  */
X+ E void FDECL(term_start_attr,(int attr));
X+ E void FDECL(term_end_attr,(int attr));
X+ E void NDECL(term_start_raw_bold);
X+ E void NDECL(term_end_raw_bold);
X+ 
X+ #ifdef TEXTCOLOR
X+ E void NDECL(term_end_color);
X+ E void FDECL(term_start_color,(int color));
X+ E int FDECL(has_color,(int color));
X+ #endif /* TEXTCOLOR */
X+ 
X+ 
X  /* ### topl.c ### */
X  
X  E void FDECL(addtopl, (const char *));
X***************
X*** 115,121 ****
X  #endif
X  E void FDECL(docorner, (int, int));
X  E void NDECL(end_glyphout);
X! E void FDECL(g_putch, (UCHAR_P));
X  E void NDECL(win_tty_init);
X  
X  /* external declarations */
X--- 133,139 ----
X  #endif
X  E void FDECL(docorner, (int, int));
X  E void NDECL(end_glyphout);
X! E void FDECL(g_putch, (int));
X  E void NDECL(win_tty_init);
X  
X  /* external declarations */
X***************
X*** 158,168 ****
X--- 176,214 ----
X  #endif /* COM_COMPL */
X  E void FDECL(tty_number_pad, (int));
X  E void NDECL(tty_delay_output);
X+ #ifdef CHANGE_COLOR
X+ E void FDECL(tty_change_color,(int color,long rgb,int reverse));
X+ E char * NDECL(tty_get_color_string);
X+ #endif
X  
X  /* other defs that really should go away (they're tty specific) */
X  E void NDECL(tty_start_screen);
X  E void NDECL(tty_end_screen);
X  
X+ E void FDECL(genl_outrip, (winid,int));
X  #undef E
X+ 
X+ #ifdef NO_TERMS
X+ # ifdef MAC
X+ #  define putchar term_putc
X+ #  define putc term_fputc
X+ #  define fputc term_fputc
X+ #  define fflush term_flush
X+ #  define fputs term_fputs
X+ #  define puts term_puts
X+ #  define printf term_printf
X+ #  define fprintf fterm_printf
X+ # endif
X+ # if defined(MSDOS) || defined(WIN32CON)
X+ #  if defined(SCREEN_BIOS) || defined(SCREEN_DJGPPFAST)
X+ #   undef putchar
X+ #   undef putc
X+ #   undef puts
X+ #   define putchar(x) xputc(x)  /* video.c, nttty.c */
X+ #   define putc(x) xputc(x)     
X+ #   define puts xputs           
X+ #  endif
X+ # endif
X+ #endif
X  
X  #endif /* WINTTY_H */
X*** /tmp/da10743	Tue Jun  1 16:03:47 1993
X--- include/you.h	Tue Jun  1 14:28:36 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)you.h	3.1	92/11/29	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)you.h	3.1	93/04/24	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 71,88 ****
X  	Bitfield(minor_oracle,1);	/* received at least 1 cheap oracle */
X  	Bitfield(major_oracle,1);	/*  "  expensive oracle */
X  #ifdef MULDGN
X  	Bitfield(qexpelled,1);		/* expelled from the Quest dungeon */
X! 	Bitfield(qcompleted,1);	    /* successfully completed the Quest task */
X  #endif
X! 	Bitfield(uheard_tune,2);	/* if you heard the passtune */
X! 	Bitfield(uopened_dbridge,1);	/* if you open the drawbridge */
X! 	Bitfield(invoked,1);	    /* invoked the gate to the Sanctum level */
X  
X  	Bitfield(gehennom_entered,1);	/* entered Gehennom via Valley */
X  #ifdef ELBERETH
X! 	Bitfield(uhand_of_elbereth,1);	/* if you become Hand of Elbereth */
X  #endif
X! 	Bitfield(udemigod,1);		/* once you kill the wiz */
X  };
X  
X  
X--- 71,90 ----
X  	Bitfield(minor_oracle,1);	/* received at least 1 cheap oracle */
X  	Bitfield(major_oracle,1);	/*  "  expensive oracle */
X  #ifdef MULDGN
X+ 	Bitfield(qcalled,1);		/* called by Quest leader to do task */
X  	Bitfield(qexpelled,1);		/* expelled from the Quest dungeon */
X! 	Bitfield(qcompleted,1);		/* successfully completed Quest task */
X  #endif
X! 	Bitfield(uheard_tune,2);	/* 1=know about, 2=heard passtune */
X! 	Bitfield(uopened_dbridge,1);	/* opened the drawbridge */
X! 	Bitfield(invoked,1);		/* invoked Gate to the Sanctum level */
X  
X  	Bitfield(gehennom_entered,1);	/* entered Gehennom via Valley */
X  #ifdef ELBERETH
X! 	Bitfield(uhand_of_elbereth,2);	/* became Hand of Elbereth */
X  #endif
X! 	Bitfield(udemigod,1);		/* killed the wiz */
X! 	Bitfield(ascended,1);		/* has offered the Amulet */
X  };
X  
X  
X***************
X*** 148,154 ****
X  #define BC_CHAIN 0x02	/* bit mask for chain in 'bc_felt' below */
X  	int bglyph;	/* glyph under the ball */
X  	int cglyph;	/* glyph under the chain */
X! 	int bc_order;	/* ball & chain order [see bc_order() in trap.c] */
X  	int bc_felt;	/* mask for ball/chain being felt */
X  
X  
X--- 150,156 ----
X  #define BC_CHAIN 0x02	/* bit mask for chain in 'bc_felt' below */
X  	int bglyph;	/* glyph under the ball */
X  	int cglyph;	/* glyph under the chain */
X! 	int bc_order;	/* ball & chain order [see bc_order() in ball.c] */
X  	int bc_felt;	/* mask for ball/chain being felt */
X  
X  
X*** /tmp/da10751	Tue Jun  1 16:03:49 1993
X--- include/youprop.h	Tue Jun  1 14:28:35 1993
X***************
X*** 122,129 ****
X  #define Vomiting		u.uprops[VOMITING].p_flgs
X  #define Energy_regeneration	u.uprops[ENERGY_REGENERATION].p_flgs
X  #define HMagical_breathing	u.uprops[MAGICAL_BREATHING].p_flgs
X! #define Magical_breathing	UPROP(HMagical_breathing,\
X! 				      magic_breathing(uasmon))
X  #define Half_spell_damage	u.uprops[HALF_SPDAM].p_flgs
X  #define Half_physical_damage	u.uprops[HALF_PHDAM].p_flgs
X  
X--- 122,131 ----
X  #define Vomiting		u.uprops[VOMITING].p_flgs
X  #define Energy_regeneration	u.uprops[ENERGY_REGENERATION].p_flgs
X  #define HMagical_breathing	u.uprops[MAGICAL_BREATHING].p_flgs
X! #define Amphibious		UPROP(HMagical_breathing,\
X! 				      amphibious(uasmon))
X! #define Breathless		UPROP(HMagical_breathing,\
X! 				      breathless(uasmon))
X  #define Half_spell_damage	u.uprops[HALF_SPDAM].p_flgs
X  #define Half_physical_damage	u.uprops[HALF_PHDAM].p_flgs
X  
X*** /tmp/da12515	Tue Jun  1 17:31:34 1993
X--- sys/msdos/Install.dos	Wed May 12 16:34:19 1993
X***************
X*** 1,4 ****
X! 	SCCS Id: @(#)Install.dos	 3.1		93/01/06
X  
X          Copyright (c) NetHack PC Development Team 1990 - 1993.
X          NetHack may be freely redistributed.  See license for details.
X--- 1,4 ----
X! 	SCCS Id: @(#)Install.dos	 3.1		93/05/10
X  
X          Copyright (c) NetHack PC Development Team 1990 - 1993.
X          NetHack may be freely redistributed.  See license for details.
X***************
X*** 7,18 ****
X                   NetHack 3.1 on an MS-DOS system
X  	    ======================================================
X                   (or, How to make PC NetHack 3.1)
X!                     Last revision: Jan 6, 1993
X  
X  Credit for a runnable full PC NetHack 3.1 goes to the PC Development team
X! of Norm Meluch, Kevin Smolkowski, Paul Winner and Steve VanDevender who
X! built on the work of Pierre Martineau, Stephen Spackman, Steve Creps,
X! Mike Threepoint and Don Kneller.
X  
X  I.  Dispelling the Myths:
X  
X--- 7,18 ----
X                   NetHack 3.1 on an MS-DOS system
X  	    ======================================================
X                   (or, How to make PC NetHack 3.1)
X!                     Last revision: May 10, 1993
X  
X  Credit for a runnable full PC NetHack 3.1 goes to the PC Development team
X! of Norm Meluch, Kevin Smolkowski, Paul Winner, Michael Allison and Steve
X! VanDevender who built on the work of Pierre Martineau, Stephen Spackman,
X! Steve Creps, Mike Threepoint and Don Kneller.
X  
X  I.  Dispelling the Myths:
X  
X***************
X*** 24,30 ****
X      following compilers:
X  
X      Microsoft C 6.0a
X!     Microsoft C 7.0
X      DJGPP       1.9   (gcc version 2.2 for msdos,
X                         free from your local archive sites)
X  
X--- 24,30 ----
X      following compilers:
X  
X      Microsoft C 6.0a
X!     Microsoft C 7.0 and Microsoft Visual C++ Professional (MSVC) 1.0
X      DJGPP       1.9   (gcc version 2.2 for msdos,
X                         free from your local archive sites)
X  
X***************
X*** 52,58 ****
X      dat, doc, include, src, sys\share, sys\msdos, util and win\tty.
X      Other subdirectories may also be included in your distribution, but
X      they are not necessary for use with MSDOS.  You can delete them
X!     to save space.  If you are using MSC7, the makefile will create
X      an additional directory src\o.
X  
X      Check the file "Files" in your top level directory for an exact
X--- 52,58 ----
X      dat, doc, include, src, sys\share, sys\msdos, util and win\tty.
X      Other subdirectories may also be included in your distribution, but
X      they are not necessary for use with MSDOS.  You can delete them
X!     to save space.  If you are using MSC7 or MSVC, the makefile will create
X      an additional directory src\o.
X  
X      Check the file "Files" in your top level directory for an exact
X***************
X*** 79,86 ****
X      your linker can find them.
X  
X      Makefiles are included should you want to build your own termcap
X!     library file.  Makemsc.lib works with Microsoft C and generates
X!     termcap.lib, Makegcc.lib works with DJGPP and generates libtermc.a.
X  
X  4.  ovlmgr.uu (MS-DOS overlay manager) is the uuencoded assembled
X      object module for the overlay manager used with Microsoft C 6.0
X--- 79,87 ----
X      your linker can find them.
X  
X      Makefiles are included should you want to build your own termcap
X!     library file.  Makemsc.lib works with Microsoft C (MSC and MSVC)
X!     and generates termcap.lib, Makegcc.lib works with DJGPP and generates
X!     libtermc.a.
X  
X  4.  ovlmgr.uu (MS-DOS overlay manager) is the uuencoded assembled
X      object module for the overlay manager used with Microsoft C 6.0
X***************
X*** 109,127 ****
X      or as few of them as you wish.
X  
X      Also check pcconf.h, which should not need much editing (if you are
X!     including termcap.uu and random.c).  If you are not including these, you
X!     will need to comment out TERMLIB and/or RANDOM.  If you are using
X!     a Microsoft compiler you should make doubly certain that OVERLAY is
X!     defined in pcconf.h, since otherwise things will compile properly but
X!     very ugly things are likely to happen wherever function pointers
X!     cross overlay boundaries - the linker is a little thick about that.
X  
X      Commenting out the #define TERMLIB in pcconf.h to disable use of termcap
X!     routines (relying on the ANSI_DEFAULT feature) will make your job a bit
X!     easier.  However, you can compile with both TERMLIB and ANSI_DEFAULT
X      and simply not set your TERM variable if you do not wish to use the
X!     termcap file settings.
X  
X  7.  If you want to change the high score list behavior, examine the top of
X      topten.c, in the src directory.  You may want to change the definitions of
X      PERSMAX, POINTSMIN, and ENTRYMAX.  I set POINTSMIN to 51 and ENTRYMAX to
X--- 110,147 ----
X      or as few of them as you wish.
X  
X      Also check pcconf.h, which should not need much editing (if you are
X!     including termcap.uu and random.c).  If you are not including random.c
X!     you will need to comment out RANDOM. 
X  
X+     There are several options available for screen management with this
X+     release of PC NetHack.  The features #define TERMLIB, #define
X+     ANSI_DEFAULT, and #define NO_TERMS in pcconf.h control the various
X+     options.
X+ 
X      Commenting out the #define TERMLIB in pcconf.h to disable use of termcap
X!     routines means relying on either the ANSI_DEFAULT feature, or the
X!     NO_TERMS feature, and will make your job a bit easier.
X!     You can elect to compile with both TERMLIB and ANSI_DEFAULT
X      and simply not set your TERM variable if you do not wish to use the
X!     termcap file settings.  The NO_TERMS feature has the advantage of not
X!     needing the DEVICE=ANSI.SYS statement in config.sys.  It will not
X!     work with TERMLIB, nor with ANSI_DEFAULT.  It uses internal routines 
X!     for screen management, and may be an ideal choice if your
X!     play machine is industry standard (has an IBM compatible BIOS).
X  
X+     Should you define NO_TERMS, only define one of the two screen
X+     access methods.  If compiling for Microsoft machines, use
X+     SCREEN_BIOS, if using DJGPP you can choose between SCREEN_BIOS
X+     and SCREEN_DJGPPFAST.  Never, never, ever choose both.  Bad things
X+     will happen.
X+     
X+     If you are using a Microsoft compiler you should make doubly certain
X+     that OVERLAY is defined in pcconf.h, since otherwise things will 
X+     compile properly but very ugly things are likely to happen wherever
X+     function pointers cross overlay boundaries - the linker is a little 
X+     thick about that.
X+ 
X+ 
X  7.  If you want to change the high score list behavior, examine the top of
X      topten.c, in the src directory.  You may want to change the definitions of
X      PERSMAX, POINTSMIN, and ENTRYMAX.  I set POINTSMIN to 51 and ENTRYMAX to
X***************
X*** 134,139 ****
X--- 154,165 ----
X      commenting out RANDOM in pcconf.h or tosconf.h, comment out (or set equal
X      to nothing) the RANDOM macro in your Makefile.
X  
X+     If you elected not to use termcap, then comment out (or set equal to
X+     nothing) the TERMLIB macro in your Makefile.
X+     
X+     That is,    TERMLIB = (SSYS)\termlib.lib
X+     should be   TERMLIB =
X+ 
X      If you are recompiling after patching your sources, or if you got your
X      files from somewhere other than the official distribution, "touch
X      makedefs.c" to ensure that certain files (onames.h and pm.h) are remade,
X***************
X*** 169,179 ****
X  Appendix A - Microsoft C Compilers
X  
X      You can compile NetHack using almost any version of Microsoft C later
X!     than 5.1.  Versions 5.0 and earlier are broken in such a way that it
X!     is impossible to use them.  Version 6.0 requires a patch available
X!     from Microsoft; after applying you should have 6.0ax.  Version 7.0
X!     works with or without the August 1992 patch.
X  
X      Officially, support is no longer provided for MSC versions prior to
X      6.0ax.  NetHack v3.1 will compile with 5.1, but you will need to
X      make a lot of modifications to the makefiles in order to avoid heap
X--- 195,213 ----
X  Appendix A - Microsoft C Compilers
X  
X      You can compile NetHack using almost any version of Microsoft C later
X!     than 5.1, including Microsoft Visual C++ Professional 1.0.  MSC Versions
X!     5.0 and earlier are broken in such a way that it is impossible to use 
X!     them.  Version 6.0 requires a patch available from Microsoft; after 
X!     applying you should have 6.0ax.  
X!     
X!     MSC Version 7.0 works with or without the August 1992 patch. 
X  
X+     MSVC Professional 1.0 works as distributed, although there seems 
X+     to be a problem with the compiler having problems and stopping the 
X+     compile periodically.  Things proceed normally after starting 'make'
X+     once again.  The problem, although annoying, does not affect the code
X+     generation or the final executable.
X+ 
X      Officially, support is no longer provided for MSC versions prior to
X      6.0ax.  NetHack v3.1 will compile with 5.1, but you will need to
X      make a lot of modifications to the makefiles in order to avoid heap
X***************
X*** 180,189 ****
X      space problems.  We strongly recommend upgrading to 6.0ax if you
X      intend to recompile NetHack often.
X  
X!     One Makefile is used for all versions.  Version 7.0 takes advantage
X!     of the CL environment variables to set the compiler flags, as they
X!     exceed the MSDOS limitation of 128 characters on the command line.
X!     Please read the Makefile carefully and select those options that
X      go with the compiler.  Also, remember to run setup.bat to set the
X      CL environment variable before you compile.
X  
X--- 214,223 ----
X      space problems.  We strongly recommend upgrading to 6.0ax if you
X      intend to recompile NetHack often.
X  
X!     One Makefile is used for all versions.  MSC Version 7.0 and MSVC take 
X!     advantage of the CL environment variables to set the compiler flags, 
X!     as they exceed the MSDOS limitation of 128 characters on the command 
X!     line.  Please read the Makefile carefully and select those options that
X      go with the compiler.  Also, remember to run setup.bat to set the
X      CL environment variable before you compile.
X  
X***************
X*** 231,236 ****
X--- 265,274 ----
X      linker in version 7.0.  Instead of linking in the custom overlay
X      manager, we just let Microsoft do the work.
X  
X+   Microsoft Visual C++ Professional version 1.0
X+     The Microsoft Visual C++ Professional compiler can utilize the same
X+     Makefiles and instructions for compiling as Microsoft C version 7.0.
X+ 
X  Appendix B - DJGPP Compiler (gcc ported to msdos)
X  
X      If you have a 386 or better machine, you are in luck.  You can compile
X***************
X*** 248,255 ****
X      Windows.  See the DJGPP documentation for more details on particular
X      memory requirements.
X  
X!     Building with DJGPP is easy, just follow the steps outlined in the
X!     main section.
X  
X  Appendix C - Borland C Compiler
X  
X--- 286,295 ----
X      Windows.  See the DJGPP documentation for more details on particular
X      memory requirements.
X  
X!     If you want to use the built-in DJGPP screen routines, uncomment
X!     SCREEN_DJGPPFAST in pcconf.h.  Note that some of these routines
X!     seem to be broken so we pick and choose the ones that work.  See
X!     video.c for details. 
X  
X  Appendix C - Borland C Compiler
X  
X*** /tmp/da12523	Tue Jun  1 17:31:36 1993
X--- sys/msdos/MakeGCC.src	Tue May 11 09:53:56 1993
X***************
X*** 1,4 ****
X! #       SCCS Id: @(#)MakeGCC.src       3.1     93/01/05
X  #	Copyright (c) NetHack PC Development Team 1992, 1993.
X  #       PC NetHack 3.1 Src Makefile for djgpp 1.09 and ndmake 4.5
X  #
X--- 1,4 ----
X! #       SCCS Id: @(#)MakeGCC.src       3.1     93/05/03
X  #	Copyright (c) NetHack PC Development Team 1992, 1993.
X  #       PC NetHack 3.1 Src Makefile for djgpp 1.09 and ndmake 4.5
X  #
X***************
X*** 13,19 ****
X  
X  
X  CC       = gcc
X! STUB     = stub.exe         # Can either be stub.exe or go32.exe
X  STUBPATH = f:\djgpp\bin\    # Must be complete path with trailing '\'
X  LINK     = gcc
X  
X--- 13,19 ----
X  
X  
X  CC       = gcc
X! STUB     = go32.exe         # Can be either stub.exe or go32.exe
X  STUBPATH = f:\djgpp\bin\    # Must be complete path with trailing '\'
X  LINK     = gcc
X  
X***************
X*** 60,71 ****
X  default : $(GAMEFILE)
X  
X  #
X! #  If TERMLIB is defined in pcconf.c, comment out the upper line and
X  #  uncomment the lower.  Note that you must build the termc library
X  #  and place it in djgpp's lib directory.  See termcap.zip for details
X  
X! #TERMLIB =
X! TERMLIB = -ltermc
X  
X  LIBRARIES = $(LIBS) $(TERMLIB)
X  
X--- 60,71 ----
X  default : $(GAMEFILE)
X  
X  #
X! #  If TERMLIB is defined in pcconf.h, comment out the upper line and
X  #  uncomment the lower.  Note that you must build the termc library
X  #  and place it in djgpp's lib directory.  See termcap.zip for details
X  
X! TERMLIB =
X! #TERMLIB = -ltermc
X  
X  LIBRARIES = $(LIBS) $(TERMLIB)
X  
X***************
X*** 115,121 ****
X  VOBJ20 = were.o     wield.o    windows.o  wintty.o   wizard.o
X  VOBJ21 = worm.o     worn.o     write.o    zap.o
X  
X! SOBJ    = msdos.o    sys.o      tty.o      unix.o
X  
X  VVOBJ  = version.o
X  
X--- 115,121 ----
X  VOBJ20 = were.o     wield.o    windows.o  wintty.o   wizard.o
X  VOBJ21 = worm.o     worn.o     write.o    zap.o
X  
X! SOBJ    = msdos.o    sys.o      tty.o      unix.o    video.o
X  
X  VVOBJ  = version.o
X  
X***************
X*** 156,162 ****
X               $(INCL)\objclass.h $(INCL)\trap.h      $(INCL)\flag.h    \
X               $(RM_H)            $(INCL)\vision.h    $(INCL)\wintype.h \
X               $(INCL)\engrave.h  $(INCL)\rect.h      $(INCL)\extern.h \
X!              $(INCL)\trampoli.h $(INCL)\hack.h
X  
X  
X  
X--- 156,162 ----
X               $(INCL)\objclass.h $(INCL)\trap.h      $(INCL)\flag.h    \
X               $(RM_H)            $(INCL)\vision.h    $(INCL)\wintype.h \
X               $(INCL)\engrave.h  $(INCL)\rect.h      $(INCL)\extern.h \
X!              $(INCL)\hack.h
X  
X  
X  
X***************
X*** 258,263 ****
X--- 258,267 ----
X  
X  msdos.o : $(HACK_H)  $(MSYS)\msdos.c
X      copy $(MSYS)\msdos.c .
X+     $(CC) $(CFLAGS) -o$*.o $*.c
X+ 
X+ video.o : $(HACK_H)  $(MSYS)\video.c
X+     copy $(MSYS)\video.c .
X      $(CC) $(CFLAGS) -o$*.o $*.c
X  
X  
X*** /tmp/da12539	Tue Jun  1 17:31:41 1993
X--- sys/msdos/MakeMSC.src	Tue Jun  1 12:38:54 1993
X***************
X*** 1,6 ****
X! # SCCS Id: @(#)MakeMSC.src	3.1	93/01/18
X  # Copyright (c) NetHack PC Development Team 1992, 1993
X! # PC NetHack 3.1 Makefile for Microsoft(tm) "C" >= 6.0ax
X  #
X  # Nota Bene:	Before you get to here you should have already read
X  # 		the Install.dos file located in the sys/msdos directory.
X--- 1,6 ----
X! # SCCS Id: @(#)MakeMSC.src	3.1	93/05/23
X  # Copyright (c) NetHack PC Development Team 1992, 1993
X! # PC NetHack 3.1 Makefile for Microsoft(tm) "C" >= 6.0ax and MSVC >= 1.0
X  #
X  # Nota Bene:	Before you get to here you should have already read
X  # 		the Install.dos file located in the sys/msdos directory.
X***************
X*** 7,18 ****
X  
X  # This Makefile supports two different overlay management schemes.
X  # You must select either the one that supports Microsoft C
X! # version 6 or version 7.  By default this Makefile is set up
X! # for version 7 or greater.  Certain sections particular to
X! # each compiler are marked either MSC7 or MSC6.  If you are
X! # using Microsoft C version 7, make sure that all the MSC6
X  # sections are commented out and pay particular attention
X! # to all sections marked MSC7, uncommenting all the variables.
X  # Do the same thing for MSC6 if you are using that version of
X  # the compiler.
X  #
X--- 7,19 ----
X  
X  # This Makefile supports two different overlay management schemes.
X  # You must select either the one that supports Microsoft C
X! # version 6, or the one that supports Microsoft C version 7 and 
X! # Microsoft Visual C++ Professional version 1 (MSVC).  By default this 
X! # Makefile is set up for version 7 or greater (including MSVC).  Certain 
X! # sections particular to each compiler are marked either MSC7/MSVC or MSC6.
X! # If you are using Microsoft C version 7 or MSVC, make sure that all the MSC6
X  # sections are commented out and pay particular attention
X! # to all sections marked MSC7/MSVC, uncommenting all the variables.
X  # Do the same thing for MSC6 if you are using that version of
X  # the compiler.
X  #
X***************
X*** 60,80 ****
X  #
X  
X  
X! #### MSC7 Section Only #####
X! # MSC7 Compiler Flags are set up in the setup.bat file using
X  # the CL environment variable as the total lenth of the compiler
X  # command line exceeds the MSDOS 128 character limit.
X  #
X  CFLAGS	= /c
X! LFLAGS	= /noi /seg:512 /map /st:5120 /DYNAMIC:1100 /INFO
X  OVLMUCKING =	# None required
X! MSC6MUCK = 	# None required
X  ############################
X  
X  
X  #### MSC6 Section Only #####
X  #
X! # First comment out the MSC7 section.  And uncomment much of what is below.
X  #
X  
X  #
X--- 61,83 ----
X  #
X  
X  
X! #### MSC7/MSVC Section Only #####
X! # MSC7 and MSVC Compiler Flags are set up in the setup.bat file using
X  # the CL environment variable as the total lenth of the compiler
X  # command line exceeds the MSDOS 128 character limit.
X  #
X  CFLAGS	= /c
X! LFLAGS	= /noi /seg:512 /map /st:5120 /DYNAMIC:1050 /INFO
X  OVLMUCKING =	# None required
X! MSC6MUCK =	# None required
X! OVERLAY =	# None required
X! OVERLAY_H =	# None required
X  ############################
X  
X  
X  #### MSC6 Section Only #####
X  #
X! # First comment out the MSC7/MSVC section.  And uncomment much of what is below.
X  #
X  
X  #
X***************
X*** 88,109 ****
X  #LFLAGS	= /noi /seg:512 /map /st:4096
X  #EXEPATCH = exesmurf	# Executable Massager
X  #EXEFLAGS = /max4500 /min4500
X! #OVLMUCKING = $(EXEPATCH) ovlmgr.obj
X  #MSC6MUCK = msc6muck
X  
X  #
X  # For Microsoft C version <= 6.00ax, we use a custom overlay
X! # manager, which requires the lower line to be uncommented.
X! OVLMGR	=
X! #OVLMGR	= ovlmgr.obj
X! 
X  #
X  # Switch the following $(OBJ)\$(OVLMGR): lines if you don't have a
X  # MASM compatible assembler.
X! $(OBJ)\$(OVLMGR):
X! # $(OBJ)\$(OVLMGR): ; copy $(SYS)\$(OVLMGR) $(OBJ)\$(OVLMGR)
X  
X  #
X  # If you need to recompile ovlmgr.asm you may want to change
X  # some of the flags.
X  AFLAGS = /MX
X--- 91,116 ----
X  #LFLAGS	= /noi /seg:512 /map /st:4096
X  #EXEPATCH = exesmurf	# Executable Massager
X  #EXEFLAGS = /max4500 /min4500
X! #OVLMUCKING = $(EXEPATCH) $(OBJ)\ovlmgr.obj
X  #MSC6MUCK = msc6muck
X  
X  #
X  # For Microsoft C version <= 6.00ax, we use a custom overlay
X! # manager.
X  #
X  # Switch the following $(OBJ)\$(OVLMGR): lines if you don't have a
X  # MASM compatible assembler.
X! #$(OBJ)\ovlmgr.obj: $(SYS)\ovlmgr.asm
X! #	$(ASM) $(AFLAGS) $(SYS)\ovlmgr.asm, $@ ;
X! $(OBJ)\ovlmgr.obj: ; copy $(SYS)\ovlmgr.obj $(OBJ)\ovlmgr.obj
X  
X  #
X+ # Object files and a header file required for trampoli overlay system.
X+ #
X+ #OVERLAY = $(OBJ)\ovlmgr.obj $(OBJ)\trampoli.o
X+ #OVERLAY_H = $(INCL)\trampoli.h
X+ 
X+ #
X  # If you need to recompile ovlmgr.asm you may want to change
X  # some of the flags.
X  AFLAGS = /MX
X***************
X*** 119,127 ****
X  #$(EXEPATCH).exe: $(OBJ)\$(EXEPATCH).o
X  #	$(LINK) $(OBJ)\$*.o, $*.exe;
X  
X- #
X- #$(OBJ)\$(EXEPATCH).o: $(SYS)\$(EXEPATCH).c
X- #	$(CC) /W0 /Fo$(OBJ)\$*.o $(SYS)\$*.c
X  ############################
X  
X  #
X--- 126,131 ----
X***************
X*** 133,141 ****
X  # RANDOM	=
X  
X  #
X! # If TERMLIB is NOT #defined in the source, comment out the
X! # lower line and uncomment the upper.  Make sure that TERMLIB
X! # contains the full pathname to the termcap library.
X  
X  #TERMLIB =
X  TERMLIB = $(SSYS)\termcap.lib
X--- 137,145 ----
X  # RANDOM	=
X  
X  #
X! # If TERMLIB is NOT #defined in the source (in include\pcconf.h), 
X! # comment out the lower line and uncomment the upper.  Make sure 
X! # that TERMLIB contains the full pathname to the termcap library. 
X  
X  #TERMLIB =
X  TERMLIB = $(SSYS)\termcap.lib
X***************
X*** 155,191 ****
X  	   .o .c .y .l .obj .asm
X  
X  .c.o:
X! 	$(CC) $(CFLAGS) /Fo$(OBJ)\$*.o $*.c
X  .c.0:
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$*.0 /Fo$(OBJ)\$*.0 $*.c
X  .c.0-1:
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /NT$*.0-1 /Fo$(OBJ)\$*.0-1 $*.c
X  .c.0-2:
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /DOVL2 /NT$*.0-2 /Fo$(OBJ)\$*.0-2 $*.c
X  .c.0-3:
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /DOVL2 /DOVL3 /NT$*.0-3 /Fo$(OBJ)\$*.0-3 $*.c
X  .c.1:
X! 	$(CC) $(CFLAGS) /DOVL1 /NT$*.1 /Fo$(OBJ)\$*.1 $*.c
X  .c.1-2:
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /NT$*.1-2 /Fo$(OBJ)\$*.1-2 $*.c
X  .c.1-3:
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /DOVL3 /NT$*.1-3 /Fo$(OBJ)\$*.1-3 $*.c
X  .c.1-b:
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /DOVL3 /DOVLB /NT$*.1-b /Fo$(OBJ)\$*.1-b $*.c
X  .c.2:
X! 	$(CC) $(CFLAGS) /DOVL2 /NT$*.2 /Fo$(OBJ)\$*.2 $*.c
X  .c.2-3:
X! 	$(CC) $(CFLAGS) /DOVL2 /DOVL3 /NT$*.2-3 /Fo$(OBJ)\$*.2-3 $*.c
X  .c.2-b:
X! 	$(CC) $(CFLAGS) /DOVL2 /DOVL3 /DOVLB /NT$*.2-b /Fo$(OBJ)\$*.2-b $*.c
X  .c.3:
X! 	$(CC) $(CFLAGS) /DOVL3 /NT$*.3 /Fo$(OBJ)\$*.3 $*.c
X  .c.3-b:
X! 	$(CC) $(CFLAGS) /DOVL3 /DOVLB /NT$*.3-b /Fo$(OBJ)\$*.3-b $*.c
X  .c.b:
X! 	$(CC) $(CFLAGS) /DOVLB /NT$*.b /Fo$(OBJ)\$*.b $*.c
X  .asm.obj:
X! 	$(ASM) $(AFLAGS) $(SYS)\$*.asm, $(OBJ)\$*.obj ;
X  
X  #
X  #	Header Objects.
X--- 159,195 ----
X  	   .o .c .y .l .obj .asm
X  
X  .c.o:
X! 	$(CC) $(CFLAGS) /Fo$@ $<
X  .c.0:
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$(@F) /Fo$@ $<
X  .c.0-1:
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /NT$(@F) /Fo$@ $<
X  .c.0-2:
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /DOVL2 /NT$(@F) /Fo$@ $<
X  .c.0-3:
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /DOVL2 /DOVL3 /NT$(@F) /Fo$@ $<
X  .c.1:
X! 	$(CC) $(CFLAGS) /DOVL1 /NT$(@F) /Fo$@ $<
X  .c.1-2:
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /NT$(@F) /Fo$@ $<
X  .c.1-3:
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /DOVL3 /NT$(@F) /Fo$@ $<
X  .c.1-b:
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /DOVL3 /DOVLB /NT$(@F) /Fo$@ $<
X  .c.2:
X! 	$(CC) $(CFLAGS) /DOVL2 /NT$(@F) /Fo$@ $<
X  .c.2-3:
X! 	$(CC) $(CFLAGS) /DOVL2 /DOVL3 /NT$(@F) /Fo$@ $<
X  .c.2-b:
X! 	$(CC) $(CFLAGS) /DOVL2 /DOVL3 /DOVLB /NT$(@F) /Fo$@ $<
X  .c.3:
X! 	$(CC) $(CFLAGS) /DOVL3 /NT$(@F) /Fo$@ $<
X  .c.3-b:
X! 	$(CC) $(CFLAGS) /DOVL3 /DOVLB /NT$(@F) /Fo$@ $<
X  .c.b:
X! 	$(CC) $(CFLAGS) /DOVLB /NT$(@F) /Fo$@ $<
X  .asm.obj:
X! 	$(ASM) $(AFLAGS) $<, $@ ;
X  
X  #
X  #	Header Objects.
X***************
X*** 225,238 ****
X  #	Overlay Objects.
X  #
X  
X! ROOT =	$(OBJ)\main.o $(OBJ)\msdos.0 $(OBJ)\dungeon.0 \
X  	$(OBJ)\alloc.o $(OBJ)\random.o $(OBJ)\decl.o $(OBJ)\dbridge.0 \
X  	$(OBJ)\objects.o $(OBJ)\invent.0 $(OBJ)\mkobj.0 $(OBJ)\mkroom.0 \
X! 	$(OBJ)\rnd.0 $(OBJ)\termcap.0 $(OBJ)\mondata.0 $(OBJ)\muse.o \
X  	$(OBJ)\engrave.0 $(OBJ)\explode.o $(OBJ)\display.o $(OBJ)\vision.o \
X  	$(OBJ)\attrib.0 $(OBJ)\rect.o $(OBJ)\vis_tab.o $(OBJ)\hacklib.0 \
X  	$(OBJ)\monst.o $(OBJ)\hack.3 $(OBJ)\topl.0 $(OBJ)\trap.0 \
X! 	$(OBJ)\wintty.o $(OBJ)\monmove.0 $(OBJ)\dogmove.0
X  
X  # These could use to go in root, but are in OLV1 to make
X  # the game loadable in under 512 free ram.
X--- 229,242 ----
X  #	Overlay Objects.
X  #
X  
X! ROOT =	$(OVERLAY) $(OBJ)\main.o $(OBJ)\msdos.0 $(OBJ)\dungeon.0 \
X  	$(OBJ)\alloc.o $(OBJ)\random.o $(OBJ)\decl.o $(OBJ)\dbridge.0 \
X  	$(OBJ)\objects.o $(OBJ)\invent.0 $(OBJ)\mkobj.0 $(OBJ)\mkroom.0 \
X! 	$(OBJ)\rnd.0 $(OBJ)\video.0 $(OBJ)\mondata.0 $(OBJ)\muse.o \
X  	$(OBJ)\engrave.0 $(OBJ)\explode.o $(OBJ)\display.o $(OBJ)\vision.o \
X  	$(OBJ)\attrib.0 $(OBJ)\rect.o $(OBJ)\vis_tab.o $(OBJ)\hacklib.0 \
X  	$(OBJ)\monst.o $(OBJ)\hack.3 $(OBJ)\topl.0 $(OBJ)\trap.0 \
X! 	$(OBJ)\termcap.0 $(OBJ)\wintty.o $(OBJ)\monmove.0 $(OBJ)\dogmove.0
X  
X  # These could use to go in root, but are in OLV1 to make
X  # the game loadable in under 512 free ram.
X***************
X*** 285,294 ****
X  OVL29 = $(OBJ)\objnam.2-b $(OBJ)\hacklib.2-b
X  OVL30 = $(OBJ)\pager.o
X  OVL31 = $(OBJ)\botl.0
X! OVL32 = $(OBJ)\botl.b $(OBJ)\topl.b $(OBJ)\termcap.1 $(OBJ)\windows.o
X  OVL33 = $(OBJ)\topl.1-2
X  OVL34 = $(OBJ)\pline.o
X! OVL35 = $(OBJ)\termcap.2-b
X  OVL36 = $(OBJ)\quest.o $(OBJ)\questpgr.o
X  OVL37 = $(OBJ)\invent.b
X  OVL38 = $(OBJ)\hack.b
X--- 289,299 ----
X  OVL29 = $(OBJ)\objnam.2-b $(OBJ)\hacklib.2-b
X  OVL30 = $(OBJ)\pager.o
X  OVL31 = $(OBJ)\botl.0
X! OVL32 = $(OBJ)\botl.b $(OBJ)\topl.b $(OBJ)\termcap.1 $(OBJ)\windows.o \
X! 	$(OBJ)\video.1
X  OVL33 = $(OBJ)\topl.1-2
X  OVL34 = $(OBJ)\pline.o
X! OVL35 = $(OBJ)\termcap.2-b $(OBJ)\video.2-b
X  OVL36 = $(OBJ)\quest.o $(OBJ)\questpgr.o
X  OVL37 = $(OBJ)\invent.b
X  OVL38 = $(OBJ)\hack.b
X***************
X*** 439,445 ****
X  	$(UTL)\makedefs.c	$(UTL)\panic.c		$(UTL)\recover.c \
X  	$(UTL)\dgn_main.c	$(UTL)\dgn_comp.l	$(UTL)\dgn_comp.y \
X  	$(UTL)\lev_main.c	$(UTL)\lev_comp.l	$(UTL)\lev_comp.y \
X! 	$(HACK_H)
X  	@echo You must first "$(MAKEBIN) all" in the $(UTL) directory.
X  	@attrib .foo
X  
X--- 444,450 ----
X  	$(UTL)\makedefs.c	$(UTL)\panic.c		$(UTL)\recover.c \
X  	$(UTL)\dgn_main.c	$(UTL)\dgn_comp.l	$(UTL)\dgn_comp.y \
X  	$(UTL)\lev_main.c	$(UTL)\lev_comp.l	$(UTL)\lev_comp.y \
X! 	$(HACK_H)		$(INCL)\patchlevel.h	$(INCL)\qtext.h
X  	@echo You must first "$(MAKEBIN) all" in the $(UTL) directory.
X  	@attrib .foo
X  
X***************
X*** 463,497 ****
X  #
X  
X  $(OBJ)\msdos.0: $(HACK_H) $(INCL)\termcap.h $(SYS)\msdos.c
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$*.0 /Fo$(OBJ)\$*.0 $(SYS)\$*.c
X  
X  $(OBJ)\msdos.b: $(HACK_H) $(INCL)\termcap.h $(SYS)\msdos.c
X! 	$(CC) $(CFLAGS) /DOVLB /NT$*.b /Fo$(OBJ)\$*.b $(SYS)\$*.c
X  
X! $(OBJ)\trampoli.o: $(HACK_H)	$(SYS)\trampoli.c
X! 	$(CC) $(CFLAGS) /Fo$(OBJ)\$*.o $(SYS)\$*.c
X  
X  #
X  #	$(SSYS) files.
X  #
X  
X  $(OBJ)\main.o: $(HACK_H)	$(SSYS)\pcmain.c
X! 	$(CC) $(CFLAGS) /Fo$(OBJ)\main.o $(SSYS)\pcmain.c
X  
X  $(OBJ)\pcsys.o:	$(HACK_H)	$(INCL)\wintty.h	$(SSYS)\pcsys.c
X! 	$(CC) $(CFLAGS) /Fo$(OBJ)\$*.o $(SSYS)\$*.c
X  
X  $(OBJ)\random.o: $(SSYS)\random.c
X! 	$(CC) $(CFLAGS) /Fo$(OBJ)\$*.o $(SSYS)\$*.c
X  
X  $(OBJ)\tty.o: $(HACK_H)		$(INCL)\wintty.h	$(SSYS)\pctty.c
X! 	$(CC) $(CFLAGS) /Fo$(OBJ)\tty.o	$(SSYS)\pctty.c
X  
X  $(OBJ)\unix.0: $(HACK_H)	$(SSYS)\pcunix.c
X! 	$(CC) $(CFLAGS) /DOVL0 /Fo$(OBJ)\unix.0 $(SSYS)\pcunix.c
X  
X  $(OBJ)\unix.1-b: $(HACK_H)	$(SSYS)\pcunix.c
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /DOVL3 /DOVLB /Fo$(OBJ)\unix.1-b $(SSYS)\pcunix.c
X  
X  #
X  #	$(WIN) files.
X--- 468,514 ----
X  #
X  
X  $(OBJ)\msdos.0: $(HACK_H) $(INCL)\termcap.h $(SYS)\msdos.c
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$(@F) /Fo$@ $(SYS)\msdos.c
X  
X  $(OBJ)\msdos.b: $(HACK_H) $(INCL)\termcap.h $(SYS)\msdos.c
X! 	$(CC) $(CFLAGS) /DOVLB /NT$(@F) /Fo$@ $(SYS)\msdos.c
X  
X! $(OBJ)\trampoli.o: $(HACK_H) $(SYS)\trampoli.c
X! 	$(CC) $(CFLAGS) /Fo$@ $(SYS)\trampoli.c
X  
X+ $(OBJ)\video.0:	$(HACK_H) $(INCL)\wintty.h $(SYS)\video.c
X+ 	$(CC) $(CFLAGS) /DOVL0 /NT$(@F) /Fo$@ $(SYS)\video.c
X+ 
X+ $(OBJ)\video.1: $(HACK_H) $(INCL)\wintty.h $(SYS)\video.c
X+ 	$(CC) $(CFLAGS) /DOVL1 /NT$(@F) /Fo$@ $(SYS)\video.c
X+ 
X+ $(OBJ)\video.2-b: $(HACK_H) $(INCL)\wintty.h $(SYS)\video.c
X+ 	$(CC) $(CFLAGS) /DOVL2 /DOVLB /NT$(@F) /Fo$@ $(SYS)\video.c
X+ 
X+ $(OBJ)\exesmurf.o: $(SYS)\exesmurf.c
X+ 	$(CC) $(CFLAGS) /Fo$@ $(SYS)\exesmurf.c
X+ 
X  #
X  #	$(SSYS) files.
X  #
X  
X  $(OBJ)\main.o: $(HACK_H)	$(SSYS)\pcmain.c
X! 	$(CC) $(CFLAGS) /Fo$@ $(SSYS)\pcmain.c
X  
X  $(OBJ)\pcsys.o:	$(HACK_H)	$(INCL)\wintty.h	$(SSYS)\pcsys.c
X! 	$(CC) $(CFLAGS) /Fo$@ $(SSYS)\pcsys.c
X  
X  $(OBJ)\random.o: $(SSYS)\random.c
X! 	$(CC) $(CFLAGS) /Fo$@ $(SSYS)\random.c
X  
X  $(OBJ)\tty.o: $(HACK_H)		$(INCL)\wintty.h	$(SSYS)\pctty.c
X! 	$(CC) $(CFLAGS) /Fo$@	$(SSYS)\pctty.c
X  
X  $(OBJ)\unix.0: $(HACK_H)	$(SSYS)\pcunix.c
X! 	$(CC) $(CFLAGS) /DOVL0 /Fo$@ $(SSYS)\pcunix.c
X  
X  $(OBJ)\unix.1-b: $(HACK_H)	$(SSYS)\pcunix.c
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /DOVL3 /DOVLB /Fo$@ $(SSYS)\pcunix.c
X  
X  #
X  #	$(WIN) files.
X***************
X*** 499,541 ****
X  
X  $(OBJ)\getline.0-1: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\func_tab.h \
X  	$(WIN)\getline.c
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /NT$*.0-1 /Fo$(OBJ)\$*.0-1 $(WIN)\$*.c
X  
X  $(OBJ)\getline.2: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\func_tab.h \
X  	$(WIN)\getline.c
X! 	$(CC) $(CFLAGS) /DOVL2 /NT$*.2 /Fo$(OBJ)\$*.2 $(WIN)\$*.c
X  
X  $(OBJ)\getline.b: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\func_tab.h \
X  	$(WIN)\getline.c
X! 	$(CC) $(CFLAGS) /DOVLB /NT$*.b /Fo$(OBJ)\getline.b $(WIN)\$*.c
X  
X  $(OBJ)\termcap.0: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\termcap.c
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$*.0 /Fo$(OBJ)\$*.0 $(WIN)\$*.c
X  
X  $(OBJ)\termcap.1: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\termcap.c
X! 	$(CC) $(CFLAGS) /DOVL1 /NT$*.1 /Fo$(OBJ)\$*.1 $(WIN)\$*.c
X  
X  $(OBJ)\termcap.2-b: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\termcap.c
X! 	$(CC) $(CFLAGS) /DOVL2 /DOVLB /NT$*.2-b /Fo$(OBJ)\$*.2-b $(WIN)\$*.c
X  
X  $(OBJ)\topl.0: $(HACK_H)	$(INCL)\termcap.h	$(INCL)\wintty.h \
X  	$(WIN)\topl.c
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$*.0 /Fo$(OBJ)\$*.0 $(WIN)\$*.c
X  
X  $(OBJ)\topl.1-2: $(HACK_H)	$(INCL)\termcap.h	$(INCL)\wintty.h \
X  	$(WIN)\topl.c
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /NT$*.1-2 /Fo$(OBJ)\$*.1-2 $(WIN)\$*.c
X  
X  $(OBJ)\topl.b: $(HACK_H)	$(INCL)\termcap.h	$(INCL)\wintty.h \
X  	$(WIN)\topl.c
X! 	$(CC) $(CFLAGS) /DOVLB /NT$*.b /Fo$(OBJ)\$*.b $(WIN)\$*.c
X  
X  $(OBJ)\wintty.o: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\wintty.c
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /DOVL2 /DOVLB /Fo$(OBJ)\$*.o $(WIN)\$*.c
X  
X  #
X  #	$(SRC) files.
X--- 516,558 ----
X  
X  $(OBJ)\getline.0-1: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\func_tab.h \
X  	$(WIN)\getline.c
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /NT$(@F) /Fo$@ $(WIN)\getline.c
X  
X  $(OBJ)\getline.2: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\func_tab.h \
X  	$(WIN)\getline.c
X! 	$(CC) $(CFLAGS) /DOVL2 /NT$(@F) /Fo$@ $(WIN)\getline.c
X  
X  $(OBJ)\getline.b: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\func_tab.h \
X  	$(WIN)\getline.c
X! 	$(CC) $(CFLAGS) /DOVLB /NT$(@F) /Fo$@ $(WIN)\getline.c
X  
X  $(OBJ)\termcap.0: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\termcap.c
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$(@F) /Fo$@ $(WIN)\termcap.c
X  
X  $(OBJ)\termcap.1: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\termcap.c
X! 	$(CC) $(CFLAGS) /DOVL1 /NT$(@F) /Fo$@ $(WIN)\termcap.c
X  
X  $(OBJ)\termcap.2-b: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\termcap.c
X! 	$(CC) $(CFLAGS) /DOVL2 /DOVLB /NT$(@F) /Fo$@ $(WIN)\termcap.c
X  
X  $(OBJ)\topl.0: $(HACK_H)	$(INCL)\termcap.h	$(INCL)\wintty.h \
X  	$(WIN)\topl.c
X! 	$(CC) $(CFLAGS) /DOVL0 /NT$(@F) /Fo$@ $(WIN)\topl.c
X  
X  $(OBJ)\topl.1-2: $(HACK_H)	$(INCL)\termcap.h	$(INCL)\wintty.h \
X  	$(WIN)\topl.c
X! 	$(CC) $(CFLAGS) /DOVL1 /DOVL2 /NT$(@F) /Fo$@ $(WIN)\topl.c
X  
X  $(OBJ)\topl.b: $(HACK_H)	$(INCL)\termcap.h	$(INCL)\wintty.h \
X  	$(WIN)\topl.c
X! 	$(CC) $(CFLAGS) /DOVLB /NT$(@F) /Fo$@ $(WIN)\topl.c
X  
X  $(OBJ)\wintty.o: $(HACK_H)	$(INCL)\wintty.h	$(INCL)\termcap.h \
X  	$(WIN)\wintty.c
X! 	$(CC) $(CFLAGS) /DOVL0 /DOVL1 /DOVL2 /DOVLB /Fo$@ $(WIN)\wintty.c
X  
X  #
X  #	$(SRC) files.
X*** /tmp/da12547	Tue Jun  1 17:31:43 1993
X--- sys/msdos/MakeMSC.utl	Tue Jun  1 12:38:49 1993
X***************
X*** 1,8 ****
X! #	SCCS Id: @(#)MakeMSC.utl	 3.1	 93/01/18
X  # Copyright (c) NetHack PC Development Team 1992, 1993.
X  # NetHack may be freely redistributed.  See license for details.
X  #
X  # PC NetHack 3.1 Utilities Source Code Makefile for Microsoft(tm) "C" >= 6.0ax
X  #
X  #	In addition to your C compiler,
X  #
X--- 1,9 ----
X! #	SCCS Id: @(#)MakeMSC.utl	 3.1	 93/05/23
X  # Copyright (c) NetHack PC Development Team 1992, 1993.
X  # NetHack may be freely redistributed.  See license for details.
X  #
X  # PC NetHack 3.1 Utilities Source Code Makefile for Microsoft(tm) "C" >= 6.0ax
X+ # and Microsoft Visual C++ Professional version >= 1.0.
X  #
X  #	In addition to your C compiler,
X  #
X***************
X*** 214,220 ****
X  	$(LINK) $(LFLAGS) $(MAKEOBJS), $*.exe,, $(CLIB);
X  
X  makedefs.o:	$(CONFIG_H)	    $(PERMONST_H)      $(INCL)\objclass.h \
X! 		$(INCL)\monsym.h    $(INCL)\qtext.h
X  
X  #
X  #	Level Compiler Dependencies
X--- 215,221 ----
X  	$(LINK) $(LFLAGS) $(MAKEOBJS), $*.exe,, $(CLIB);
X  
X  makedefs.o:	$(CONFIG_H)	    $(PERMONST_H)      $(INCL)\objclass.h \
X! 		$(INCL)\monsym.h    $(INCL)\qtext.h	$(INCL)\patchlevel.h
X  
X  #
X  #	Level Compiler Dependencies
X*** /tmp/da12555	Tue Jun  1 17:31:45 1993
X--- sys/msdos/Makefile.dat	Tue Apr 27 17:03:04 1993
X***************
X*** 1,9 ****
X! #	SCCS Id: @(#)Makefile.dat  3.1   93/01/18
X  #	Copyright (c) NetHack PC Development Team 1992, 1993.
X  #	NetHack may be freely redistributed.  See license for details.
X  #
X! # PC NetHack 3.1 Data Files Makefile for NDMAKE and MSC >= 6.0ax
X! # or DGJPP 1.9.
X  
X  DAT	= ..\dat
X  INCL	= ..\include
X--- 1,9 ----
X! #	SCCS Id: @(#)Makefile.dat  3.1   93/04/25
X  #	Copyright (c) NetHack PC Development Team 1992, 1993.
X  #	NetHack may be freely redistributed.  See license for details.
X  #
X! # PC NetHack 3.1 Data Files Makefile for NDMAKE and MSC >= 6.0ax, or
X! # MSVC >= 1.0, or DGJPP 1.9.
X  
X  DAT	= ..\dat
X  INCL	= ..\include
X*** /tmp/da12587	Tue Jun  1 17:31:53 1993
X--- sys/msdos/msdos.c	Mon May 17 15:11:24 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)msdos.c	 3.1	 93/02/16		  */
X  /* Copyright (c) NetHack PC Development Team 1990, 1991, 1992	  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)msdos.c	 3.1	 93/05/06		  */
X  /* Copyright (c) NetHack PC Development Team 1990, 1991, 1992	  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 10,18 ****
X  
X  #define NEED_VARARGS
X  #include "hack.h"
X- #ifdef MICRO
X- #include "termcap.h"
X- #endif
X  
X  #ifdef MSDOS
X  
X--- 10,15 ----
X***************
X*** 34,53 ****
X  /*
X   * BIOS interrupts
X   */
X  #define KEYBRD_BIOS 0x16
X! #define VIDEO_BIOS  0x10
X  /*
X   * Keyboard BIOS functions
X   */
X  #define READCHAR    0x00    /* Read Character from Keyboard */
X  #define GETKEYFLAGS 0x02    /* Get Keyboard Flags */
X- /*
X-  * Video BIOS functions
X-  */
X- #define SETCURPOS   0x02    /* Set Cursor Position */
X- #define GETMODE     0x0f    /* Get Video Mode */
X- #define FONTINFO    0x1130  /* Get Font Info */
X  
X  
X  #ifdef OVL0
X  
X--- 31,49 ----
X  /*
X   * BIOS interrupts
X   */
X+ #ifdef PC9801
X+ #define KEYBRD_BIOS 0x18
X+ #else
X  #define KEYBRD_BIOS 0x16
X! #endif
X! 
X  /*
X   * Keyboard BIOS functions
X   */
X  #define READCHAR    0x00    /* Read Character from Keyboard */
X  #define GETKEYFLAGS 0x02    /* Get Keyboard Flags */
X  
X+ void FDECL(get_cursor,(int *, int *));
X  
X  #ifdef OVL0
X  
X***************
X*** 76,83 ****
X--- 72,84 ----
X  /*
X   *  Keyboard translation tables.
X   */
X+ #ifdef PC9801
X+ #define KEYPADLO	0x38
X+ #define KEYPADHI	0x50
X+ #else
X  #define KEYPADLO	0x47
X  #define KEYPADHI	0x53
X+ #endif
X  
X  #define PADKEYS 	(KEYPADHI - KEYPADLO + 1)
X  #define iskeypad(x)	(KEYPADLO <= (x) && (x) <= KEYPADHI)
X***************
X*** 90,98 ****
X--- 91,126 ----
X  static const struct pad {
X  	char normal, shift, cntrl;
X  } keypad[PADKEYS] = {
X+ #ifdef PC9801
X+ 			{'>', '>', '>'},		/* Ins */
X+ 			{'<', '<', '<'},		/* Del */
X+ 			{'k', 'K', C('k')},		/* Up */
X+ 			{'h', 'H', C('h')},		/* Left */
X+ 			{'l', 'L', C('l')},		/* Right */
X+ 			{'j', 'J', C('j')},		/* Down */
X+ 			{ 0 ,  0 ,  0 },		/* HomeClr */
X+ 			{'?', '?', '?' },		/* Help */
X+ 			{'m', C('p'), C('p')},		/* - */
X+ 			{'/', '/', '/'},		/* / */
X  			{'y', 'Y', C('y')},		/* 7 */
X  			{'k', 'K', C('k')},		/* 8 */
X  			{'u', 'U', C('u')},		/* 9 */
X+ 			{'*', '*', '*'},		/* * */
X+ 			{'h', 'H', C('h')},		/* 4 */
X+ 			{'g', 'g', 'g'},		/* 5 */
X+ 			{'l', 'L', C('l')},		/* 6 */
X+ 			{'p', 'P', C('p')},		/* + */
X+ 			{'b', 'B', C('b')},		/* 1 */
X+ 			{'j', 'J', C('j')},		/* 2 */
X+ 			{'n', 'N', C('n')},		/* 3 */
X+ 			{'=', '=', '='},		/* = */
X+ 			{'i', 'I', C('i')},		/* 0 */
X+ 			{',' ':', ':'}, 		/* , */
X+ 			{'.', '.', '.'} 		/* . */
X+ #else
X+ 			{'y', 'Y', C('y')},		/* 7 */
X+ 			{'k', 'K', C('k')},		/* 8 */
X+ 			{'u', 'U', C('u')},		/* 9 */
X  			{'m', C('p'), C('p')},		/* - */
X  			{'h', 'H', C('h')},		/* 4 */
X  			{'g', 'g', 'g'},		/* 5 */
X***************
X*** 103,112 ****
X--- 131,168 ----
X  			{'n', 'N', C('n')},		/* 3 */
X  			{'i', 'I', C('i')},		/* Ins */
X  			{'.', ':', ':'}			/* Del */
X+ #endif
X  }, numpad[PADKEYS] = {
X+ #ifdef PC9801
X+ 			{'>', '>', '>'},		/* Ins */
X+ 			{'<', '<', '<'},		/* Del */
X+ 			{'8', M('8'), '8'},		/* Up */
X+ 			{'4', M('4'), '4'},		/* Left */
X+ 			{'6', M('6'), '6'},		/* Right */
X+ 			{'2', M('2'), '2'},		/* Down */
X+ 			{ 0 ,  0 ,  0 },		/* HomeClr */
X+ 			{'?', '?', '?'},		/* Help */
X+ 			{'m', C('p'), C('p')},		/* - */
X+ 			{'/', '/', '/'},		/* / */
X  			{'7', M('7'), '7'},		/* 7 */
X  			{'8', M('8'), '8'},		/* 8 */
X  			{'9', M('9'), '9'},		/* 9 */
X+ 			{'*', '*', '*'},		/* * */
X+ 			{'4', M('4'), '4'},		/* 4 */
X+ 			{'g', 'G', 'g'},		/* 5 */
X+ 			{'6', M('6'), '6'},		/* 6 */
X+ 			{'p', 'P', C('p')},		/* + */
X+ 			{'1', M('1'), '1'},		/* 1 */
X+ 			{'2', M('2'), '2'},		/* 2 */
X+ 			{'3', M('3'), '3'},		/* 3 */
X+ 			{'=', '=', '='},		/* = */
X+ 			{'i', 'I', C('i')},		/* 0 */
X+ 			{',', ':', ':'},		/* , */
X+ 			{'.', '.', '.'} 		/* . */
X+ #else
X+ 			{'7', M('7'), '7'},		/* 7 */
X+ 			{'8', M('8'), '8'},		/* 8 */
X+ 			{'9', M('9'), '9'},		/* 9 */
X  			{'m', C('p'), C('p')},		/* - */
X  			{'4', M('4'), '4'},		/* 4 */
X  			{'g', 'G', 'g'},		/* 5 */
X***************
X*** 117,122 ****
X--- 173,179 ----
X  			{'3', M('3'), '3'},		/* 3 */
X  			{'i', 'I', C('i')},		/* Ins */
X  			{'.', ':', ':'}			/* Del */
X+ #endif
X  };
X  
X  /*
X***************
X*** 127,138 ****
X--- 184,206 ----
X   * scan code table to translate the scan code into a letter, then set the
X   * "meta" bit for it.  -3.
X   */
X+ #ifdef PC9801
X+ #define SCANLO		0x5
X+ #else
X  #define SCANLO		0x10
X+ #endif /* PC9801 */
X  
X  static const char scanmap[] = { 	/* ... */
X+ #ifdef PC9801
X+ 			 0,  0,  0,  0,  0,  0, '-','^','\\','\b',
X+ 	'\t','q','w','e','r','t','y','u','i','o','p','@','[', '\n',
X+ 	'a','s','d','f','g','h','j','k','l',';',':', ']',
X+ 	'z','x','c','v','b','N','m',',','.','/'	/* ... */
X+ #else
X  	'q','w','e','r','t','y','u','i','o','p','[',']', '\n',
X  	0, 'a','s','d','f','g','h','j','k','l',';','\'', '`',
X  	0, '\\', 'z','x','c','v','b','n','m',',','.','?'	/* ... */
X+ #endif /* PC9801 */
X  };
X  
X  #define inmap(x)	(SCANLO <= (x) && (x) < SCANLO + SIZE(scanmap))
X***************
X*** 140,148 ****
X--- 208,223 ----
X  /*
X   * BIOSgetch gets keys directly with a BIOS call.
X   */
X+ #ifdef PC9801
X+ #define SHIFT		0x1
X+ #define KANA		0x4
X+ #define GRPH		0x8
X+ #define CTRL		0x10
X+ #else
X  #define SHIFT		(0x1 | 0x2)
X  #define CTRL		0x4
X  #define ALT		0x8
X+ #endif /* PC9801 */
X  
X  static char
X  BIOSgetch()
X***************
X*** 175,181 ****
X--- 250,262 ----
X  			ch = kpad[scan - KEYPADLO].normal;
X  	}
X  	/* Translate unassigned Alt-letters */
X+ #ifdef PC9801
X+ 	if (shift & KANA)
X+ 		return 0;
X+ 	if ((shift & GRPH) && (ch >= 0x80)) {
X+ #else
X  	if ((shift & ALT) && !ch) {
X+ #endif
X  		if (inmap(scan))
X  			ch = scanmap[scan - SCANLO];
X  		return (isprint(ch) ? M(ch) : ch);
X***************
X*** 194,199 ****
X--- 275,284 ----
X  	intdos(&regs, &regs);
X  	ch = regs.h.al;
X  
X+ #ifdef PC9801
X+ 	if (ch < 0)	/* KANA letters and GRPH-shifted letters(?) */
X+ 		ch = 0; /* munch it */
X+ #else
X  	/*
X  	 * The extended codes for Alt-shifted letters, and unshifted keypad
X  	 * and function keys, correspond to the scan codes.  So we can still
X***************
X*** 212,217 ****
X--- 297,303 ----
X  			if (isprint(ch)) ch = M(ch);
X  		} else ch = 0;		/* munch it */
X  	}
X+ #endif
X  	return (ch);
X  }
X  
X***************
X*** 392,461 ****
X  	return (regs.x.dx);
X  }
X  
X! #endif /* OVL0 */
X! #ifdef OVLB
X! 
X! void
X! get_scr_size()
X! {
X! 	union REGS regs;
X! 
X! 	if (!flags.BIOS) {		/* assume standard screen size */
X! 		CO = 80;
X! 		LI = 24;
X! 		return;
X! 	}
X! 
X! 	regs.x.ax = FONTINFO;
X! 	regs.x.bx = 0;			/* current ROM BIOS font */
X! 	regs.h.dl = 24;			/* default row count */
X! 					/* in case no EGA/MCGA/VGA */
X! 	int86(VIDEO_BIOS, &regs, &regs); /* Get Font Information */
X! 
X! 	/* MDA/CGA/PCjr ignore INT 10h, Function 11h, but since we
X! 	 * cleverly loaded up DL with the default, everything's fine.
X! 	 *
X! 	 * Otherwise, DL now contains rows - 1.  Also, CX contains the
X! 	 * points (bytes per character) and ES:BP points to the font
X! 	 * table.  -3.
X! 	 */
X! 
X! 	regs.h.ah = GETMODE;
X! 	int86(VIDEO_BIOS, &regs, &regs); /* Get Video Mode */
X! 
X! 	/* This goes back all the way to the original PC.  Completely
X! 	 * safe.  AH contains # of columns, AL contains display mode,
X! 	 * and BH contains the active display page.
X! 	 */
X! 
X! 	LI = regs.h.dl + 1;
X! 	CO = regs.h.ah;
X! }
X! 
X! #endif /* OVLB */
X! #ifdef OVL0
X! 
X! void
X! gotoxy(x,y)
X! int x,y;
X! {
X! 	union REGS regs;
X! 
X! 	x--; y--;			/* (0,0) is upper right corner */
X! 
X! 	regs.h.ah = SETCURPOS;
X! 	regs.h.bh = 0;			/* display page */
X! 	regs.h.dh = y;			/* row */
X! 	regs.h.dl = x;			/* column */
X! 	int86(VIDEO_BIOS, &regs, &regs); /* Set Cursor Position */
X! 
X! 	/* This, too, goes back all the way to the original PC.  If
X! 	 * we ever get so fancy as to swap display pages (i doubt it),
X! 	 * then we'll need to set BH appropriately.  This function
X! 	 * returns nothing.  -3.
X! 	 */
X! }
X! 
X! #endif /* OVL0 */
X  
X  #endif /* MSDOS */
X--- 478,483 ----
X  	return (regs.x.dx);
X  }
X  
X! # endif /* OVLB */
X  
X  #endif /* MSDOS */
X*** /tmp/da12635	Tue Jun  1 17:32:07 1993
X--- sys/msdos/setup.bat	Tue Jun  1 12:13:35 1993
X***************
X*** 25,31 ****
X  goto err_set
X  
X  :ok_gcc
X! echo Copying Makefiles.
X  echo "MakeGCC.src -> ..\..\src\makefile"
X  copy makegcc.src ..\..\src\makefile
X  echo "MakeGCC.utl -> ..\..\util\makefile"
X--- 25,31 ----
X  goto err_set
X  
X  :ok_gcc
X! echo Symbolic links, msdos style
X  echo "MakeGCC.src -> ..\..\src\makefile"
X  copy makegcc.src ..\..\src\makefile
X  echo "MakeGCC.utl -> ..\..\util\makefile"
X***************
X*** 38,46 ****
X  echo Setting Environment variables for Compiler.
X  set  CL= /AL /G2 /Oo /Gs /Gt18 /Zp1 /W0 /I..\include /nologo /DMOVERLAY
X  echo Copying Makefiles.
X! echo "MakeMSC.src -> ..\..\dat\makefile"
X  copy makemsc.src ..\..\src\makefile
X! echo "MakeMSC.utl -> ..\..\dat\makefile"
X  copy makemsc.utl ..\..\util\makefile
X  echo "Makefile.dat -> ..\..\dat\makefile"
X  copy makefile.dat ..\..\dat\makefile
X--- 38,46 ----
X  echo Setting Environment variables for Compiler.
X  set  CL= /AL /G2 /Oo /Gs /Gt18 /Zp1 /W0 /I..\include /nologo /DMOVERLAY
X  echo Copying Makefiles.
X! echo "MakeMSC.src -> ..\..\src\makefile"
X  copy makemsc.src ..\..\src\makefile
X! echo "MakeMSC.utl -> ..\..\util\makefile"
X  copy makemsc.utl ..\..\util\makefile
X  echo "Makefile.dat -> ..\..\dat\makefile"
X  copy makefile.dat ..\..\dat\makefile
END_OF_FILE
if test 54581 -ne `wc -c <'patches02o'`; then
    echo shar: \"'patches02o'\" unpacked with wrong size!
fi
# end of 'patches02o'
if test -f 'sys/amiga/charwin.uu' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'sys/amiga/charwin.uu'\" to \"'sys/amiga/charwin.uu.orig'\"
  mv -f 'sys/amiga/charwin.uu' 'sys/amiga/charwin.uu.orig'
fi
echo shar: Extracting \"'sys/amiga/charwin.uu'\" \(3696 characters\)
sed "s/^X//" >'sys/amiga/charwin.uu' <<'END_OF_FILE'
Xbegin 664 char.pw
XM4&]W97)7:6YD;W=S('8R+C5C(*DQ.3@W+"`Q.3@X(&)Y($E.3U9!5%)/3DE#
XM4RP@24Y#+B`@("`@("`@("`@("`@("`@("`@("`@```"K`````E```#\````
XM`0`````!``````=C:&%R+F,`!]$Y^``````"@`#(``,``8````\`````!\>D
XMP````````````````@````$``````0`````!`````!@```#@X.#0<%#``(``
XML`#P`(!04/#P```````!``(0"``@`D``!0`%_____P``````````````````
XM```````````````-!\\EP```````!E1Y<&5?```!`)L`&`$+`&P`!0`%____
XM_P```!%0:6-K(&$@0VAA<F%C=&5R``?17)``B0`.`'H`"@````,``0?17&0`
XM````!]$D(`````````````$'T3B0_____P,```4'T5QT````````````>P``
XM`'L`"P````L```````````<``0``&P`!``````?/)]``````````"D)A<F)A
XM<FEA;@`````*`````0?/)>`'SRCX!\\KH`?/+D@'SR\`!\\PD`````$`````
XM`0`````!``````0G0B<``````0`````!``?173``B0`;`'H`"@````,``0?1
XM7+P`````!]$FT`````````````('T3Y0_____P,```4'T5S,````````````
XM>P```'L`"P````L```````````<``0``,``!``````?/,^``````````!$5L
XM9@`````*`````0?/.%`'SSX(!\\^P`?/0N`'SUN8!\]GH`````$``````0``
XM```!``````0G12<``````0`````!``?178@`B0`H`'H`"@````,``0?175P`
XM````!]%!J`````````````,'T4-H_____P,```4'T5UL````````````>P``
XM`'L`"P````L```````````<``0``)``!``````?/9_``````````!TMN:6=H
XM=``````*`````0?/:]@'SWG@!\^!N`?/K!`'SZXP!]$DT`````$``````0``
XM```!``````0G2R<``````0`````!``?17@``"0`.`'H`"@````,``0?17;0`
XM````!]%$``````````````0'T5NX_____P,```4'T5W$````````````>P``
XM`'L`"P````L```````````<``0``$``!``````?/].``````````#4%R8VAE
XM;VQO9VES=``````*`````0?13B`'T5)`!]%<Z`?17/@'T5W@!]%=\`````$`
XM`````0`````!``````0G02<``````0`````!``?17Q``"0`;`'H`"@````,`
XM`0?17BP`````!]%>6`````````````4'T5Z(_____P,```4'T5X\````````
XM````>P```'L`"P````L```````````<``0``(0`!``````?/]/@`````````
XM"$-A=F5M86X`````"@````$'T5ZP!]%>P`?17M`'T5[@!]%>\`?17P`````!
XM``````$``````0`````$)T,G``````$``````0`'T6`@``D`*`!Z``H````#
XM``$'T5\\``````?17V@````````````&!]%?F/____\#```%!]%?3```````
XM`````'L```![``L````+```````````'``$``",``0`````'S_4P````````
XM``=(96%L97(`````"@````$'T5_`!]%?T`?17^`'T5_P!]%@``?18!`````!
XM``````$``````0`````$)T@G``````$``````0`'T6$P``D`-0!Z``H````#
XM``$'T6!,``````?18'@````````````'!]%@J/____\#```%!]%@7```````
XM`````'L```![``L````+```````````'``$``"0``0`````'S_C`````````
XM``=0<FEE<W0`````"@````$'T6#0!]%@X`?18/`'T6$`!]%A$`?182`````!
XM``````$``````0`````$)U`G``````$``````0`'T6)``(D`-0!Z``H````#
XM``$'T6%<``````?188@````````````(!]%AN/____\#```%!]%A;```````
XM`````'L```![``L````+```````````'``$``"@``0`````'S_BP````````
XM``92;V=U90`````*`````0?18>`'T6'P!]%B``?18A`'T6(@!]%B,`````$`
XM`````0`````!``````0G4B<``````0`````!``?18U``B0!"`'H`"@````,`
XM`0?18FP`````!]%BF`````````````D'T6+(_____P,```4'T6)\````````
XM````>P```'L`"P````L```````````<``0``(@`!``````?1(Y``````````
XM"%1O=7)I<W0`````"@````$'T6+P!]%C``?18Q`'T6,@!]%C,`?18T`````!
XM``````$``````0`````$)U0G``````$``````0`'T61@``D`0@!Z``H````#
XM``$'T6-\``````?18Z@````````````*!]%CV/____\#```%!]%CC```````
XM`````'L```![``L````+```````````'``$``"$``0`````'T2,8````````
XM``A386UU<F%I``````H````!!]%D``?19!`'T60@!]%D,`?19$`'T610````
XM`0`````!``````$`````!"=3)P`````!``````$`!]%P*``)`%X`^@`*````
XM`P`!!]%DC``````'T62X``````````````?1;\#_____`0``!0?19)P`````
XM``````#[````^P`+````"P```````````0`!```.``$`````!]%DV```````
XM```=4&EC:R!A(%)A;F1O;2!#:&%R86-T97(@5'EP90`````*`````0?190`'
XMT6T`!]%OZ`?1;_@'T7`(!]%P&`````$``````0`````!``````(Q``````$`
XM`````0`'T7%```D`3P!Z``H````#``$'T7!4``````?1<(`````````````,
XM!]%PN/____\#```%!]%P9````````````'L```![``L````+```````````'
XM``$``!T``0`````'T29X``````````E686QK>7)I90`````*`````0?1<.`'
XMT7#P!]%Q``?1<1`'T7$@!]%Q,`````$``````0`````!``````0G5B<`````
XM`0`````!````````B0!/`'H`"@````,``0?1<6P`````!]%QF```````````
XM``T'T7'(_____P,```4'T7%\````````````>P```'L`"P````L`````````
XM``<``0``)@`!``````?1)A``````````!U=I>F%R9``````*`````0?1<?`'
XMT7(`!]%R$`?1<B`'T7(P!]%R0`````$``````0`````!``````0G5R<`````
X'`0`````!``?1
X`
Xend
END_OF_FILE
if test 3696 -ne `wc -c <'sys/amiga/charwin.uu'`; then
    echo shar: \"'sys/amiga/charwin.uu'\" unpacked with wrong size!
fi
# end of 'sys/amiga/charwin.uu'
echo shar: End of archive 14 \(of 33\).
cp /dev/null ark14isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 33 archives.
    echo "Now execute ./patchit.sh"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
