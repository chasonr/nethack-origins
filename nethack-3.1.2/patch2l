Path: uunet!news.tek.com!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v17i087:  nethack31 - display oriented dungeons & dragons (Ver. 3.1), Patch2l/33
Date: 11 Jun 1993 00:10:40 GMT
Organization: Tektronix, Inc, Redmond, OR, USA
Lines: 2259
Approved: billr@saab.CNA.TEK.COM
Message-ID: <1v8ii0$j18@ying.cna.tek.com>
NNTP-Posting-Host: saab.cna.tek.com
Xref: uunet comp.sources.games:1775

Submitted-by: izchak@linc.cis.upenn.edu (Izchak Miller)
Posting-number: Volume 17, Issue 87
Archive-name: nethack31/Patch2l
Patch-To: nethack31: Volume 16, Issue 1-116
Environment: Amiga, Atari, Mac, MS-DOS, Windows-NT, OS2, Unix, VMS, X11



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 12 (of 33)."
# Contents:  patches02s
# Wrapped by billr@saab on Thu Jun 10 16:55:03 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'patches02s' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'patches02s'\" to \"'patches02s.orig'\"
  mv -f 'patches02s' 'patches02s.orig'
fi
echo shar: Extracting \"'patches02s'\" \(55034 characters\)
sed "s/^X//" >'patches02s' <<'END_OF_FILE'
X*** /tmp/da14212	Tue Jun  1 20:16:50 1993
X--- sys/share/NetHack.cnf	Mon Mar 29 14:33:37 1993
X***************
X*** 1,8 ****
X--- 1,17 ----
X+ #	SCSS Id: @(#)Nethack.cnf	3.1	    93/03/26
X+ #	Copyright (c) NetHack PC Development Team 1990, 1991, 1992, 1993
X+ #	NetHack may be freely redistributed.  See license for details.
X+ #
X  # A '#' at the beginning of a line means the rest of the line is a comment.
X  #
X  # This configuration file is set up for two cases, for a hard disk
X  # (as drive C:), and for two floppy disks.
X  #
X+ # Some options MUST be set in this file, other options can be toggled while
X+ # playing.  For a list of options available see the <opthelp.> file.  If
X+ # the game plays slowly you might notice some improvement by setting
X+ # !time and !showexp, which will reduce screen I/O somewhat.
X+ #
X  # To change the configuration, comment out the unwanted lines, and
X  # uncomment the configuration you want.
X  
X***************
X*** 28,34 ****
X  # Other general options.  You might also set "silent" so as not to attract
X  # the boss's attention.
X  #
X! OPTIONS=time,rest_on_space,nopickup,number_pad
X  
X  
X  # *** HARD DISK CONFIGURATION ***
X--- 37,43 ----
X  # Other general options.  You might also set "silent" so as not to attract
X  # the boss's attention.
X  #
X! OPTIONS=time,rest_on_space,noautopickup,number_pad
X  
X  
X  # *** HARD DISK CONFIGURATION ***
X*** /tmp/da14236	Tue Jun  1 20:16:56 1993
X--- sys/share/dgn_yacc.c	Tue Jun  1 20:09:28 1993
X***************
X*** 1,7 ****
X  extern char *malloc(), *realloc();
X! 
X! # line 2 "dgn_comp.y"
X! /*	SCCS Id: @(#)dgn_comp.c	3.1	93/01/17	*/
X  /*	Copyright (c) 1989 by Jean-Christophe Collet */
X  /*	Copyright (c) 1990 by M. Stephenson				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X--- 1,5 ----
X  extern char *malloc(), *realloc();
X! /*	SCCS Id: @(#)dgn_comp.c	3.1	93/05/15	*/
X  /*	Copyright (c) 1989 by Jean-Christophe Collet */
X  /*	Copyright (c) 1990 by M. Stephenson				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X***************
X*** 27,34 ****
X  #include "config.h"
X  #include "dgn_file.h"
X  
X! void FDECL(yyerror, (char *));
X! void FDECL(yywarning, (char *));
X  int NDECL(yylex);
X  int NDECL(yyparse);
X  int FDECL(getchain, (char *));
X--- 25,32 ----
X  #include "config.h"
X  #include "dgn_file.h"
X  
X! void FDECL(yyerror, (const char *));
X! void FDECL(yywarning, (const char *));
X  int NDECL(yylex);
X  int NDECL(yyparse);
X  int FDECL(getchain, (char *));
X***************
X*** 64,73 ****
X  static int in_dungeon = 0, n_dgns = -1, n_levs = -1, n_brs = -1;
X  
X  extern int fatal_error;
X! extern char* fname;
X  
X- 
X- # line 69 "dgn_comp.y"
X  typedef union 
X  {
X  	int	i;
X--- 62,69 ----
X  static int in_dungeon = 0, n_dgns = -1, n_levs = -1, n_brs = -1;
X  
X  extern int fatal_error;
X! extern const char *fname;
X  
X  typedef union 
X  {
X  	int	i;
X***************
X*** 104,112 ****
X  YYSTYPE yylval, yyval;
X  # define YYERRCODE 256
X  
X- # line 450 "dgn_comp.y"
X  
X- 
X  void
X  init_dungeon()
X  {
X--- 100,106 ----
X***************
X*** 946,959 ****
X  	switch( yytmp )
X  	{
X  		
X! case 2:
X! # line 86 "dgn_comp.y"
X! {
X  			output_dgn();
X  		  } break;
X! case 9:
X! # line 102 "dgn_comp.y"
X! {
X  			init_dungeon();
X  			strcpy(tmpdungeon[n_dgns].name, yypvt[-3].str);
X  			if (!strcmp(yypvt[-2].str, "none"))
X--- 940,949 ----
X  	switch( yytmp )
X  	{
X  		
X! case 2:{
X  			output_dgn();
X  		  } break;
X! case 9:{
X  			init_dungeon();
X  			strcpy(tmpdungeon[n_dgns].name, yypvt[-3].str);
X  			if (!strcmp(yypvt[-2].str, "none"))
X***************
X*** 966,1010 ****
X  			tmpdungeon[n_dgns].lev.rand = couple.rand;
X  			tmpdungeon[n_dgns].chance = yypvt[-0].i;
X  		  } break;
X! case 10:
X! # line 118 "dgn_comp.y"
X! {
X  			yyval.i = 0;
X  		  } break;
X! case 11:
X! # line 122 "dgn_comp.y"
X! {
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 15:
X! # line 133 "dgn_comp.y"
X! {
X  			tmpdungeon[n_dgns].entry_lev = yypvt[-0].i;
X  		  } break;
X! case 17:
X! # line 142 "dgn_comp.y"
X! {
X  			if(yypvt[-0].i <= TOWN || yypvt[-0].i >= D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal description - ignoring!");
X  			else
X  			    tmpdungeon[n_dgns].flags |= yypvt[-0].i ;
X  		  } break;
X! case 18:
X! # line 149 "dgn_comp.y"
X! {
X  			if(yypvt[-0].i && yypvt[-0].i < D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal alignment - ignoring!");
X  			else
X  			    tmpdungeon[n_dgns].flags |= yypvt[-0].i ;
X  		  } break;
X! case 19:
X! # line 158 "dgn_comp.y"
X! {
X  			strcpy(tmpdungeon[n_dgns].protoname, yypvt[-0].str);
X  		  } break;
X! case 25:
X! # line 171 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-3].str);
X  			if (!strcmp(yypvt[-2].str, "none"))
X--- 956,986 ----
X  			tmpdungeon[n_dgns].lev.rand = couple.rand;
X  			tmpdungeon[n_dgns].chance = yypvt[-0].i;
X  		  } break;
X! case 10:{
X  			yyval.i = 0;
X  		  } break;
X! case 11:{
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 15:{
X  			tmpdungeon[n_dgns].entry_lev = yypvt[-0].i;
X  		  } break;
X! case 17:{
X  			if(yypvt[-0].i <= TOWN || yypvt[-0].i >= D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal description - ignoring!");
X  			else
X  			    tmpdungeon[n_dgns].flags |= yypvt[-0].i ;
X  		  } break;
X! case 18:{
X  			if(yypvt[-0].i && yypvt[-0].i < D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal alignment - ignoring!");
X  			else
X  			    tmpdungeon[n_dgns].flags |= yypvt[-0].i ;
X  		  } break;
X! case 19:{
X  			strcpy(tmpdungeon[n_dgns].protoname, yypvt[-0].str);
X  		  } break;
X! case 25:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-3].str);
X  			if (!strcmp(yypvt[-2].str, "none"))
X***************
X*** 1017,1025 ****
X  			tmplevel[n_levs].lev.rand = couple.rand;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 26:
X! # line 185 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-4].str);
X  			if (!strcmp(yypvt[-3].str, "none"))
X--- 993,999 ----
X  			tmplevel[n_levs].lev.rand = couple.rand;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 26:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-4].str);
X  			if (!strcmp(yypvt[-3].str, "none"))
X***************
X*** 1033,1041 ****
X  			tmplevel[n_levs].rndlevs = yypvt[-0].i;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 27:
X! # line 202 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-4].str);
X  			if (!strcmp(yypvt[-3].str, "none"))
X--- 1007,1013 ----
X  			tmplevel[n_levs].rndlevs = yypvt[-0].i;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 27:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-4].str);
X  			if (!strcmp(yypvt[-3].str, "none"))
X***************
X*** 1049,1057 ****
X  			tmplevel[n_levs].chance = yypvt[-0].i;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 28:
X! # line 217 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-5].str);
X  			if (!strcmp(yypvt[-4].str, "none"))
X--- 1021,1027 ----
X  			tmplevel[n_levs].chance = yypvt[-0].i;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 28:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-5].str);
X  			if (!strcmp(yypvt[-4].str, "none"))
X***************
X*** 1066,1090 ****
X  			tmplevel[n_levs].rndlevs = yypvt[-0].i;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 29:
X! # line 235 "dgn_comp.y"
X! {
X  			if(yypvt[-0].i >= D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal description - ignoring!");
X  			else
X  			    tmplevel[n_levs].flags |= yypvt[-0].i ;
X  		  } break;
X! case 30:
X! # line 242 "dgn_comp.y"
X! {
X  			if(yypvt[-0].i && yypvt[-0].i < D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal alignment - ignoring!");
X  			else
X  			    tmplevel[n_levs].flags |= yypvt[-0].i ;
X  		  } break;
X! case 31:
X! # line 251 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-4].str);
X  			if (!strcmp(yypvt[-3].str, "none"))
X--- 1036,1054 ----
X  			tmplevel[n_levs].rndlevs = yypvt[-0].i;
X  			tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 29:{
X  			if(yypvt[-0].i >= D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal description - ignoring!");
X  			else
X  			    tmplevel[n_levs].flags |= yypvt[-0].i ;
X  		  } break;
X! case 30:{
X  			if(yypvt[-0].i && yypvt[-0].i < D_ALIGN_CHAOTIC)
X  			    yyerror("Illegal alignment - ignoring!");
X  			else
X  			    tmplevel[n_levs].flags |= yypvt[-0].i ;
X  		  } break;
X! case 31:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-4].str);
X  			if (!strcmp(yypvt[-3].str, "none"))
X***************
X*** 1099,1107 ****
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 32:
X! # line 267 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-5].str);
X  			if (!strcmp(yypvt[-4].str, "none"))
X--- 1063,1069 ----
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 32:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-5].str);
X  			if (!strcmp(yypvt[-4].str, "none"))
X***************
X*** 1117,1125 ****
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 33:
X! # line 286 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-5].str);
X  			if (!strcmp(yypvt[-4].str, "none"))
X--- 1079,1085 ----
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 33:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-5].str);
X  			if (!strcmp(yypvt[-4].str, "none"))
X***************
X*** 1135,1143 ****
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 34:
X! # line 303 "dgn_comp.y"
X! {
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-6].str);
X  			if (!strcmp(yypvt[-5].str, "none"))
X--- 1095,1101 ----
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 34:{
X  			init_level();
X  			strcpy(tmplevel[n_levs].name, yypvt[-6].str);
X  			if (!strcmp(yypvt[-5].str, "none"))
X***************
X*** 1154,1162 ****
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 37:
X! # line 327 "dgn_comp.y"
X! {
X  			init_branch();
X  			strcpy(tmpbranch[n_brs].name, yypvt[-4].str);
X  			tmpbranch[n_brs].lev.base = couple.base;
X--- 1112,1118 ----
X  			if(!check_level()) n_levs--;
X  			else tmpdungeon[n_dgns].levels++;
X  		  } break;
X! case 37:{
X  			init_branch();
X  			strcpy(tmpbranch[n_brs].name, yypvt[-4].str);
X  			tmpbranch[n_brs].lev.base = couple.base;
X***************
X*** 1166,1174 ****
X  			if(!check_branch()) n_brs--;
X  			else tmpdungeon[n_dgns].branches++;
X  		  } break;
X! case 38:
X! # line 340 "dgn_comp.y"
X! {
X  			init_branch();
X  			strcpy(tmpbranch[n_brs].name, yypvt[-5].str);
X  			tmpbranch[n_brs].chain = getchain(yypvt[-4].str);
X--- 1122,1128 ----
X  			if(!check_branch()) n_brs--;
X  			else tmpdungeon[n_dgns].branches++;
X  		  } break;
X! case 38:{
X  			init_branch();
X  			strcpy(tmpbranch[n_brs].name, yypvt[-5].str);
X  			tmpbranch[n_brs].chain = getchain(yypvt[-4].str);
X***************
X*** 1179,1222 ****
X  			if(!check_branch()) n_brs--;
X  			else tmpdungeon[n_dgns].branches++;
X  		  } break;
X! case 39:
X! # line 354 "dgn_comp.y"
X! {
X  			yyval.i = TBR_STAIR;	/* two way stair */
X  		  } break;
X! case 40:
X! # line 358 "dgn_comp.y"
X! {
X  			yyval.i = TBR_STAIR;	/* two way stair */
X  		  } break;
X! case 41:
X! # line 362 "dgn_comp.y"
X! {
X  			yyval.i = TBR_NO_UP;	/* no up staircase */
X  		  } break;
X! case 42:
X! # line 366 "dgn_comp.y"
X! {
X  			yyval.i = TBR_NO_DOWN;	/* no down staircase */
X  		  } break;
X! case 43:
X! # line 370 "dgn_comp.y"
X! {
X  			yyval.i = TBR_PORTAL;	/* portal connection */
X  		  } break;
X! case 44:
X! # line 376 "dgn_comp.y"
X! {
X  			yyval.i = 0;	/* defaults to down */
X  		  } break;
X! case 45:
X! # line 380 "dgn_comp.y"
X! {
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 46:
X! # line 403 "dgn_comp.y"
X! {
X  			if (yypvt[-3].i < -MAXLEVEL || yypvt[-3].i > MAXLEVEL) {
X  			    yyerror("Abs base out of dlevel range - zeroing!");
X  			    couple.base = couple.rand = 0;
X--- 1133,1160 ----
X  			if(!check_branch()) n_brs--;
X  			else tmpdungeon[n_dgns].branches++;
X  		  } break;
X! case 39:{
X  			yyval.i = TBR_STAIR;	/* two way stair */
X  		  } break;
X! case 40:{
X  			yyval.i = TBR_STAIR;	/* two way stair */
X  		  } break;
X! case 41:{
X  			yyval.i = TBR_NO_UP;	/* no up staircase */
X  		  } break;
X! case 42:{
X  			yyval.i = TBR_NO_DOWN;	/* no down staircase */
X  		  } break;
X! case 43:{
X  			yyval.i = TBR_PORTAL;	/* portal connection */
X  		  } break;
X! case 44:{
X  			yyval.i = 0;	/* defaults to down */
X  		  } break;
X! case 45:{
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 46:{
X  			if (yypvt[-3].i < -MAXLEVEL || yypvt[-3].i > MAXLEVEL) {
X  			    yyerror("Abs base out of dlevel range - zeroing!");
X  			    couple.base = couple.rand = 0;
X***************
X*** 1230,1238 ****
X  			    couple.rand = yypvt[-1].i;
X  			}
X  		  } break;
X! case 47:
X! # line 440 "dgn_comp.y"
X! {
X  			if (yypvt[-3].i < -MAXLEVEL || yypvt[-3].i > MAXLEVEL) {
X  			    yyerror("Rel base out of dlevel range - zeroing!");
X  			    couple.base = couple.rand = 0;
X--- 1168,1174 ----
X  			    couple.rand = yypvt[-1].i;
X  			}
X  		  } break;
X! case 47:{
X  			if (yypvt[-3].i < -MAXLEVEL || yypvt[-3].i > MAXLEVEL) {
X  			    yyerror("Rel base out of dlevel range - zeroing!");
X  			    couple.base = couple.rand = 0;
X*** /tmp/da14268	Tue Jun  1 20:17:11 1993
X--- sys/share/lev_yacc.c	Tue Jun  1 20:09:04 1993
X***************
X*** 1,7 ****
X  extern char *malloc(), *realloc();
X! 
X! # line 2 "lev_comp.y"
X! /*	SCCS Id: @(#)lev_comp.c	3.1	93/02/13	*/
X  /*	Copyright (c) 1989 by Jean-Christophe Collet */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,5 ----
X  extern char *malloc(), *realloc();
X! /*	SCCS Id: @(#)lev_comp.c	3.1	93/05/15	*/
X  /*	Copyright (c) 1989 by Jean-Christophe Collet */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 53,60 ****
X  extern void FDECL(exit, (int));
X  #endif
X  
X! extern void FDECL(yyerror, (char *));
X! extern void FDECL(yywarning, (char *));
X  extern int NDECL(yylex);
X  int NDECL(yyparse);
X  
X--- 51,58 ----
X  extern void FDECL(exit, (int));
X  #endif
X  
X! extern void FDECL(yyerror, (const char *));
X! extern void FDECL(yywarning, (const char *));
X  extern int NDECL(yylex);
X  int NDECL(yyparse);
X  
X***************
X*** 70,76 ****
X  extern void FDECL(scan_map, (char *));
X  extern void NDECL(wallify_map);
X  extern boolean NDECL(check_subrooms);
X! extern void FDECL(check_coord, (int, int, char *));
X  extern void NDECL(store_part);
X  extern void NDECL(store_room);
X  extern void FDECL(write_maze, (int, specialmaze *));
X--- 68,74 ----
X  extern void FDECL(scan_map, (char *));
X  extern void NDECL(wallify_map);
X  extern boolean NDECL(check_subrooms);
X! extern void FDECL(check_coord, (int, int, const char *));
X  extern void NDECL(store_part);
X  extern void NDECL(store_room);
X  extern void FDECL(write_maze, (int, specialmaze *));
X***************
X*** 139,148 ****
X  
X  extern int fatal_error;
X  extern int want_warnings;
X! extern char* fname;
X  
X- 
X- # line 144 "lev_comp.y"
X  typedef union 
X  {
X  	int	i;
X--- 137,144 ----
X  
X  extern int fatal_error;
X  extern int want_warnings;
X! extern const char *fname;
X  
X  typedef union 
X  {
X  	int	i;
X***************
X*** 228,235 ****
X  YYSTYPE yylval, yyval;
X  # define YYERRCODE 256
X  
X- # line 1542 "lev_comp.y"
X- 
X  int yyexca[] ={
X  -1, 1,
X  	0, -1,
X--- 224,229 ----
X***************
X*** 1238,1246 ****
X  	switch( yytmp )
X  	{
X  		
X! case 7:
X! # line 194 "lev_comp.y"
X! {
X  			  int fout, i;
X  
X  			if (fatal_error > 0) {
X--- 1232,1238 ----
X  	switch( yytmp )
X  	{
X  		
X! case 7:{
X  			  int fout, i;
X  
X  			if (fatal_error > 0) {
X***************
X*** 1272,1280 ****
X  				npart = 0;
X  			}
X  		  } break;
X! case 8:
X! # line 229 "lev_comp.y"
X! {
X  			int fout, i;
X  
X  			if (fatal_error > 0) {
X--- 1264,1270 ----
X  				npart = 0;
X  			}
X  		  } break;
X! case 8:{
X  			int fout, i;
X  
X  			if (fatal_error > 0) {
X***************
X*** 1313,1321 ****
X  				(void) close(fout);
X  			}
X  		  } break;
X! case 9:
X! # line 271 "lev_comp.y"
X! {
X  			if (index(yypvt[-0].map, '.'))
X  			    yyerror("Invalid dot ('.') in level name.");
X  			if (strlen(yypvt[-0].map) > 8)
X--- 1303,1309 ----
X  				(void) close(fout);
X  			}
X  		  } break;
X! case 9:{
X  			if (index(yypvt[-0].map, '.'))
X  			    yyerror("Invalid dot ('.') in level name.");
X  			if (strlen(yypvt[-0].map) > 8)
X***************
X*** 1324,1338 ****
X  			special_lev.nrobjects = 0;
X  			special_lev.nrmonst = 0;
X  		  } break;
X! case 10:
X! # line 283 "lev_comp.y"
X! {
X  			init_lev.init_present = FALSE;
X  			yyval.i = 0;
X  		  } break;
X! case 11:
X! # line 288 "lev_comp.y"
X! {
X  			init_lev.init_present = TRUE;
X  			if((init_lev.fg = what_map_char(yypvt[-10].i)) == INVALID_TYPE)
X  			    yyerror("Invalid foreground type.");
X--- 1312,1322 ----
X  			special_lev.nrobjects = 0;
X  			special_lev.nrmonst = 0;
X  		  } break;
X! case 10:{
X  			init_lev.init_present = FALSE;
X  			yyval.i = 0;
X  		  } break;
X! case 11:{
X  			init_lev.init_present = TRUE;
X  			if((init_lev.fg = what_map_char(yypvt[-10].i)) == INVALID_TYPE)
X  			    yyerror("Invalid foreground type.");
X***************
X*** 1344,1373 ****
X  			init_lev.walled = yypvt[-0].i;
X  			yyval.i = 1;
X  		  } break;
X! case 14:
X! # line 307 "lev_comp.y"
X! {
X  			yyval.i = 0;
X  		  } break;
X! case 15:
X! # line 311 "lev_comp.y"
X! {
X  			yyval.i = lev_flags;
X  			lev_flags = 0;	/* clear for next user */
X  		  } break;
X! case 16:
X! # line 318 "lev_comp.y"
X! {
X  			lev_flags |= yypvt[-2].i;
X  		  } break;
X! case 17:
X! # line 322 "lev_comp.y"
X! {
X  			lev_flags |= yypvt[-0].i;
X  		  } break;
X! case 20:
X! # line 332 "lev_comp.y"
X! {
X  			int i, j;
X  
X  			i = strlen(yypvt[-0].map) + 1;
X--- 1328,1347 ----
X  			init_lev.walled = yypvt[-0].i;
X  			yyval.i = 1;
X  		  } break;
X! case 14:{
X  			yyval.i = 0;
X  		  } break;
X! case 15:{
X  			yyval.i = lev_flags;
X  			lev_flags = 0;	/* clear for next user */
X  		  } break;
X! case 16:{
X  			lev_flags |= yypvt[-2].i;
X  		  } break;
X! case 17:{
X  			lev_flags |= yypvt[-0].i;
X  		  } break;
X! case 20:{
X  			int i, j;
X  
X  			i = strlen(yypvt[-0].map) + 1;
X***************
X*** 1380,1388 ****
X  			    tmpmessage[j+i-1] = 0;
X  			}
X  		  } break;
X! case 23:
X! # line 352 "lev_comp.y"
X! {
X  			if(special_lev.nrobjects) {
X  			    yyerror("Object registers already initialized!");
X  			} else {
X--- 1354,1360 ----
X  			    tmpmessage[j+i-1] = 0;
X  			}
X  		  } break;
X! case 23:{
X  			if(special_lev.nrobjects) {
X  			    yyerror("Object registers already initialized!");
X  			} else {
X***************
X*** 1392,1400 ****
X  					  (genericptr_t)olist, n_olist);
X  			}
X  		  } break;
X! case 24:
X! # line 363 "lev_comp.y"
X! {
X  			if(special_lev.nrmonst) {
X  			    yyerror("Monster registers already initialized!");
X  			} else {
X--- 1364,1370 ----
X  					  (genericptr_t)olist, n_olist);
X  			}
X  		  } break;
X! case 24:{
X  			if(special_lev.nrmonst) {
X  			    yyerror("Monster registers already initialized!");
X  			} else {
X***************
X*** 1404,1412 ****
X  					  (genericptr_t)mlist, n_mlist);
X  			  }
X  		  } break;
X! case 25:
X! # line 376 "lev_comp.y"
X! {
X  			tmproom[nrooms] = New(room);
X  			(void) memset((genericptr_t) tmproom[nrooms], 0,
X  					sizeof *tmproom[nrooms]);
X--- 1374,1380 ----
X  					  (genericptr_t)mlist, n_mlist);
X  			  }
X  		  } break;
X! case 25:{
X  			tmproom[nrooms] = New(room);
X  			(void) memset((genericptr_t) tmproom[nrooms], 0,
X  					sizeof *tmproom[nrooms]);
X***************
X*** 1422,1437 ****
X  			tmproom[nrooms]->h = 2;
X  			in_room = 1;
X  		  } break;
X! case 31:
X! # line 404 "lev_comp.y"
X! {
X  			tmpcor[0] = New(corridor);
X  			tmpcor[0]->src.room = -1;
X  			ncorridor = 1;
X  		  } break;
X! case 34:
X! # line 416 "lev_comp.y"
X! {
X  			tmpcor[ncorridor] = New(corridor);
X  			tmpcor[ncorridor]->src.room = yypvt[-2].corpos.room;
X  			tmpcor[ncorridor]->src.wall = yypvt[-2].corpos.wall;
X--- 1390,1401 ----
X  			tmproom[nrooms]->h = 2;
X  			in_room = 1;
X  		  } break;
X! case 31:{
X  			tmpcor[0] = New(corridor);
X  			tmpcor[0]->src.room = -1;
X  			ncorridor = 1;
X  		  } break;
X! case 34:{
X  			tmpcor[ncorridor] = New(corridor);
X  			tmpcor[ncorridor]->src.room = yypvt[-2].corpos.room;
X  			tmpcor[ncorridor]->src.wall = yypvt[-2].corpos.wall;
X***************
X*** 1441,1449 ****
X  			tmpcor[ncorridor]->dest.door = yypvt[-0].corpos.door;
X  			ncorridor++;
X  		  } break;
X! case 35:
X! # line 427 "lev_comp.y"
X! {
X  			tmpcor[ncorridor]->src.room = yypvt[-2].corpos.room;
X  			tmpcor[ncorridor]->src.wall = yypvt[-2].corpos.wall;
X  			tmpcor[ncorridor]->src.door = yypvt[-2].corpos.door;
X--- 1405,1411 ----
X  			tmpcor[ncorridor]->dest.door = yypvt[-0].corpos.door;
X  			ncorridor++;
X  		  } break;
X! case 35:{
X  			tmpcor[ncorridor]->src.room = yypvt[-2].corpos.room;
X  			tmpcor[ncorridor]->src.wall = yypvt[-2].corpos.wall;
X  			tmpcor[ncorridor]->src.door = yypvt[-2].corpos.door;
X***************
X*** 1451,1459 ****
X  			tmpcor[ncorridor]->dest.wall = yypvt[-0].i;
X  			ncorridor++;
X  		  } break;
X! case 36:
X! # line 438 "lev_comp.y"
X! {
X  			if (yypvt[-5].i >= nrooms)
X  			    yyerror("Wrong room number!");
X  			yyval.corpos.room = yypvt[-5].i;
X--- 1413,1419 ----
X  			tmpcor[ncorridor]->dest.wall = yypvt[-0].i;
X  			ncorridor++;
X  		  } break;
X! case 36:{
X  			if (yypvt[-5].i >= nrooms)
X  			    yyerror("Wrong room number!");
X  			yyval.corpos.room = yypvt[-5].i;
X***************
X*** 1460,1478 ****
X  			yyval.corpos.wall = yypvt[-3].i;
X  			yyval.corpos.door = yypvt[-1].i;
X  		  } break;
X! case 37:
X! # line 448 "lev_comp.y"
X! {
X  			store_room();
X  		  } break;
X! case 38:
X! # line 452 "lev_comp.y"
X! {
X  			store_room();
X  		  } break;
X! case 39:
X! # line 458 "lev_comp.y"
X! {
X  			tmproom[nrooms] = New(room);
X  			(void) memset((genericptr_t) tmproom[nrooms], 0,
X  					sizeof *tmproom[nrooms]);
X--- 1420,1432 ----
X  			yyval.corpos.wall = yypvt[-3].i;
X  			yyval.corpos.door = yypvt[-1].i;
X  		  } break;
X! case 37:{
X  			store_room();
X  		  } break;
X! case 38:{
X  			store_room();
X  		  } break;
X! case 39:{
X  			tmproom[nrooms] = New(room);
X  			(void) memset((genericptr_t) tmproom[nrooms], 0,
X  					sizeof *tmproom[nrooms]);
X***************
X*** 1489,1497 ****
X  			tmproom[nrooms]->h = current_size.height;
X  			in_room = 1;
X  		  } break;
X! case 40:
X! # line 478 "lev_comp.y"
X! {
X  			tmproom[nrooms] = New(room);
X  			(void) memset((genericptr_t) tmproom[nrooms], 0,
X  					sizeof *tmproom[nrooms]);
X--- 1443,1449 ----
X  			tmproom[nrooms]->h = current_size.height;
X  			in_room = 1;
X  		  } break;
X! case 40:{
X  			tmproom[nrooms] = New(room);
X  			(void) memset((genericptr_t) tmproom[nrooms], 0,
X  					sizeof *tmproom[nrooms]);
X***************
X*** 1508,1526 ****
X  			tmproom[nrooms]->h = current_size.height;
X  			in_room = 1;
X  		  } break;
X! case 41:
X! # line 498 "lev_comp.y"
X! {
X  			yyval.i = 1;
X  		  } break;
X! case 42:
X! # line 502 "lev_comp.y"
X! {
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 43:
X! # line 508 "lev_comp.y"
X! {
X  			if ( yypvt[-3].i < 1 || yypvt[-3].i > 5 ||
X  			    yypvt[-1].i < 1 || yypvt[-1].i > 5 ) {
X  			    yyerror("Room position should be between 1 & 5!");
X--- 1460,1472 ----
X  			tmproom[nrooms]->h = current_size.height;
X  			in_room = 1;
X  		  } break;
X! case 41:{
X  			yyval.i = 1;
X  		  } break;
X! case 42:{
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 43:{
X  			if ( yypvt[-3].i < 1 || yypvt[-3].i > 5 ||
X  			    yypvt[-1].i < 1 || yypvt[-1].i > 5 ) {
X  			    yyerror("Room position should be between 1 & 5!");
X***************
X*** 1529,1542 ****
X  			    current_coord.y = yypvt[-1].i;
X  			}
X  		  } break;
X! case 44:
X! # line 518 "lev_comp.y"
X! {
X  			current_coord.x = current_coord.y = ERR;
X  		  } break;
X! case 45:
X! # line 524 "lev_comp.y"
X! {
X  			if ( yypvt[-3].i < 0 || yypvt[-1].i < 0) {
X  			    yyerror("Invalid subroom position !");
X  			} else {
X--- 1475,1484 ----
X  			    current_coord.y = yypvt[-1].i;
X  			}
X  		  } break;
X! case 44:{
X  			current_coord.x = current_coord.y = ERR;
X  		  } break;
X! case 45:{
X  			if ( yypvt[-3].i < 0 || yypvt[-1].i < 0) {
X  			    yyerror("Invalid subroom position !");
X  			} else {
X***************
X*** 1544,1587 ****
X  			    current_coord.y = yypvt[-1].i;
X  			}
X  		  } break;
X! case 46:
X! # line 533 "lev_comp.y"
X! {
X  			current_coord.x = current_coord.y = ERR;
X  		  } break;
X! case 47:
X! # line 539 "lev_comp.y"
X! {
X  			current_align.x = yypvt[-3].i;
X  			current_align.y = yypvt[-1].i;
X  		  } break;
X! case 48:
X! # line 544 "lev_comp.y"
X! {
X  			current_align.x = current_align.y = ERR;
X  		  } break;
X! case 49:
X! # line 550 "lev_comp.y"
X! {
X  			current_size.width = yypvt[-3].i;
X  			current_size.height = yypvt[-1].i;
X  		  } break;
X! case 50:
X! # line 555 "lev_comp.y"
X! {
X  			current_size.height = current_size.width = ERR;
X  		  } break;
X! case 66:
X! # line 580 "lev_comp.y"
X! {
X  			if (tmproom[nrooms]->name)
X  			    yyerror("This room already has a name!");
X  			else
X  			    tmproom[nrooms]->name = dup_string(yypvt[-0].map);
X  		  } break;
X! case 67:
X! # line 589 "lev_comp.y"
X! {
X  			if (tmproom[nrooms]->chance)
X  			    yyerror("This room already assigned a chance!");
X  			else if (tmproom[nrooms]->rtype == OROOM)
X--- 1486,1515 ----
X  			    current_coord.y = yypvt[-1].i;
X  			}
X  		  } break;
X! case 46:{
X  			current_coord.x = current_coord.y = ERR;
X  		  } break;
X! case 47:{
X  			current_align.x = yypvt[-3].i;
X  			current_align.y = yypvt[-1].i;
X  		  } break;
X! case 48:{
X  			current_align.x = current_align.y = ERR;
X  		  } break;
X! case 49:{
X  			current_size.width = yypvt[-3].i;
X  			current_size.height = yypvt[-1].i;
X  		  } break;
X! case 50:{
X  			current_size.height = current_size.width = ERR;
X  		  } break;
X! case 66:{
X  			if (tmproom[nrooms]->name)
X  			    yyerror("This room already has a name!");
X  			else
X  			    tmproom[nrooms]->name = dup_string(yypvt[-0].map);
X  		  } break;
X! case 67:{
X  			if (tmproom[nrooms]->chance)
X  			    yyerror("This room already assigned a chance!");
X  			else if (tmproom[nrooms]->rtype == OROOM)
X***************
X*** 1591,1599 ****
X  			else
X  			    tmproom[nrooms]->chance = yypvt[-0].i;
X  		   } break;
X! case 68:
X! # line 602 "lev_comp.y"
X! {
X  			/* ERR means random here */
X  			if (yypvt[-2].i == ERR && yypvt[-0].i != ERR) {
X  		     yyerror("If the door wall is random, so must be its pos!");
X--- 1519,1525 ----
X  			else
X  			    tmproom[nrooms]->chance = yypvt[-0].i;
X  		   } break;
X! case 68:{
X  			/* ERR means random here */
X  			if (yypvt[-2].i == ERR && yypvt[-0].i != ERR) {
X  		     yyerror("If the door wall is random, so must be its pos!");
X***************
X*** 1606,1614 ****
X  			    ndoor++;
X  			}
X  		  } break;
X! case 75:
X! # line 630 "lev_comp.y"
X! {
X  			maze.filling = yypvt[-0].i;
X  			if (index(yypvt[-2].map, '.'))
X  			    yyerror("Invalid dot ('.') in level name.");
X--- 1532,1538 ----
X  			    ndoor++;
X  			}
X  		  } break;
X! case 75:{
X  			maze.filling = yypvt[-0].i;
X  			if (index(yypvt[-2].map, '.'))
X  			    yyerror("Invalid dot ('.') in level name.");
X***************
X*** 1617,1640 ****
X  			yyval.map = yypvt[-2].map;
X  			in_room = 0;
X  		  } break;
X! case 76:
X! # line 642 "lev_comp.y"
X! {
X  			yyval.i = get_floor_type((char)yypvt[-0].i);
X  		  } break;
X! case 77:
X! # line 646 "lev_comp.y"
X! {
X  			yyval.i = -1;
X  		  } break;
X! case 80:
X! # line 656 "lev_comp.y"
X! {
X  			store_part();
X  		  } break;
X! case 81:
X! # line 662 "lev_comp.y"
X! {
X  			tmppart[npart] = New(mazepart);
X  			tmppart[npart]->halign = 1;
X  			tmppart[npart]->valign = 1;
X--- 1541,1556 ----
X  			yyval.map = yypvt[-2].map;
X  			in_room = 0;
X  		  } break;
X! case 76:{
X  			yyval.i = get_floor_type((char)yypvt[-0].i);
X  		  } break;
X! case 77:{
X  			yyval.i = -1;
X  		  } break;
X! case 80:{
X  			store_part();
X  		  } break;
X! case 81:{
X  			tmppart[npart] = New(mazepart);
X  			tmppart[npart]->halign = 1;
X  			tmppart[npart]->valign = 1;
X***************
X*** 1649,1657 ****
X  			max_x_map = COLNO-1;
X  			max_y_map = ROWNO;
X  		  } break;
X! case 82:
X! # line 678 "lev_comp.y"
X! {
X  			tmppart[npart] = New(mazepart);
X  			tmppart[npart]->halign = yypvt[-1].i % 10;
X  			tmppart[npart]->valign = yypvt[-1].i / 10;
X--- 1565,1571 ----
X  			max_x_map = COLNO-1;
X  			max_y_map = ROWNO;
X  		  } break;
X! case 82:{
X  			tmppart[npart] = New(mazepart);
X  			tmppart[npart]->halign = yypvt[-1].i % 10;
X  			tmppart[npart]->valign = yypvt[-1].i / 10;
X***************
X*** 1660,1673 ****
X  			tmppart[npart]->nrmonst = 0;
X  			scan_map(yypvt[-0].map);
X  		  } break;
X! case 83:
X! # line 690 "lev_comp.y"
X! {
X  			yyval.i = yypvt[-2].i + (yypvt[-0].i * 10);
X  		  } break;
X! case 90:
X! # line 708 "lev_comp.y"
X! {
X  			if (tmppart[npart]->nrobjects) {
X  			    yyerror("Object registers already initialized!");
X  			} else {
X--- 1574,1583 ----
X  			tmppart[npart]->nrmonst = 0;
X  			scan_map(yypvt[-0].map);
X  		  } break;
X! case 83:{
X  			yyval.i = yypvt[-2].i + (yypvt[-0].i * 10);
X  		  } break;
X! case 90:{
X  			if (tmppart[npart]->nrobjects) {
X  			    yyerror("Object registers already initialized!");
X  			} else {
X***************
X*** 1677,1685 ****
X  			    tmppart[npart]->nrobjects = n_olist;
X  			}
X  		  } break;
X! case 91:
X! # line 719 "lev_comp.y"
X! {
X  			if (tmppart[npart]->nloc) {
X  			    yyerror("Location registers already initialized!");
X  			} else {
X--- 1587,1593 ----
X  			    tmppart[npart]->nrobjects = n_olist;
X  			}
X  		  } break;
X! case 91:{
X  			if (tmppart[npart]->nloc) {
X  			    yyerror("Location registers already initialized!");
X  			} else {
X***************
X*** 1693,1701 ****
X  			    tmppart[npart]->nloc = n_plist;
X  			}
X  		  } break;
X! case 92:
X! # line 734 "lev_comp.y"
X! {
X  			if (tmppart[npart]->nrmonst) {
X  			    yyerror("Monster registers already initialized!");
X  			} else {
X--- 1601,1607 ----
X  			    tmppart[npart]->nloc = n_plist;
X  			}
X  		  } break;
X! case 92:{
X  			if (tmppart[npart]->nrmonst) {
X  			    yyerror("Monster registers already initialized!");
X  			} else {
X***************
X*** 1705,1761 ****
X  			    tmppart[npart]->nrmonst = n_mlist;
X  			}
X  		  } break;
X! case 93:
X! # line 747 "lev_comp.y"
X! {
X  			if (n_olist < MAX_REGISTERS)
X  			    olist[n_olist++] = yypvt[-0].i;
X  			else
X  			    yyerror("Object list too long!");
X  		  } break;
X! case 94:
X! # line 754 "lev_comp.y"
X! {
X  			if (n_olist < MAX_REGISTERS)
X  			    olist[n_olist++] = yypvt[-2].i;
X  			else
X  			    yyerror("Object list too long!");
X  		  } break;
X! case 95:
X! # line 763 "lev_comp.y"
X! {
X  			if (n_mlist < MAX_REGISTERS)
X  			    mlist[n_mlist++] = yypvt[-0].i;
X  			else
X  			    yyerror("Monster list too long!");
X  		  } break;
X! case 96:
X! # line 770 "lev_comp.y"
X! {
X  			if (n_mlist < MAX_REGISTERS)
X  			    mlist[n_mlist++] = yypvt[-2].i;
X  			else
X  			    yyerror("Monster list too long!");
X  		  } break;
X! case 97:
X! # line 779 "lev_comp.y"
X! {
X  			if (n_plist < MAX_REGISTERS)
X  			    plist[n_plist++] = current_coord;
X  			else
X  			    yyerror("Location list too long!");
X  		  } break;
X! case 98:
X! # line 786 "lev_comp.y"
X! {
X  			if (n_plist < MAX_REGISTERS)
X  			    plist[n_plist++] = current_coord;
X  			else
X  			    yyerror("Location list too long!");
X  		  } break;
X! case 122:
X! # line 822 "lev_comp.y"
X! {
X  			tmpmonst[nmons] = New(monster);
X  			tmpmonst[nmons]->x = current_coord.x;
X  			tmpmonst[nmons]->y = current_coord.y;
X--- 1611,1653 ----
X  			    tmppart[npart]->nrmonst = n_mlist;
X  			}
X  		  } break;
X! case 93:{
X  			if (n_olist < MAX_REGISTERS)
X  			    olist[n_olist++] = yypvt[-0].i;
X  			else
X  			    yyerror("Object list too long!");
X  		  } break;
X! case 94:{
X  			if (n_olist < MAX_REGISTERS)
X  			    olist[n_olist++] = yypvt[-2].i;
X  			else
X  			    yyerror("Object list too long!");
X  		  } break;
X! case 95:{
X  			if (n_mlist < MAX_REGISTERS)
X  			    mlist[n_mlist++] = yypvt[-0].i;
X  			else
X  			    yyerror("Monster list too long!");
X  		  } break;
X! case 96:{
X  			if (n_mlist < MAX_REGISTERS)
X  			    mlist[n_mlist++] = yypvt[-2].i;
X  			else
X  			    yyerror("Monster list too long!");
X  		  } break;
X! case 97:{
X  			if (n_plist < MAX_REGISTERS)
X  			    plist[n_plist++] = current_coord;
X  			else
X  			    yyerror("Location list too long!");
X  		  } break;
X! case 98:{
X  			if (n_plist < MAX_REGISTERS)
X  			    plist[n_plist++] = current_coord;
X  			else
X  			    yyerror("Location list too long!");
X  		  } break;
X! case 122:{
X  			tmpmonst[nmons] = New(monster);
X  			tmpmonst[nmons]->x = current_coord.x;
X  			tmpmonst[nmons]->y = current_coord.y;
X***************
X*** 1780,1819 ****
X  				    tmpmonst[nmons]->id = token;
X  			}
X  		  } break;
X! case 123:
X! # line 848 "lev_comp.y"
X! {
X  			nmons++;
X  		  } break;
X! case 126:
X! # line 858 "lev_comp.y"
X! {
X  			tmpmonst[nmons]->name = dup_string(yypvt[-0].map);
X  		  } break;
X! case 127:
X! # line 862 "lev_comp.y"
X! {
X  			tmpmonst[nmons]->peaceful = yypvt[-0].i;
X  		  } break;
X! case 128:
X! # line 866 "lev_comp.y"
X! {
X  			tmpmonst[nmons]->asleep = yypvt[-0].i;
X  		  } break;
X! case 129:
X! # line 870 "lev_comp.y"
X! {
X  			tmpmonst[nmons]->align = yypvt[-0].i;
X  		  } break;
X! case 130:
X! # line 874 "lev_comp.y"
X! {
X  			tmpmonst[nmons]->appear = yypvt[-1].i;
X  			tmpmonst[nmons]->appear_as = dup_string(yypvt[-0].map);
X  		  } break;
X! case 131:
X! # line 881 "lev_comp.y"
X! {
X  			tmpobj[nobj] = New(object);
X  			tmpobj[nobj]->x = current_coord.x;
X  			tmpobj[nobj]->y = current_coord.y;
X--- 1672,1697 ----
X  				    tmpmonst[nmons]->id = token;
X  			}
X  		  } break;
X! case 123:{
X  			nmons++;
X  		  } break;
X! case 126:{
X  			tmpmonst[nmons]->name = dup_string(yypvt[-0].map);
X  		  } break;
X! case 127:{
X  			tmpmonst[nmons]->peaceful = yypvt[-0].i;
X  		  } break;
X! case 128:{
X  			tmpmonst[nmons]->asleep = yypvt[-0].i;
X  		  } break;
X! case 129:{
X  			tmpmonst[nmons]->align = yypvt[-0].i;
X  		  } break;
X! case 130:{
X  			tmpmonst[nmons]->appear = yypvt[-1].i;
X  			tmpmonst[nmons]->appear_as = dup_string(yypvt[-0].map);
X  		  } break;
X! case 131:{
X  			tmpobj[nobj] = New(object);
X  			tmpobj[nobj]->x = current_coord.x;
X  			tmpobj[nobj]->y = current_coord.y;
X***************
X*** 1835,1853 ****
X  				    tmpobj[nobj]->id = token;
X  			}
X  		  } break;
X! case 132:
X! # line 904 "lev_comp.y"
X! {
X  			nobj++;
X  		  } break;
X! case 133:
X! # line 910 "lev_comp.y"
X! {
X  			tmpobj[nobj]->spe = -127;
X  		  } break;
X! case 134:
X! # line 914 "lev_comp.y"
X! {
X  			int token = get_monster_id(yypvt[-2].map, (char)0);
X  			if (token == ERR)	/* "random" */
X  			    tmpobj[nobj]->corpsenm = -2;
X--- 1713,1725 ----
X  				    tmpobj[nobj]->id = token;
X  			}
X  		  } break;
X! case 132:{
X  			nobj++;
X  		  } break;
X! case 133:{
X  			tmpobj[nobj]->spe = -127;
X  		  } break;
X! case 134:{
X  			int token = get_monster_id(yypvt[-2].map, (char)0);
X  			if (token == ERR)	/* "random" */
X  			    tmpobj[nobj]->corpsenm = -2;
X***************
X*** 1855,1863 ****
X  			    tmpobj[nobj]->corpsenm = token;
X  			tmpobj[nobj]->spe = yypvt[-0].i;
X  		  } break;
X! case 135:
X! # line 923 "lev_comp.y"
X! {
X  			tmpobj[nobj]->curse_state = yypvt[-4].i;
X  			tmpobj[nobj]->spe = yypvt[-2].i;
X  			if (yypvt[-0].map)
X--- 1727,1733 ----
X  			    tmpobj[nobj]->corpsenm = token;
X  			tmpobj[nobj]->spe = yypvt[-0].i;
X  		  } break;
X! case 135:{
X  			tmpobj[nobj]->curse_state = yypvt[-4].i;
X  			tmpobj[nobj]->spe = yypvt[-2].i;
X  			if (yypvt[-0].map)
X***************
X*** 1865,1878 ****
X  			else
X  			    tmpobj[nobj]->name = (char *) 0;
X  		  } break;
X! case 139:
X! # line 939 "lev_comp.y"
X! {
X  			yyval.i = -127;
X  		  } break;
X! case 140:
X! # line 945 "lev_comp.y"
X! {
X  			tmpdoor[ndoor] = New(door);
X  			tmpdoor[ndoor]->x = current_coord.x;
X  			tmpdoor[ndoor]->y = current_coord.y;
X--- 1735,1744 ----
X  			else
X  			    tmpobj[nobj]->name = (char *) 0;
X  		  } break;
X! case 139:{
X  			yyval.i = -127;
X  		  } break;
X! case 140:{
X  			tmpdoor[ndoor] = New(door);
X  			tmpdoor[ndoor]->x = current_coord.x;
X  			tmpdoor[ndoor]->y = current_coord.y;
X***************
X*** 1883,1891 ****
X  			    yyerror("Door decl doesn't match the map");
X  			ndoor++;
X  		  } break;
X! case 141:
X! # line 959 "lev_comp.y"
X! {
X  			tmptrap[ntrap] = New(trap);
X  			tmptrap[ntrap]->x = current_coord.x;
X  			tmptrap[ntrap]->y = current_coord.y;
X--- 1749,1755 ----
X  			    yyerror("Door decl doesn't match the map");
X  			ndoor++;
X  		  } break;
X! case 141:{
X  			tmptrap[ntrap] = New(trap);
X  			tmptrap[ntrap]->x = current_coord.x;
X  			tmptrap[ntrap]->y = current_coord.y;
X***************
X*** 1895,1903 ****
X  					"Trap");
X  			ntrap++;
X  		  } break;
X! case 142:
X! # line 972 "lev_comp.y"
X! {
X  		        int x, y, dir;
X  
X  			tmpdb[ndb] = New(drawbridge);
X--- 1759,1765 ----
X  					"Trap");
X  			ntrap++;
X  		  } break;
X! case 142:{
X  		        int x, y, dir;
X  
X  			tmpdb[ndb] = New(drawbridge);
X***************
X*** 1932,1940 ****
X  			    yyerror("A drawbridge can only be open or closed!");
X  			ndb++;
X  		   } break;
X! case 143:
X! # line 1010 "lev_comp.y"
X! {
X  			tmpwalk[nwalk] = New(walk);
X  			tmpwalk[nwalk]->x = current_coord.x;
X  			tmpwalk[nwalk]->y = current_coord.y;
X--- 1794,1800 ----
X  			    yyerror("A drawbridge can only be open or closed!");
X  			ndb++;
X  		   } break;
X! case 143:{
X  			tmpwalk[nwalk] = New(walk);
X  			tmpwalk[nwalk]->x = current_coord.x;
X  			tmpwalk[nwalk]->y = current_coord.y;
X***************
X*** 1941,1954 ****
X  			tmpwalk[nwalk]->dir = yypvt[-0].i;
X  			nwalk++;
X  		  } break;
X! case 144:
X! # line 1020 "lev_comp.y"
X! {
X  			wallify_map();
X  		  } break;
X! case 145:
X! # line 1026 "lev_comp.y"
X! {
X  			tmplad[nlad] = New(lad);
X  			tmplad[nlad]->x = current_coord.x;
X  			tmplad[nlad]->y = current_coord.y;
X--- 1801,1810 ----
X  			tmpwalk[nwalk]->dir = yypvt[-0].i;
X  			nwalk++;
X  		  } break;
X! case 144:{
X  			wallify_map();
X  		  } break;
X! case 145:{
X  			tmplad[nlad] = New(lad);
X  			tmplad[nlad]->x = current_coord.x;
X  			tmplad[nlad]->y = current_coord.y;
X***************
X*** 1958,1966 ****
X  					"Ladder");
X  			nlad++;
X  		  } break;
X! case 146:
X! # line 1039 "lev_comp.y"
X! {
X  			tmpstair[nstair] = New(stair);
X  			tmpstair[nstair]->x = current_coord.x;
X  			tmpstair[nstair]->y = current_coord.y;
X--- 1814,1820 ----
X  					"Ladder");
X  			nlad++;
X  		  } break;
X! case 146:{
X  			tmpstair[nstair] = New(stair);
X  			tmpstair[nstair]->x = current_coord.x;
X  			tmpstair[nstair]->y = current_coord.y;
X***************
X*** 1970,1978 ****
X  					"Stairway");
X  			nstair++;
X  		  } break;
X! case 147:
X! # line 1052 "lev_comp.y"
X! {
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X--- 1824,1830 ----
X  					"Stairway");
X  			nstair++;
X  		  } break;
X! case 147:{
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X***************
X*** 1980,1988 ****
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 148:
X! # line 1061 "lev_comp.y"
X! {
X  			tmplreg[nlreg]->del_islev = yypvt[-2].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X--- 1832,1838 ----
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 148:{
X  			tmplreg[nlreg]->del_islev = yypvt[-2].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X***************
X*** 1995,2003 ****
X  			tmplreg[nlreg]->rname = 0;
X  			nlreg++;
X  		  } break;
X! case 149:
X! # line 1077 "lev_comp.y"
X! {
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X--- 1845,1851 ----
X  			tmplreg[nlreg]->rname = 0;
X  			nlreg++;
X  		  } break;
X! case 149:{
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X***************
X*** 2005,2013 ****
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 150:
X! # line 1086 "lev_comp.y"
X! {
X  			tmplreg[nlreg]->del_islev = yypvt[-2].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X--- 1853,1859 ----
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 150:{
X  			tmplreg[nlreg]->del_islev = yypvt[-2].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X***************
X*** 2017,2025 ****
X  			tmplreg[nlreg]->rname = yypvt[-0].map;
X  			nlreg++;
X  		  } break;
X! case 151:
X! # line 1099 "lev_comp.y"
X! {
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X--- 1863,1869 ----
X  			tmplreg[nlreg]->rname = yypvt[-0].map;
X  			nlreg++;
X  		  } break;
X! case 151:{
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X***************
X*** 2027,2035 ****
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 152:
X! # line 1108 "lev_comp.y"
X! {
X  			tmplreg[nlreg]->del_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X--- 1871,1877 ----
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 152:{
X  			tmplreg[nlreg]->del_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X***************
X*** 2036,2044 ****
X  			tmplreg[nlreg]->delarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->delarea.y2 = current_region.y2;
X  		  } break;
X! case 153:
X! # line 1116 "lev_comp.y"
X! {
X  			switch(yypvt[-0].i) {
X  			case -1: tmplreg[nlreg]->rtype = LR_TELE; break;
X  			case 0: tmplreg[nlreg]->rtype = LR_DOWNTELE; break;
X--- 1878,1884 ----
X  			tmplreg[nlreg]->delarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->delarea.y2 = current_region.y2;
X  		  } break;
X! case 153:{
X  			switch(yypvt[-0].i) {
X  			case -1: tmplreg[nlreg]->rtype = LR_TELE; break;
X  			case 0: tmplreg[nlreg]->rtype = LR_DOWNTELE; break;
X***************
X*** 2047,2055 ****
X  			tmplreg[nlreg]->rname = 0;
X  			nlreg++;
X  		  } break;
X! case 154:
X! # line 1128 "lev_comp.y"
X! {
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X--- 1887,1893 ----
X  			tmplreg[nlreg]->rname = 0;
X  			nlreg++;
X  		  } break;
X! case 154:{
X  			tmplreg[nlreg] = New(lev_region);
X  			tmplreg[nlreg]->in_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->inarea.x1 = current_region.x1;
X***************
X*** 2057,2065 ****
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 155:
X! # line 1137 "lev_comp.y"
X! {
X  			tmplreg[nlreg]->del_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X--- 1895,1901 ----
X  			tmplreg[nlreg]->inarea.x2 = current_region.x2;
X  			tmplreg[nlreg]->inarea.y2 = current_region.y2;
X  		  } break;
X! case 155:{
X  			tmplreg[nlreg]->del_islev = yypvt[-0].i;
X  			tmplreg[nlreg]->delarea.x1 = current_region.x1;
X  			tmplreg[nlreg]->delarea.y1 = current_region.y1;
X***************
X*** 2069,2092 ****
X  			tmplreg[nlreg]->rname = 0;
X  			nlreg++;
X  		  } break;
X! case 156:
X! # line 1150 "lev_comp.y"
X! {
X  			yyval.i = -1;
X  		  } break;
X! case 157:
X! # line 1154 "lev_comp.y"
X! {
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 158:
X! # line 1160 "lev_comp.y"
X! {
X  			yyval.i = 0;
X  		  } break;
X! case 159:
X! # line 1164 "lev_comp.y"
X! {
X  /* This series of if statements is a hack for MSC 5.1.  It seems that its
X     tiny little brain cannot compile if these are all one big if statement. */
X  			if (yypvt[-7].i <= 0 || yypvt[-7].i >= COLNO)
X--- 1905,1920 ----
X  			tmplreg[nlreg]->rname = 0;
X  			nlreg++;
X  		  } break;
X! case 156:{
X  			yyval.i = -1;
X  		  } break;
X! case 157:{
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 158:{
X  			yyval.i = 0;
X  		  } break;
X! case 159:{
X  /* This series of if statements is a hack for MSC 5.1.  It seems that its
X     tiny little brain cannot compile if these are all one big if statement. */
X  			if (yypvt[-7].i <= 0 || yypvt[-7].i >= COLNO)
X***************
X*** 2103,2111 ****
X  			current_region.y2 = yypvt[-1].i;
X  			yyval.i = 1;
X  		  } break;
X! case 160:
X! # line 1184 "lev_comp.y"
X! {
X  			tmpfountain[nfountain] = New(fountain);
X  			tmpfountain[nfountain]->x = current_coord.x;
X  			tmpfountain[nfountain]->y = current_coord.y;
X--- 1931,1937 ----
X  			current_region.y2 = yypvt[-1].i;
X  			yyval.i = 1;
X  		  } break;
X! case 160:{
X  			tmpfountain[nfountain] = New(fountain);
X  			tmpfountain[nfountain]->x = current_coord.x;
X  			tmpfountain[nfountain]->y = current_coord.y;
X***************
X*** 2114,2138 ****
X  					"Fountain");
X  			nfountain++;
X  		  } break;
X! case 161:
X! # line 1196 "lev_comp.y"
X! {
X  			tmpsink[nsink] = New(sink);
X  			tmpsink[nsink]->x = current_coord.x;
X  			tmpsink[nsink]->y = current_coord.y;
X  			nsink++;
X  		  } break;
X! case 162:
X! # line 1205 "lev_comp.y"
X! {
X  			tmppool[npool] = New(pool);
X  			tmppool[npool]->x = current_coord.x;
X  			tmppool[npool]->y = current_coord.y;
X  			npool++;
X  		  } break;
X! case 163:
X! # line 1214 "lev_comp.y"
X! {
X  			tmpdig[ndig] = New(digpos);
X  			tmpdig[ndig]->x1 = current_region.x1;
X  			tmpdig[ndig]->y1 = current_region.y1;
X--- 1940,1958 ----
X  					"Fountain");
X  			nfountain++;
X  		  } break;
X! case 161:{
X  			tmpsink[nsink] = New(sink);
X  			tmpsink[nsink]->x = current_coord.x;
X  			tmpsink[nsink]->y = current_coord.y;
X  			nsink++;
X  		  } break;
X! case 162:{
X  			tmppool[npool] = New(pool);
X  			tmppool[npool]->x = current_coord.x;
X  			tmppool[npool]->y = current_coord.y;
X  			npool++;
X  		  } break;
X! case 163:{
X  			tmpdig[ndig] = New(digpos);
X  			tmpdig[ndig]->x1 = current_region.x1;
X  			tmpdig[ndig]->y1 = current_region.y1;
X***************
X*** 2140,2148 ****
X  			tmpdig[ndig]->y2 = current_region.y2;
X  			ndig++;
X  		  } break;
X! case 164:
X! # line 1225 "lev_comp.y"
X! {
X  			tmppass[npass] = New(digpos);
X  			tmppass[npass]->x1 = current_region.x1;
X  			tmppass[npass]->y1 = current_region.y1;
X--- 1960,1966 ----
X  			tmpdig[ndig]->y2 = current_region.y2;
X  			ndig++;
X  		  } break;
X! case 164:{
X  			tmppass[npass] = New(digpos);
X  			tmppass[npass]->x1 = current_region.x1;
X  			tmppass[npass]->y1 = current_region.y1;
X***************
X*** 2150,2158 ****
X  			tmppass[npass]->y2 = current_region.y2;
X  			npass++;
X  		  } break;
X! case 165:
X! # line 1236 "lev_comp.y"
X! {
X  			tmpreg[nreg] = New(region);
X  			tmpreg[nreg]->x1 = current_region.x1;
X  			tmpreg[nreg]->y1 = current_region.y1;
X--- 1968,1974 ----
X  			tmppass[npass]->y2 = current_region.y2;
X  			npass++;
X  		  } break;
X! case 165:{
X  			tmpreg[nreg] = New(region);
X  			tmpreg[nreg]->x1 = current_region.x1;
X  			tmpreg[nreg]->y1 = current_region.y1;
X***************
X*** 2211,2219 ****
X  			}
X  			nreg++;
X  		  } break;
X! case 166:
X! # line 1298 "lev_comp.y"
X! {
X  			tmpaltar[naltar] = New(altar);
X  			tmpaltar[naltar]->x = current_coord.x;
X  			tmpaltar[naltar]->y = current_coord.y;
X--- 2027,2033 ----
X  			}
X  			nreg++;
X  		  } break;
X! case 166:{
X  			tmpaltar[naltar] = New(altar);
X  			tmpaltar[naltar]->x = current_coord.x;
X  			tmpaltar[naltar]->y = current_coord.y;
X***************
X*** 2224,2232 ****
X  					"Altar");
X  			naltar++;
X  		  } break;
X! case 167:
X! # line 1312 "lev_comp.y"
X! {
X  			tmpgold[ngold] = New(gold);
X  			tmpgold[ngold]->x = current_coord.x;
X  			tmpgold[ngold]->y = current_coord.y;
X--- 2038,2044 ----
X  					"Altar");
X  			naltar++;
X  		  } break;
X! case 167:{
X  			tmpgold[ngold] = New(gold);
X  			tmpgold[ngold]->x = current_coord.x;
X  			tmpgold[ngold]->y = current_coord.y;
X***************
X*** 2236,2244 ****
X  					"Gold");
X  			ngold++;
X  		  } break;
X! case 168:
X! # line 1325 "lev_comp.y"
X! {
X  			tmpengraving[nengraving] = New(engraving);
X  			tmpengraving[nengraving]->x = current_coord.x;
X  			tmpengraving[nengraving]->y = current_coord.y;
X--- 2048,2054 ----
X  					"Gold");
X  			ngold++;
X  		  } break;
X! case 168:{
X  			tmpengraving[nengraving] = New(engraving);
X  			tmpengraving[nengraving]->x = current_coord.x;
X  			tmpengraving[nengraving]->y = current_coord.y;
X***************
X*** 2249,2285 ****
X  					"Engraving");
X  			nengraving++;
X  		  } break;
X! case 170:
X! # line 1340 "lev_comp.y"
X! {
X  			yyval.i = - MAX_REGISTERS - 1;
X  		  } break;
X! case 173:
X! # line 1348 "lev_comp.y"
X! {
X  			yyval.i = - MAX_REGISTERS - 1;
X  		  } break;
X! case 176:
X! # line 1356 "lev_comp.y"
X! {
X  			yyval.map = (char *) 0;
X  		  } break;
X! case 178:
X! # line 1363 "lev_comp.y"
X! {
X  			yyval.map = (char *) 0;
X  		  } break;
X! case 179:
X! # line 1369 "lev_comp.y"
X! {
X  			int token = get_trap_type(yypvt[-0].map);
X  			if (token == ERR)
X  				yyerror("Unknown trap type!");
X  			yyval.i = token;
X  		  } break;
X! case 181:
X! # line 1379 "lev_comp.y"
X! {
X  			int token = get_room_type(yypvt[-0].map);
X  			if (token == ERR) {
X  				yywarning("Unknown room type!  Making ordinary room...");
X--- 2059,2083 ----
X  					"Engraving");
X  			nengraving++;
X  		  } break;
X! case 170:{
X  			yyval.i = - MAX_REGISTERS - 1;
X  		  } break;
X! case 173:{
X  			yyval.i = - MAX_REGISTERS - 1;
X  		  } break;
X! case 176:{
X  			yyval.map = (char *) 0;
X  		  } break;
X! case 178:{
X  			yyval.map = (char *) 0;
X  		  } break;
X! case 179:{
X  			int token = get_trap_type(yypvt[-0].map);
X  			if (token == ERR)
X  				yyerror("Unknown trap type!");
X  			yyval.i = token;
X  		  } break;
X! case 181:{
X  			int token = get_room_type(yypvt[-0].map);
X  			if (token == ERR) {
X  				yywarning("Unknown room type!  Making ordinary room...");
X***************
X*** 2287,2352 ****
X  			} else
X  				yyval.i = token;
X  		  } break;
X! case 183:
X! # line 1391 "lev_comp.y"
X! {
X  			yyval.i = 0;
X  		  } break;
X! case 184:
X! # line 1395 "lev_comp.y"
X! {
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 185:
X! # line 1399 "lev_comp.y"
X! {
X  			yyval.i = yypvt[-2].i + (yypvt[-0].i << 1);
X  		  } break;
X! case 188:
X! # line 1407 "lev_comp.y"
X! {
X  			current_coord.x = current_coord.y = -MAX_REGISTERS-1;
X  		  } break;
X! case 195:
X! # line 1423 "lev_comp.y"
X! {
X  			yyval.i = - MAX_REGISTERS - 1;
X  		  } break;
X! case 198:
X! # line 1433 "lev_comp.y"
X! {
X  			if ( yypvt[-1].i >= MAX_REGISTERS )
X  				yyerror("Register Index overflow!");
X  			else
X  				current_coord.x = current_coord.y = - yypvt[-1].i - 1;
X  		  } break;
X! case 199:
X! # line 1442 "lev_comp.y"
X! {
X  			if ( yypvt[-1].i >= MAX_REGISTERS )
X  				yyerror("Register Index overflow!");
X  			else
X  				yyval.i = - yypvt[-1].i - 1;
X  		  } break;
X! case 200:
X! # line 1451 "lev_comp.y"
X! {
X  			if ( yypvt[-1].i >= MAX_REGISTERS )
X  				yyerror("Register Index overflow!");
X  			else
X  				yyval.i = - yypvt[-1].i - 1;
X  		  } break;
X! case 201:
X! # line 1460 "lev_comp.y"
X! {
X  			if ( yypvt[-1].i >= 3 )
X  				yyerror("Register Index overflow!");
X  			else
X  				yyval.i = - yypvt[-1].i - 1;
X  		  } break;
X! case 203:
X! # line 1472 "lev_comp.y"
X! {
X  			if (check_monster_char((char) yypvt[-0].i))
X  				yyval.i = yypvt[-0].i ;
X  			else {
X--- 2085,2130 ----
X  			} else
X  				yyval.i = token;
X  		  } break;
X! case 183:{
X  			yyval.i = 0;
X  		  } break;
X! case 184:{
X  			yyval.i = yypvt[-0].i;
X  		  } break;
X! case 185:{
X  			yyval.i = yypvt[-2].i + (yypvt[-0].i << 1);
X  		  } break;
X! case 188:{
X  			current_coord.x = current_coord.y = -MAX_REGISTERS-1;
X  		  } break;
X! case 195:{
X  			yyval.i = - MAX_REGISTERS - 1;
X  		  } break;
X! case 198:{
X  			if ( yypvt[-1].i >= MAX_REGISTERS )
X  				yyerror("Register Index overflow!");
X  			else
X  				current_coord.x = current_coord.y = - yypvt[-1].i - 1;
X  		  } break;
X! case 199:{
X  			if ( yypvt[-1].i >= MAX_REGISTERS )
X  				yyerror("Register Index overflow!");
X  			else
X  				yyval.i = - yypvt[-1].i - 1;
X  		  } break;
X! case 200:{
X  			if ( yypvt[-1].i >= MAX_REGISTERS )
X  				yyerror("Register Index overflow!");
X  			else
X  				yyval.i = - yypvt[-1].i - 1;
X  		  } break;
X! case 201:{
X  			if ( yypvt[-1].i >= 3 )
X  				yyerror("Register Index overflow!");
X  			else
X  				yyval.i = - yypvt[-1].i - 1;
X  		  } break;
X! case 203:{
X  			if (check_monster_char((char) yypvt[-0].i))
X  				yyval.i = yypvt[-0].i ;
X  			else {
X***************
X*** 2354,2362 ****
X  				yyval.i = ERR;
X  			}
X  		  } break;
X! case 204:
X! # line 1483 "lev_comp.y"
X! {
X  			char c = yypvt[-0].i;
X  			if (check_object_char(c))
X  				yyval.i = c;
X--- 2132,2138 ----
X  				yyval.i = ERR;
X  			}
X  		  } break;
X! case 204:{
X  			char c = yypvt[-0].i;
X  			if (check_object_char(c))
X  				yyval.i = c;
X***************
X*** 2365,2378 ****
X  				yyval.i = ERR;
X  			}
X  		  } break;
X! case 207:
X! # line 1499 "lev_comp.y"
X! {
X  			yyval.map = (char *) 0;
X  		  } break;
X! case 212:
X! # line 1513 "lev_comp.y"
X! {
X  			if (!in_room && !init_lev.init_present &&
X  			    (yypvt[-3].i < 0 || yypvt[-3].i > max_x_map ||
X  			     yypvt[-1].i < 0 || yypvt[-1].i > max_y_map))
X--- 2141,2150 ----
X  				yyval.i = ERR;
X  			}
X  		  } break;
X! case 207:{
X  			yyval.map = (char *) 0;
X  		  } break;
X! case 212:{
X  			if (!in_room && !init_lev.init_present &&
X  			    (yypvt[-3].i < 0 || yypvt[-3].i > max_x_map ||
X  			     yypvt[-1].i < 0 || yypvt[-1].i > max_y_map))
X***************
X*** 2380,2388 ****
X  			current_coord.x = yypvt[-3].i;
X  			current_coord.y = yypvt[-1].i;
X  		  } break;
X! case 213:
X! # line 1524 "lev_comp.y"
X! {
X  /* This series of if statements is a hack for MSC 5.1.  It seems that its
X     tiny little brain cannot compile if these are all one big if statement. */
X  			if (yypvt[-7].i < 0 || yypvt[-7].i > max_x_map)
X--- 2152,2158 ----
X  			current_coord.x = yypvt[-3].i;
X  			current_coord.y = yypvt[-1].i;
X  		  } break;
X! case 213:{
X  /* This series of if statements is a hack for MSC 5.1.  It seems that its
X     tiny little brain cannot compile if these are all one big if statement. */
X  			if (yypvt[-7].i < 0 || yypvt[-7].i > max_x_map)
X*** /tmp/da14276	Tue Jun  1 20:17:15 1993
X--- sys/share/pcmain.c	Mon Mar 29 12:22:59 1993
X***************
X*** 435,444 ****
X--- 435,450 ----
X  #ifdef NEWS
X  		    (void) printf(" [-n]");
X  #endif
X+ #ifndef AMIGA
X+ 		    (void) printf(" [-I] [-i] [-d]");
X+ #endif
X  #ifdef MFLOPPY
X  # ifndef AMIGA
X  		    (void) printf(" [-r]");
X  # endif
X+ #endif
X+ #ifdef AMIGA
X+ 		    (void) printf(" [-[lL]]");
X  #endif
X  		    putchar('\n');
X  		    exit(0);
END_OF_FILE
if test 55034 -ne `wc -c <'patches02s'`; then
    echo shar: \"'patches02s'\" unpacked with wrong size!
fi
# end of 'patches02s'
echo shar: End of archive 12 \(of 33\).
cp /dev/null ark12isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 33 archives.
    echo "Now execute ./patchit.sh"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
