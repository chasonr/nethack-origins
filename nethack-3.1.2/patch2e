Path: uunet!news.tek.com!saab!billr
From: billr@saab.CNA.TEK.COM (Bill Randle)
Newsgroups: comp.sources.games
Subject: v17i080:  nethack31 - display oriented dungeons & dragons (Ver. 3.1), Patch2e/33
Date: 11 Jun 1993 00:06:58 GMT
Organization: Tektronix, Inc, Redmond, OR, USA
Lines: 1900
Approved: billr@saab.CNA.TEK.COM
Message-ID: <1v8ib2$iqq@ying.cna.tek.com>
NNTP-Posting-Host: saab.cna.tek.com
Xref: uunet comp.sources.games:1768

Submitted-by: izchak@linc.cis.upenn.edu (Izchak Miller)
Posting-number: Volume 17, Issue 80
Archive-name: nethack31/Patch2e
Patch-To: nethack31: Volume 16, Issue 1-116
Environment: Amiga, Atari, Mac, MS-DOS, Windows-NT, OS2, Unix, VMS, X11



#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 5 (of 33)."
# Contents:  patches02n sys/amiga/winkey.c
# Wrapped by billr@saab on Thu Jun 10 16:55:00 1993
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'patches02n' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'patches02n'\" to \"'patches02n.orig'\"
  mv -f 'patches02n' 'patches02n.orig'
fi
echo shar: Extracting \"'patches02n'\" \(56326 characters\)
sed "s/^X//" >'patches02n' <<'END_OF_FILE'
X*** /tmp/da10223	Tue Jun  1 16:01:42 1993
X--- include/align.h	Wed May 26 14:07:40 1993
X***************
X*** 12,18 ****
X  	int		record;
X  } align;
X  
X! #define ALIGNLIM	(5L + (moves/200L))	/* bounds for "record" */
X  
X  #define A_NONE	      (-128)	/* the value range of type */
X  
X--- 12,19 ----
X  	int		record;
X  } align;
X  
X! /* bounds for "record" -- respect initial alignments of 10 */
X! #define ALIGNLIM	(10L + (moves/200L))
X  
X  #define A_NONE	      (-128)	/* the value range of type */
X  
X***************
X*** 31,37 ****
X  #define AM_MASK		 7
X  
X  #define Amask2align(x)	((aligntyp) ((!(x)) ? A_NONE \
X! 			 : ((x) == AM_LAWFUL) ? A_LAWFUL : (x) - 2))
X  #define Align2amask(x)	(((x) == A_NONE) ? AM_NONE \
X  			 : ((x) == A_LAWFUL) ? AM_LAWFUL : (x) + 2)
X  
X--- 32,38 ----
X  #define AM_MASK		 7
X  
X  #define Amask2align(x)	((aligntyp) ((!(x)) ? A_NONE \
X! 			 : ((x) == AM_LAWFUL) ? A_LAWFUL : ((int)x) - 2))
X  #define Align2amask(x)	(((x) == A_NONE) ? AM_NONE \
X  			 : ((x) == A_LAWFUL) ? AM_LAWFUL : (x) + 2)
X  
X*** /tmp/da10231	Tue Jun  1 16:01:44 1993
X--- include/amiconf.h	Thu May 20 15:58:06 1993
X***************
X*** 39,45 ****
X  
X  /* Compile in New Intuition look for 2.0 */
X  #ifdef	IDCMP_CLOSEWINDOW
X! # define	INTUI_NEW_LOOK	1
X  #endif
X  
X  #define MFLOPPY         /* You'll probably want this; provides assistance
X--- 39,47 ----
X  
X  /* Compile in New Intuition look for 2.0 */
X  #ifdef	IDCMP_CLOSEWINDOW
X! # ifndef INTUI_NEW_LOOK
X! #  define	INTUI_NEW_LOOK	1
X! # endif
X  #endif
X  
X  #define MFLOPPY         /* You'll probably want this; provides assistance
X***************
X*** 74,80 ****
X  extern char *FDECL(gets, (char *));
X  #endif
X  
X! #define msmsg		raw_printf
X  
X  /*
X   * If AZTEC_C  we can't use the long cpath in vision.c....
X--- 76,83 ----
X  extern char *FDECL(gets, (char *));
X  #endif
X  
X! /*#define msmsg		raw_printf*/
X! #define msmsg		printf
X  
X  /*
X   * If AZTEC_C  we can't use the long cpath in vision.c....
X***************
X*** 93,105 ****
X  #define MAIL			/* Get mail at unexpected occasions */
X  #define DEFAULT_ICON "NetHack:default.icon"	/* private icon */
X  #define AMIFLUSH		/* toss typeahead (select flush in .cnf) */
X- /*#define AMIGA_WINDOWED_CORNLINE /* Use windows for pager, inventory, etc */
X  
X  /* new window system options */
X! #define AMIGA_INTUITION		/* high power graphics interface (amii) */
X  
X  #ifdef	TEXTCOLOR
X! # define	DEPTH	3
X  #else
X  # define	DEPTH	2
X  #endif
X--- 96,116 ----
X  #define MAIL			/* Get mail at unexpected occasions */
X  #define DEFAULT_ICON "NetHack:default.icon"	/* private icon */
X  #define AMIFLUSH		/* toss typeahead (select flush in .cnf) */
X  
X  /* new window system options */
X! 			/* WRONG - AMIGA_INTUITION should go away */
X! #ifdef AMII_GRAPHICS
X! # define AMIGA_INTUITION		/* high power graphics interface (amii) */
X! #endif
X  
X+ #define CHANGE_COLOR	1
X+ 
X  #ifdef	TEXTCOLOR
X! # ifdef	VIEWWINDOW
X! #  define	DEPTH	4
X! # else
X! #  define	DEPTH	3
X! # endif
X  #else
X  # define	DEPTH	2
X  #endif
X***************
X*** 112,116 ****
X--- 123,133 ----
X  #define	AMII_SOFT_VOLUME	50
X  #define	AMII_OKAY_VOLUME	60
X  #define	AMII_LOUDER_VOLUME	80
X+ 
X+ #ifdef TTY_GRAPHICS
X+ # define ANSI_DEFAULT
X+ #endif
X+ 
X+ extern int amibbs;	/* BBS mode? */
X  
X  #endif /* AMICONF_H */
X*** /tmp/da10247	Tue Jun  1 16:01:47 1993
X--- include/artilist.h	Fri May 28 11:40:18 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)artilist.h	3.1	92/12/13	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)artilist.h	3.1	93/05/25	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 26,32 ****
X  #define     ELEC(a,b)	{0,AD_ELEC,a,b}		/* electrical shock */
X  #define     STUN(a,b)	{0,AD_STUN,a,b}		/* magical attack */
X  
X! STATIC_OVL NEARDATA const struct artifact artilist[] = {
X  #endif	/* MAKEDEFS_C */
X  
X  /*  dummy element #0, so that all interesting indices are non-zero */
X--- 26,32 ----
X  #define     ELEC(a,b)	{0,AD_ELEC,a,b}		/* electrical shock */
X  #define     STUN(a,b)	{0,AD_STUN,a,b}		/* magical attack */
X  
X! STATIC_OVL NEARDATA struct artifact artilist[] = {
X  #endif	/* MAKEDEFS_C */
X  
X  /*  dummy element #0, so that all interesting indices are non-zero */
X*** /tmp/da10271	Tue Jun  1 16:01:52 1993
X--- include/config.h	Tue Jun  1 11:45:49 1993
X***************
X*** 63,71 ****
X  #endif
X  #ifdef __SASC_60
X  # define NEARDATA __near /* put some data close */
X- # define NO_SCAN_BRACK	/* scanf doesn't handle [] (this define available
X- 			 * for any system with this problem) */
X- 			/* is this still true as of 6.2? (keni) */
X  #else
X  # define NEARDATA
X  #endif
X--- 63,68 ----
X***************
X*** 203,219 ****
X  /* MAC also means MAC windows */
X  #ifdef MAC
X  # ifndef	AUX
X! #  undef TTY_GRAPHICS
X  #  undef X11_GRAPHICS
X  #  define DEFAULT_WINDOW_SYS "mac"
X  # endif
X  #endif
X  
X! /* no options yet: Amiga also means Intuition windows */
X  #ifdef AMIGA
X! # undef TTY_GRAPHICS
X! # define AMII_GRAPHICS
X! # define DEFAULT_WINDOW_SYS "amii"
X  #endif
X  
X  #ifndef DEFAULT_WINDOW_SYS
X--- 200,223 ----
X  /* MAC also means MAC windows */
X  #ifdef MAC
X  # ifndef	AUX
X! /* #  undef TTY_GRAPHICS /* Macs now handle TTY graphics */
X  #  undef X11_GRAPHICS
X  #  define DEFAULT_WINDOW_SYS "mac"
X  # endif
X  #endif
X  
X! /* Amiga supports AMII_GRAPHICS and/or TTY_GRAPHICS */
X  #ifdef AMIGA
X! # define AMII_GRAPHICS			/* (optional) */
X! # ifdef SHAREDLIB
X! #  define DEFAULT_WINDOW_SYS "amii"	/* "amii" or "tty" */
X! # else
X! #  ifdef VIEWWINDOW
X! #   define DEFAULT_WINDOW_SYS "amiv"	/* "amii" or "tty" */
X! #  else
X! #   define DEFAULT_WINDOW_SYS "amii"	/* "amii" or "tty" */
X! #  endif
X! # endif
X  #endif
X  
X  #ifndef DEFAULT_WINDOW_SYS
X***************
X*** 426,432 ****
X  /* I/O */
X  #define REDO		/* support for redoing last command - DGK */
X  #define COM_COMPL	/* Command line completion by John S. Bien */
X! #ifndef AMIGA
X  # define CLIPPING	/* allow smaller screens -- ERS */
X  #endif
X  
X--- 430,436 ----
X  /* I/O */
X  #define REDO		/* support for redoing last command - DGK */
X  #define COM_COMPL	/* Command line completion by John S. Bien */
X! #if !defined(AMIGA) && !defined(MAC)
X  # define CLIPPING	/* allow smaller screens -- ERS */
X  #endif
X  
X*** /tmp/da10287	Tue Jun  1 16:01:57 1993
X--- include/decl.h	Tue Jun  1 14:28:36 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)decl.h	3.1	93/02/09	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)decl.h	3.1	93/03/18	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X*** /tmp/da10367	Tue Jun  1 16:02:15 1993
X--- include/extern.h	Tue Jun  1 12:12:40 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)extern.h	3.1	93/02/16	*/
X  /* Copyright (c) Steve Creps, 1988.				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)extern.h	3.1	93/05/31	*/
X  /* Copyright (c) Steve Creps, 1988.				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 92,97 ****
X--- 92,98 ----
X  E void NDECL(restore_attrib);
X  E void FDECL(exercise, (int,BOOLEAN_P));
X  E void NDECL(exerchk);
X+ E void NDECL(reset_attribute_clock);
X  E void FDECL(init_attr, (int));
X  E void NDECL(redist_attr);
X  E void FDECL(adjabil, (int,int));
X***************
X*** 105,111 ****
X  E void NDECL(ballfall);
X  E void NDECL(placebc);
X  E void NDECL(unplacebc);
X- E int NDECL(bc_order);
X  E void FDECL(set_bc, (int));
X  E void FDECL(move_bc, (int,int,XCHAR_P,XCHAR_P,XCHAR_P,XCHAR_P));
X  E boolean FDECL(drag_ball, (XCHAR_P,XCHAR_P,
X--- 106,111 ----
X***************
X*** 222,227 ****
X--- 222,228 ----
X  E void FDECL(map_trap, (struct trap *,int));
X  E void FDECL(map_object, (struct obj *,int));
X  E void FDECL(unmap_object, (int,int));
X+ E void FDECL(map_location, (int,int,int));
X  E void FDECL(feel_location, (XCHAR_P,XCHAR_P));
X  E void FDECL(newsym, (XCHAR_P,XCHAR_P));
X  E void FDECL(shieldeff, (XCHAR_P,XCHAR_P));
X***************
X*** 486,499 ****
X  /* ### engrave.c ### */
X  
X  E const char *NDECL(random_engraving);
X  #ifdef ELBERETH
X  E int FDECL(sengr_at, (const char *,XCHAR_P,XCHAR_P));
X  #endif
X- E struct engr *FDECL(engr_at, (XCHAR_P,XCHAR_P));
X  E void FDECL(u_wipe_engr, (int));
X  E void FDECL(wipe_engr_at, (XCHAR_P,XCHAR_P,XCHAR_P));
X  E void FDECL(read_engr_at, (int,int));
X  E void FDECL(make_engr_at, (int,int,const char *,long,XCHAR_P));
X  E int NDECL(freehand);
X  E int NDECL(doengrave);
X  E void FDECL(save_engravings, (int,int));
X--- 487,502 ----
X  /* ### engrave.c ### */
X  
X  E const char *NDECL(random_engraving);
X+ E const char *FDECL(surface, (int,int));
X+ E struct engr *FDECL(engr_at, (XCHAR_P,XCHAR_P));
X  #ifdef ELBERETH
X  E int FDECL(sengr_at, (const char *,XCHAR_P,XCHAR_P));
X  #endif
X  E void FDECL(u_wipe_engr, (int));
X  E void FDECL(wipe_engr_at, (XCHAR_P,XCHAR_P,XCHAR_P));
X  E void FDECL(read_engr_at, (int,int));
X  E void FDECL(make_engr_at, (int,int,const char *,long,XCHAR_P));
X+ E void FDECL(del_engr_at, (int,int));
X  E int NDECL(freehand);
X  E int NDECL(doengrave);
X  E void FDECL(save_engravings, (int,int));
X***************
X*** 641,646 ****
X--- 644,652 ----
X  E void FDECL(useup, (struct obj *));
X  E void FDECL(freeinv, (struct obj *));
X  E void FDECL(delallobj, (int,int));
X+ E void FDECL(bury_objs, (int,int));
X+ E void FDECL(delburiedobj, (struct obj *));
X+ E void FDECL(unearth_objs, (int,int));
X  E void FDECL(delobj, (struct obj *));
X  E void FDECL(freeobj, (struct obj *));
X  E struct obj *FDECL(sobj_at, (int,int,int));
X***************
X*** 922,928 ****
X  E void FDECL(mondied, (struct monst *));
X  E void FDECL(mongone, (struct monst *));
X  E void FDECL(monstone, (struct monst *));
X! E void FDECL(monkilled, (struct monst *,const char *,UCHAR_P));
X  E void FDECL(unstuck, (struct monst *));
X  E void FDECL(killed, (struct monst *));
X  E void FDECL(xkilled, (struct monst *,int));
X--- 928,934 ----
X  E void FDECL(mondied, (struct monst *));
X  E void FDECL(mongone, (struct monst *));
X  E void FDECL(monstone, (struct monst *));
X! E void FDECL(monkilled, (struct monst *,const char *,int));
X  E void FDECL(unstuck, (struct monst *));
X  E void FDECL(killed, (struct monst *));
X  E void FDECL(xkilled, (struct monst *,int));
X***************
X*** 951,957 ****
X  E boolean FDECL(ranged_attk, (struct permonst *));
X  E boolean FDECL(hates_silver, (struct permonst *));
X  E boolean FDECL(can_track, (struct permonst *));
X! #ifdef POLYSELF
X  E boolean FDECL(breakarm, (struct permonst *));
X  E boolean FDECL(sliparm, (struct permonst *));
X  #endif
X--- 957,963 ----
X  E boolean FDECL(ranged_attk, (struct permonst *));
X  E boolean FDECL(hates_silver, (struct permonst *));
X  E boolean FDECL(can_track, (struct permonst *));
X! #if defined(POLYSELF) || defined(MUSE)
X  E boolean FDECL(breakarm, (struct permonst *));
X  E boolean FDECL(sliparm, (struct permonst *));
X  #endif
X***************
X*** 1071,1076 ****
X--- 1077,1083 ----
X  E int FDECL(use_misc, (struct monst *));
X  E int FDECL(rnd_misc_item, (struct monst *));
X  E boolean FDECL(searches_for_item, (struct monst *,struct obj *));
X+ E boolean FDECL(mon_reflects, (struct monst *,const char *));
X  #endif
X  
X  /* ### music.c ### */
X***************
X*** 1166,1172 ****
X--- 1173,1181 ----
X  # endif
X  E void FDECL(append_slash, (char *));
X  E void FDECL(getreturn, (const char *));
X+ # ifndef AMIGA
X  E void VDECL(msmsg, (const char *,...));
X+ # endif
X  E FILE *FDECL(fopenp, (const char *,const char *));
X  E void FDECL(msexit, (int));
X  #endif /* MICRO */
X***************
X*** 1340,1346 ****
X  E void FDECL(punish, (struct obj *));
X  E void NDECL(unpunish);
X  E boolean FDECL(cant_create, (int *));
X! #if defined(WIZARD) || defined(EXPLORE_MODE)
X  E boolean NDECL(create_particular);
X  #endif
X  
X--- 1349,1355 ----
X  E void FDECL(punish, (struct obj *));
X  E void NDECL(unpunish);
X  E boolean FDECL(cant_create, (int *));
X! #ifdef WIZARD
X  E boolean NDECL(create_particular);
X  #endif
X  
X***************
X*** 1367,1373 ****
X  
X  /* ### rip.c ### */
X  
X! E void FDECL(outrip, (int,winid));
X  
X  /* ### rnd.c ### */
X  
X--- 1376,1382 ----
X  
X  /* ### rip.c ### */
X  
X! E void FDECL(genl_outrip, (winid,int));
X  
X  /* ### rnd.c ### */
X  
X***************
X*** 1433,1438 ****
X--- 1442,1448 ----
X  E boolean FDECL(paybill, (BOOLEAN_P));
X  E void FDECL(u_left_shop, (char *,BOOLEAN_P));
X  E void FDECL(u_entered_shop, (char *));
X+ E boolean FDECL(same_price, (struct obj *,struct obj *));
X  E void FDECL(pay_for_damage, (const char *));
X  E long FDECL(unpaid_cost, (struct obj *));
X  E long FDECL(contained_cost, (struct obj *,struct monst *,long,BOOLEAN_P));
X***************
X*** 1455,1460 ****
X--- 1465,1473 ----
X  E boolean FDECL(costly_spot, (XCHAR_P,XCHAR_P));
X  E struct obj *FDECL(shop_object, (XCHAR_P,XCHAR_P));
X  E void FDECL(price_quote, (struct obj *));
X+ #ifdef SOUNDS
X+ E void FDECL(shk_chat, (struct monst *));
X+ #endif
X  E void FDECL(check_unpaid, (struct obj *));
X  E void FDECL(costly_gold, (XCHAR_P,XCHAR_P,long));
X  E boolean FDECL(block_door, (XCHAR_P,XCHAR_P));
X***************
X*** 1480,1485 ****
X--- 1493,1499 ----
X  E void FDECL(growl, (struct monst *));
X  E void FDECL(yelp, (struct monst *));
X  E void FDECL(whimper, (struct monst *));
X+ E void FDECL(beg, (struct monst *));
X  #endif
X  E int NDECL(dotalk);
X  
X***************
X*** 1554,1559 ****
X--- 1568,1574 ----
X  E void NDECL(tele);
X  E void FDECL(teleds, (int,int));
X  E int NDECL(dotele);
X+ E boolean FDECL(tele_restrict, (struct monst *));
X  E void NDECL(level_tele);
X  E void FDECL(water_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P));
X  E boolean NDECL(drown);
X***************
X*** 1563,1569 ****
X  E boolean FDECL(chest_trap, (struct obj *,int,BOOLEAN_P));
X  E void FDECL(deltrap, (struct trap *));
X  E struct trap *FDECL(t_at, (int,int));
X! E void FDECL(b_trapped, (const char *));
X  E boolean NDECL(unconscious);
X  E boolean NDECL(lava_effects);
X  
X--- 1578,1584 ----
X  E boolean FDECL(chest_trap, (struct obj *,int,BOOLEAN_P));
X  E void FDECL(deltrap, (struct trap *));
X  E struct trap *FDECL(t_at, (int,int));
X! E void FDECL(b_trapped, (const char *,int));
X  E boolean NDECL(unconscious);
X  E boolean NDECL(lava_effects);
X  
X***************
X*** 1679,1685 ****
X  
X  E int FDECL(main, (int, char **));
X  # ifdef CHDIR
X! E void FDECL(chdirx, (char *,BOOLEAN_P));
X  # endif /* CHDIR */
X  
X  /* ### vmsmisc.c ### */
X--- 1694,1700 ----
X  
X  E int FDECL(main, (int, char **));
X  # ifdef CHDIR
X! E void FDECL(chdirx, (const char *,BOOLEAN_P));
X  # endif /* CHDIR */
X  
X  /* ### vmsmisc.c ### */
X***************
X*** 1734,1740 ****
X  #ifdef MUSE
X  E void FDECL(possibly_unwield, (struct monst *));
X  E int FDECL(mon_wield_item, (struct monst *));
X- E void FDECL(sort_mwep, (struct monst *));
X  #endif
X  E int NDECL(abon);
X  E int NDECL(dbon);
X--- 1749,1754 ----
X***************
X*** 1808,1817 ****
X  
X  /* ### zap.c ### */
X  
X  #if defined(OVERLAY) || defined(MUSE)
X  E int FDECL(bhito, (struct obj *,struct obj *));
X  #endif
X- E struct monst *FDECL(revive, (struct obj *,BOOLEAN_P));
X  E int FDECL(zappable, (struct obj *));
X  E void FDECL(zapnodir, (struct obj *));
X  E int NDECL(dozap);
X--- 1822,1832 ----
X  
X  /* ### zap.c ### */
X  
X+ E struct monst *FDECL(revive, (struct obj *,BOOLEAN_P));
X+ E boolean FDECL(obj_resists, (struct obj *,int,int));
X  #if defined(OVERLAY) || defined(MUSE)
X  E int FDECL(bhito, (struct obj *,struct obj *));
X  #endif
X  E int FDECL(zappable, (struct obj *));
X  E void FDECL(zapnodir, (struct obj *));
X  E int NDECL(dozap);
X***************
X*** 1826,1831 ****
X--- 1841,1847 ----
X  			     int (*)(OBJ_P,OBJ_P),struct obj *));
X  E struct monst *FDECL(boomhit, (int,int));
X  E void FDECL(buzz, (int,int,XCHAR_P,XCHAR_P,int,int));
X+ E void FDECL(melt_ice, (XCHAR_P,XCHAR_P));
X  E int FDECL(zap_over_floor, (XCHAR_P,XCHAR_P,int,boolean *));
X  E void FDECL(rloco, (struct obj *));
X  E void FDECL(fracture_rock, (struct obj *));
X*** /tmp/da10375	Tue Jun  1 16:02:19 1993
X--- include/flag.h	Mon Apr 19 16:25:31 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)flag.h	3.1	90/22/02	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)flag.h	3.1	93/03/18	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 9,14 ****
X--- 9,17 ----
X  #ifdef AMIFLUSH
X  	boolean  amiflush;	/* kill typeahead */
X  #endif
X+ #ifdef	MFLOPPY
X+ 	boolean  asksavedisk;
X+ #endif
X  	boolean  beginner;
X  #ifdef MICRO
X  	boolean  BIOS;		/* use IBM or ST BIOS calls when appropriate */
X***************
X*** 21,27 ****
X  #define wizard	 flags.debug
X  	boolean  DECgraphics;	/* use DEC VT-xxx extended character set */
X  	boolean  echo;		/* 1 to echo characters */
X- 	boolean  end_disclose;	/* identify inv and props upon exit */
X  	boolean  end_own;	/* list all own scores */
X  	boolean  explore;	/* in exploration mode */
X  #define discover flags.explore
X--- 24,29 ----
X***************
X*** 85,90 ****
X--- 87,95 ----
X  				/* reset from 2 to 1, but never to 0 */
X  	unsigned run;		/* 0: h (etc), 1: H (etc), 2: fh (etc) */
X  				/* 3: FH, 4: ff+, 5: ff-, 6: FF+, 7: FF- */
X+ 	char	 inv_order[MAXOCLASSES];
X+ 	char	 pickup_types[MAXOCLASSES];
X+ 	char	 end_disclose[5];	/* disclose various info upon exit */
X  #ifdef MAC_GRAPHICS_ENV
X  	boolean  large_font;	/* draw in larger fonts (say, 12pt instead
X  				   of 9pt) */
X*** /tmp/da10391	Tue Jun  1 16:02:22 1993
X--- include/global.h	Tue Jun  1 11:45:49 1993
X***************
X*** 9,15 ****
X  
X  
X  /*#define BETA		/* if a beta-test copy  [MRS] */
X- #define VERSION "3.1"	/* version number. */
X  
X  /*
X   * Files expected to exist in the playground directory.
X--- 9,14 ----
X***************
X*** 183,189 ****
X  #  define PORT_ID	"Mac"
X  # endif
X  # ifdef MSDOS
X! #  define PORT_ID	"PC"
X  # endif
X  # ifdef OS2
X  #  define PORT_ID	"OS/2"
X--- 182,192 ----
X  #  define PORT_ID	"Mac"
X  # endif
X  # ifdef MSDOS
X! #  ifdef PC9801
X! #   define PORT_ID	"PC-9801"
X! #  else
X! #   define PORT_ID	"PC"
X! #  endif
X  # endif
X  # ifdef OS2
X  #  define PORT_ID	"OS/2"
X***************
X*** 200,205 ****
X--- 203,212 ----
X  # ifdef WIN32CON
X  #  define PORT_ID	"NT-Console"
X  # endif
X+ #endif
X+ 
X+ #if defined(MICRO) && !defined(AMIGA) && !defined(TOS) && !defined(OS2_HPFS)
X+ #define SHORT_FILENAMES		/* filenames are 8.3 */
X  #endif
X  
X  /*
X*** /tmp/da10399	Tue Jun  1 16:02:24 1993
X--- include/hack.h	Tue Jun  1 14:28:37 1993
X***************
X*** 9,14 ****
X--- 9,21 ----
X  #include "config.h"
X  #endif
X  
X+ /* Some people comment out OVERLAY when uncommenting MOVERLAY */
X+ #if defined(MOVERLAY)
X+ # ifndef OVERLAY
X+ #  define OVERLAY
X+ # endif
X+ #endif
X+ 
X  /*	For debugging beta code.	*/
X  #ifdef BETA
X  #define Dpline	pline
X*** /tmp/da10415	Tue Jun  1 16:02:28 1993
X--- include/macconf.h	Fri May  7 15:50:34 1993
X***************
X*** 17,23 ****
X--- 17,27 ----
X  #  define RANDOM
X  #  define NO_SIGNAL	/* You wouldn't believe our signals ... */
X  #  define FILENAME 256
X+ #  define NO_TERMS /* For tty port */
X  
X+ #  define TEXTCOLOR /* For Mac TTY interface */
X+ #  define CHANGE_COLOR
X+ 
X  #  include "system.h"
X  
X  typedef long off_t ;
X***************
X*** 39,49 ****
X  /*
X   * Turn off the Macsbug calls for the production version.
X   */
X! #undef Debugger
X! #undef DebugStr
X! #define Debugger()
X! #define DebugStr(aStr)
X  
X  /*
X   * We could use the PSN under sys 7 here ...
X   */
X--- 43,122 ----
X  /*
X   * Turn off the Macsbug calls for the production version.
X   */
X! #if 0
X! #  undef Debugger
X! #  undef DebugStr
X! #  define Debugger()
X! #  define DebugStr(aStr)
X! #endif
X  
X+ /* askname dialog defines (shared between macmain.c and macmenu.c) */
X+ enum
X+ {
X+ 	dlog_start = 6000,
X+ 	dlogAskName = dlog_start,
X+ 	dlog_limit
X+ };
X+ 
X+ /* askname dialog item list */
X+ enum
X+ {
X+ 	bttnANPlay = 1,
X+ 	bttnANQuit,
X+ 	uitmANOutlineDefault,
X+ 	uitmANRole,
X+ 	uitmANSex,
X+ 	uitmANMode,
X+ 	stxtANRole,
X+ 	stxtANSex,
X+ 	stxtANMode,
X+ 	stxtANWho,
X+ 	etxtANWho
X+ };
X+ 
X+ typedef struct asknameRec
X+ {
X+ 	short		anMenu[3];
X+ 	unsigned char	anWho[32];	/* player name Pascal string */
X+ } asknameRec, *asknamePtr;
X+ 
X+ /* askname menus */
X+ enum
X+ {
X+ 	anRole,
X+ 	anSex,
X+ 	anMode
X+ };
X+ 
X+ enum
X+ {
X+ 	/* role */
X+ 	askn_role_start,	/* 0 */
X+ 	asknArcheologist = askn_role_start,
X+ 	asknBarbarian,
X+ 	asknCaveman,		/* Cavewoman */
X+ 	asknElf,
X+ 	asknHealer,
X+ 	asknKnight,
X+ 	asknPriest,		/* Priestess */
X+ 	asknRogue,
X+ 	asknSamurai,
X+ 	asknTourist,
X+ 	asknValkyrie,		/* female only */
X+ 	asknWizard,
X+ 	askn_role_end,
X+ 
X+ 	/* sex */
X+ 	asknMale = 0,
X+ 	asknFemale,
X+ 
X+ 	/* mode */
X+ 	asknRegular = 0,
X+ 	asknExplore,
X+ 	asknDebug,
X+ 	asknQuit		/* special token */
X+ };
X+ 
X  /*
X   * We could use the PSN under sys 7 here ...
X   */
X***************
X*** 72,78 ****
X--- 145,153 ----
X  extern int macwrite ( int fd , void * ptr , unsigned ) ;
X  extern long macseek ( int fd , long pos , short whence ) ;
X  
X+ extern char * macgets ( int fd , char * ptr , unsigned len ) ;
X  
X+ 
X  # if !defined(O_WRONLY)
X  #  include <fcntl.h>
X  # endif
X***************
X*** 167,172 ****
X--- 242,248 ----
X  
X  #define NUM_CANCEL_ITEMS 10
X  
X+ 
X  typedef struct NhWindow {
X  	WindowPtr		theWindow ;
X  	short			kind ;
X***************
X*** 190,199 ****
X  	char			cancelStr [ NUM_CANCEL_ITEMS ] ;
X  	char			cancelChar ;
X  	char			clear ;
X- 	char			cursorDrawn ;
X  	short			scrollPos ;
X  	ControlHandle	scrollBar ;
X  } NhWindow ;
X  
X  #define NUM_STAT_ROWS 2
X  #define NUM_ROWS 22
X--- 266,277 ----
X  	char			cancelStr [ NUM_CANCEL_ITEMS ] ;
X  	char			cancelChar ;
X  	char			clear ;
X  	short			scrollPos ;
X  	ControlHandle	scrollBar ;
X  } NhWindow ;
X+ 
X+ extern NhWindow *GetNhWin(WindowPtr mac_win);
X+ 
X  
X  #define NUM_STAT_ROWS 2
X  #define NUM_ROWS 22
X*** /tmp/da10439	Tue Jun  1 16:02:34 1993
X--- include/mfndpos.h	Mon May 17 13:54:57 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)mfndpos.h	3.1	90/22/02	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)mfndpos.h	3.1	93/05/15	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 19,24 ****
X--- 19,28 ----
X  #define ALLOW_DIG	0x08000000L	/* digs */
X  #define ALLOW_SANCT	0x20000000L	/* enters temples */
X  #define ALLOW_SSM	0x40000000L	/* ignores scare monster */
X+ #ifdef NHSTDC
X+ #define NOGARLIC	0x80000000UL	/* hates garlic */
X+ #else
X  #define NOGARLIC	0x80000000L	/* hates garlic */
X+ #endif
X  
X  #endif /* MFNDPOS_H */
X*** /tmp/da10471	Tue Jun  1 16:02:41 1993
X--- include/mondata.h	Tue Jun  1 12:12:23 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)mondata.h	3.1	92/11/26	*/
X  /* Copyright (c) 1989 Mike Threepoint				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)mondata.h	3.1	93/05/31	*/
X  /* Copyright (c) 1989 Mike Threepoint				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 25,31 ****
X  #define is_floater(ptr)		((ptr)->mlet == S_EYE)
X  #define is_clinger(ptr)		(((ptr)->mflags1 & M1_CLING) != 0L)
X  #define is_swimmer(ptr)		(((ptr)->mflags1 & M1_SWIM) != 0L)
X! #define magic_breathing(ptr)	(((ptr)->mflags1 & M1_AMPHIBIOUS) != 0L)
X  #define passes_walls(ptr)	(((ptr)->mflags1 & M1_WALLWALK) != 0L)
X  #define amorphous(ptr)		(((ptr)->mflags1 & M1_AMORPHOUS) != 0L)
X  #define noncorporeal(ptr)	((ptr)->mlet == S_GHOST)
X--- 25,32 ----
X  #define is_floater(ptr)		((ptr)->mlet == S_EYE)
X  #define is_clinger(ptr)		(((ptr)->mflags1 & M1_CLING) != 0L)
X  #define is_swimmer(ptr)		(((ptr)->mflags1 & M1_SWIM) != 0L)
X! #define breathless(ptr)		(((ptr)->mflags1 & M1_BREATHLESS) != 0L)
X! #define amphibious(ptr)		(((ptr)->mflags1 & (M1_AMPHIBIOUS | M1_BREATHLESS)) != 0L)
X  #define passes_walls(ptr)	(((ptr)->mflags1 & M1_WALLWALK) != 0L)
X  #define amorphous(ptr)		(((ptr)->mflags1 & M1_AMORPHOUS) != 0L)
X  #define noncorporeal(ptr)	((ptr)->mlet == S_GHOST)
X***************
X*** 85,92 ****
X  #  ifdef POLYSELF
X  #define can_breathe(ptr)	attacktype(ptr, AT_BREA)
X  #define cantwield(ptr)		(nohands(ptr) || verysmall(ptr))
X  #define cantweararm(ptr)	(breakarm(ptr) || sliparm(ptr))
X! #  endif /* POLYSELF */
X  #define throws_rocks(ptr)	(((ptr)->mflags2 & M2_ROCKTHROW) != 0L)
X  #define type_is_pname(ptr)	(((ptr)->mflags2 & M2_PNAME) != 0L)
X  #define is_lord(ptr)		(((ptr)->mflags2 & M2_LORD) != 0L)
X--- 86,95 ----
X  #  ifdef POLYSELF
X  #define can_breathe(ptr)	attacktype(ptr, AT_BREA)
X  #define cantwield(ptr)		(nohands(ptr) || verysmall(ptr))
X+ #  endif
X+ #  if defined(POLYSELF) || defined(MUSE)
X  #define cantweararm(ptr)	(breakarm(ptr) || sliparm(ptr))
X! #  endif
X  #define throws_rocks(ptr)	(((ptr)->mflags2 & M2_ROCKTHROW) != 0L)
X  #define type_is_pname(ptr)	(((ptr)->mflags2 & M2_PNAME) != 0L)
X  #define is_lord(ptr)		(((ptr)->mflags2 & M2_LORD) != 0L)
X*** /tmp/da10479	Tue Jun  1 16:02:43 1993
X--- include/monflag.h	Mon May 17 13:55:00 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)monflag.h	3.1	92/11/25	*/
X  /* Copyright (c) 1989 Mike Threepoint				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)monflag.h	3.1	93/02/14	*/
X  /* Copyright (c) 1989 Mike Threepoint				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 6,53 ****
X  #define MONFLAG_H
X  
X  #define MS_SILENT	0	/* makes no sound */
X! #define MS_SQEEK	1	/* squeaks, as a rodent */
X! #define MS_SQAWK	2	/* squawks, as a bird */
X! #define MS_HISS		3	/* hisses */
X! #define MS_BUZZ		4	/* buzzes (killer bee) */
X! #define MS_GRUNT	5	/* grunts (or speaks own language) */
X! #define MS_GROWL	6	/* growls */
X! #define MS_BARK		7	/* if full moon, may howl */
X! #define MS_MEW		8	/* mews or hisses */
X! #define MS_ROAR		9	/* roars */
X  #define MS_NEIGH	10	/* neighs, as an equine */
X  #define MS_WAIL		11	/* wails, as a tortured soul */
X  #define MS_GURGLE	12	/* gurgles, as liquid or through saliva */
X  #define MS_BURBLE	13	/* burbles (jabberwock) */
X  #define MS_SHRIEK	15	/* wakes up others */
X  #define MS_LAUGH	17	/* grins, smiles, giggles, and laughs */
X  #define MS_MUMBLE	18	/* says something or other */
X  #define MS_IMITATE	19	/* imitates others (leocrotta) */
X- #define MS_SEDUCE	20	/* "Hello, sailor." (Nymphs) */
X- #define MS_VAMPIRE	21	/* vampiric seduction, Vlad's exclamations */
X  #define MS_ORC		MS_GRUNT	/* intelligent brutes */
X! #define MS_BRIBE	25	/* asks for money, or berates you */
X! #define MS_CUSS		26	/* berates (demons) or intimidates (Wiz) */
X! #define MS_NURSE	27	/* "Take off your shirt, please." */
X! #define MS_DJINNI	28	/* "Thank you for freeing me!" */
X! #define MS_HUMANOID	29	/* generic traveling companion */
X! #define MS_GUARD	30	/* "Please drop that gold and follow me." */
X! #define MS_SELL		31	/* demand payment, complain about shoplifters */
X! #define MS_ORACLE	32	/* do a consultation */
X! #define MS_PRIEST	33	/* ask for contribution; do cleansing */
X  #ifdef KOPS
X! #define MS_ARREST	34	/* "Stop in the name of the law!" (Kops) */
X  #endif
X! #define MS_SOLDIER	35	/* army and watchmen expressions */
X  #ifdef MULDGN
X! #define MS_LEADER	36	/* your class leader */
X! #define MS_NEMESIS	37	/* your nemesis */
X! #define MS_GUARDIAN	38	/* your leader's guards */
X  #endif
X! #define MS_BONES	39	/* rattles bones (skeleton) */
X! #define MS_DEATH	40	/* \				*/
X! #define MS_PESTILENCE	41	/*  |- astral level special monsters */
X! #define MS_FAMINE	42	/* /				*/
X  
X  
X  #define MR_FIRE         0x01    /* resists fire */
X--- 6,52 ----
X  #define MONFLAG_H
X  
X  #define MS_SILENT	0	/* makes no sound */
X! #define MS_BARK		1	/* if full moon, may howl */
X! #define MS_MEW		2	/* mews or hisses */
X! #define MS_ROAR		3	/* roars */
X! #define MS_GROWL	4	/* growls */
X! #define MS_SQEEK	5	/* squeaks, as a rodent */
X! #define MS_SQAWK	6	/* squawks, as a bird */
X! #define MS_HISS		7	/* hisses */
X! #define MS_BUZZ		8	/* buzzes (killer bee) */
X! #define MS_GRUNT	9	/* grunts (or speaks own language) */
X  #define MS_NEIGH	10	/* neighs, as an equine */
X  #define MS_WAIL		11	/* wails, as a tortured soul */
X  #define MS_GURGLE	12	/* gurgles, as liquid or through saliva */
X  #define MS_BURBLE	13	/* burbles (jabberwock) */
X+ #define MS_ANIMAL	13	/* up to here are animal noises */
X  #define MS_SHRIEK	15	/* wakes up others */
X+ #define MS_BONES	16	/* rattles bones (skeleton) */
X  #define MS_LAUGH	17	/* grins, smiles, giggles, and laughs */
X  #define MS_MUMBLE	18	/* says something or other */
X  #define MS_IMITATE	19	/* imitates others (leocrotta) */
X  #define MS_ORC		MS_GRUNT	/* intelligent brutes */
X! #define MS_HUMANOID	20	/* generic traveling companion */
X  #ifdef KOPS
X! #define MS_ARREST	21	/* "Stop in the name of the law!" (Kops) */
X  #endif
X! #define MS_SOLDIER	22	/* army and watchmen expressions */
X! #define MS_GUARD	23	/* "Please drop that gold and follow me." */
X! #define MS_DJINNI	24	/* "Thank you for freeing me!" */
X! #define MS_NURSE	25	/* "Take off your shirt, please." */
X! #define MS_SEDUCE	26	/* "Hello, sailor." (Nymphs) */
X! #define MS_VAMPIRE	27	/* vampiric seduction, Vlad's exclamations */
X! #define MS_BRIBE	28	/* asks for money, or berates you */
X! #define MS_CUSS		29	/* berates (demons) or intimidates (Wiz) */
X! #define MS_RIDER	30	/* astral level special monsters */
X  #ifdef MULDGN
X! #define MS_LEADER	31	/* your class leader */
X! #define MS_NEMESIS	32	/* your nemesis */
X! #define MS_GUARDIAN	33	/* your leader's guards */
X  #endif
X! #define MS_SELL		34	/* demand payment, complain about shoplifters */
X! #define MS_ORACLE	35	/* do a consultation */
X! #define MS_PRIEST	36	/* ask for contribution; do cleansing */
X  
X  
X  #define MR_FIRE         0x01    /* resists fire */
X***************
X*** 72,78 ****
X  #define M1_CONCEAL	0x00000080L	/* hides under objects */
X  #define M1_HIDE		0x00000100L	/* mimics, blends in with ceiling */
X  #define M1_AMPHIBIOUS	0x00000200L	/* can survive underwater */
X! #define M1_BREATHLESS	0x00000200L	/* doesn't need to breathe */
X  #define M1_NOEYES	0x00001000L	/* no eyes to gaze into or blind */
X  #define M1_NOHANDS	0x00002000L	/* no hands to handle things */
X  #define M1_NOLIMBS	0x00006000L	/* no arms/legs to kick/wear on */
X--- 71,77 ----
X  #define M1_CONCEAL	0x00000080L	/* hides under objects */
X  #define M1_HIDE		0x00000100L	/* mimics, blends in with ceiling */
X  #define M1_AMPHIBIOUS	0x00000200L	/* can survive underwater */
X! #define M1_BREATHLESS	0x00000400L	/* doesn't need to breathe */
X  #define M1_NOEYES	0x00001000L	/* no eyes to gaze into or blind */
X  #define M1_NOHANDS	0x00002000L	/* no hands to handle things */
X  #define M1_NOLIMBS	0x00006000L	/* no arms/legs to kick/wear on */
X***************
X*** 93,99 ****
X--- 92,102 ----
X  #define M1_CARNIVORE	0x20000000L	/* eats corpses */
X  #define M1_HERBIVORE	0x40000000L	/* eats fruits */
X  #define M1_OMNIVORE	0x60000000L	/* eats both */
X+ #ifdef NHSTDC
X+ #define M1_METALLIVORE	0x80000000UL	/* eats metal */
X+ #else
X  #define M1_METALLIVORE	0x80000000L	/* eats metal */
X+ #endif
X  
X  #define M2_NOPOLY	0x00000001L	/* players mayn't poly into one */
X  #define M2_UNDEAD	0x00000002L	/* is walking dead */
X***************
X*** 123,129 ****
X--- 126,136 ----
X  #define M2_GREEDY	0x10000000L	/* likes gold */
X  #define M2_JEWELS	0x20000000L	/* likes gems */
X  #define M2_COLLECT	0x40000000L	/* picks up weapons and food */
X+ #ifdef NHSTDC
X+ #define M2_MAGIC	0x80000000UL	/* picks up magic items */
X+ #else
X  #define M2_MAGIC	0x80000000L	/* picks up magic items */
X+ #endif
X  
X  #define M3_WANTSAMUL	0x01		/* would like to steal the amulet */
X  #define M3_WANTSBELL	0x02		/* wants the bell */
X*** /tmp/da10519	Tue Jun  1 16:02:52 1993
X--- include/obj.h	Wed Mar 31 14:19:42 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)obj.h	3.1	92/10/18	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)obj.h	3.1	93/03/30	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 102,109 ****
X  #define dealloc_obj(obj) free((genericptr_t) (obj))
X  #define ONAME(otmp)	((char *)(otmp)->oextra)
X  
X! #define Is_container(otmp) (otmp->otyp >= LARGE_BOX && \
X! 			    otmp->otyp <= BAG_OF_TRICKS)
X  #define Is_box(otmp)	(otmp->otyp == LARGE_BOX || otmp->otyp == CHEST)
X  #define Is_mbag(otmp)	(otmp->otyp == BAG_OF_HOLDING || \
X  			 otmp->otyp == BAG_OF_TRICKS)
X--- 102,109 ----
X  #define dealloc_obj(obj) free((genericptr_t) (obj))
X  #define ONAME(otmp)	((char *)(otmp)->oextra)
X  
X! #define Has_contents(o) ((Is_container(o) || (o)->otyp == STATUE) && (o)->cobj)
X! #define Is_container(o) ((o)->otyp >= LARGE_BOX && (o)->otyp <= BAG_OF_TRICKS)
X  #define Is_box(otmp)	(otmp->otyp == LARGE_BOX || otmp->otyp == CHEST)
X  #define Is_mbag(otmp)	(otmp->otyp == BAG_OF_HOLDING || \
X  			 otmp->otyp == BAG_OF_TRICKS)
X*** /tmp/da10543	Tue Jun  1 16:02:58 1993
X--- include/patchlevel.h	Fri May 28 14:24:33 1993
X***************
X*** 1,72 ****
X  /*
X!  *  Patch 1, July 31, 1989
X!  *  add support for Atari TOS (courtesy Eric Smith) and Andrew File System
X!  *	(courtesy Ralf Brown)
X!  *  include the uuencoded version of termcap.arc for the MSDOS versions that
X!  *	was included with 2.2 and 2.3
X!  *  make a number of simple changes to accommodate various compilers
X!  *  fix a handful of bugs, and do some code cleaning elsewhere
X!  *  add more instructions for new environments and things commonly done wrong
X   */
X  
X  /*
X!  *  Patch 2, August 16, 1989
X!  *  add support for OS/2 (courtesy Timo Hakulinen)
X!  *  add a better makefile for MicroSoft C (courtesy Paul Gyugyi)
X!  *  more accomodation of compilers and preprocessors
X!  *  add better screen-size sensing
X!  *  expand color use for PCs and introduce it for SVR3 UNIX machines
X!  *  extend '/' to multiple identifications
X!  *  allow meta key to be used to invoke extended commands
X!  *  fix various minor bugs, and do further code cleaning
X   */
X  
X  /*
X!  *  Patch 3, September 6, 1989
X!  *  add war hammers and revise object prices
X!  *  extend prototypes to ANSI compilers in addition to the previous MSDOS ones
X!  *  move object-on-floor references into functions in preparation for planned
X!  *	data structures to allow faster access and better colors
X!  *  fix some more bugs, and extend the portability of things added in earlier
X!  *	patches
X   */
X  
X  /*
X!  *  Patch 4, September 27, 1989
X!  *  add support for VMS (courtesy David Gentzel)
X!  *  move monster-on-floor references into functions and implement the new
X!  *	lookup structure for both objects and monsters
X!  *  extend the definitions of objects and monsters to provide "living color"
X!  *	in the dungeon, instead of a single monster color
X!  *  ifdef varargs usage to satisfy ANSI compilers
X!  *  standardize on the color 'gray'
X!  *  assorted bug fixes
X   */
X  
X  /*
X!  *  Patch 5, October 15, 1989
X!  *  add support for Macintosh OS (courtesy Johnny Lee)
X!  *  fix annoying dependency loop via new color.h file
X!  *  allow interruption while eating -- general handling of partially eaten food
X!  *  smarter treatment of iron balls (courtesy Kevin Darcy)
X!  *  a handful of other bug fixes
X   */
X  
X  /*
X!  *  Patch 6, November 19, 1989
X!  *  add overlay support for MS-DOS (courtesy Pierre Martineau, Stephen
X!  *	Spackman, and Norm Meluch)
X!  *  refine Macintosh port
X!  *  different door states show as different symbols (courtesy Ari Huttunen)
X!  *  smarter drawbridges (courtesy Kevin Darcy)
X!  *  add CLIPPING and split INFERNO off HARD
X!  *  further refine eating code wrt picking up and resumption
X!  *  make first few levels easier, by adding :x monsters and increasing initial
X!  *	attribute points and hitting probability
X!  *  teach '/' about configurable symbols
X   */
X  
X  /*
X   *  Patch 7, February 19, 1990
X   *  refine overlay support to handle portions of .c files through OVLx
X   *	(courtesy above plus Kevin Smolkowski)
X--- 1,93 ----
X+ /*	SCCS Id: @(#)patchlevel.h	3.1	93/04/07	*/
X+ /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X+ /* NetHack may be freely redistributed.  See license for details. */
X+ 
X+ /* NetHack 3.1.2 */
X+ #define VERSION_MAJOR	3
X+ #define VERSION_MINOR	1
X  /*
X!  * PATCHLEVEL is updated for each release.
X   */
X+ #define PATCHLEVEL	2
X+ /*
X+  * Incrementing EDITLEVEL can be used to force invalidation of old bones
X+  * and save files.
X+  */
X+ #define EDITLEVEL	0
X  
X  /*
X!  *  Patch 2, June 1, 1993
X!  *  add tty windowing to Mac and Amiga ports and revise native windowing
X!  *  allow direct screen I/O for MS-DOS versions instead of going through
X!  *	termcap routines (courtesy Michael Allison and Kevin Smolkowski)
X!  *  changes for NEC PC-9801 and various termcap.zip fixes by Yamamoto Keizo
X!  *  SYSV 386 music driver ported to 386BSD (courtesy Andrew Chernov) and
X!  *	SCO UNIX (courtesy Andreas Arens)
X!  *  enhanced pickup and disclosure options
X!  *  removed fatal bugs dealing with cursed bags of holding, renaming
X!  *	shopkeepers, objects falling through trapdoors on deep levels,
X!  *	and kicking embedded objects loose, and many more minor ones
X   */
X  
X  /*
X!  *  Patch 1, February 25, 1993
X!  *  add Windows NT console port (courtesy Michael Allison)
X!  *  polishing of Amiga, Mac, and X11 windowing
X!  *  fixing many small bugs, including the infamous 3.0 nurse relmon bug
X   */
X  
X  /*
X!  *  NetHack 3.1.0, January 25, 1993
X!  *  many, many changes and bugfixes -- some of the highlights include:
X!  *  display rewrite using line-of-sight vision
X!  *  general window interface, with the ability to use multiple interfaces
X!  *	in the same executable
X!  *  intelligent monsters
X!  *  enhanced dungeon mythology
X!  *  branching dungeons with more special levels, quest dungeons, and
X!  *	multi-level endgame
X!  *  more artifacts and more uses for artifacts
X!  *  generalization to multiple shops with damage repair
X!  *  X11 interface
X!  *  ability to recover crashed games
X!  *  full rewrite of Macintosh port
X!  *  Amiga splitter
X!  *  directory rearrangement (dat, doc, sys, win, util)
X   */
X  
X+ /* Version 3.1 */
X+ 
X+ /*****************************************************************************/
X+ /* Version 3.0 */
X+ 
X  /*
X!  *  Patch 10, February 5, 1991
X!  *  extend overlay manager to multiple files for easier binary distribution
X!  *  allow for more system and compiler variance
X!  *  remove more small insects
X   */
X  
X  /*
X!  *  Patch 9, June 26, 1990
X!  *  clear up some confusing documentation
X!  *  smooth some more rough edges in various ports
X!  *  and fix a couple more bugs
X   */
X  
X  /*
X+  *  Patch 8, June 3, 1990
X+  *  further debug and refine Macintosh port
X+  *  refine the overlay manager, rearrange the OVLx breakdown for better
X+  *	efficiency, rename the overlay macros, and split off the overlay
X+  *	instructions to Install.ovl
X+  *  introduce NEARDATA for better Amiga efficiency
X+  *  support for more VMS versions (courtesy Joshua Delahunty and Pat Rankin)
X+  *  more const fixes
X+  *  better support for common graphics (DEC VT and IBM)
X+  *  and a number of simple fixes and consistency extensions
X+  */
X+ 
X+ /*
X   *  Patch 7, February 19, 1990
X   *  refine overlay support to handle portions of .c files through OVLx
X   *	(courtesy above plus Kevin Smolkowski)
X***************
X*** 85,144 ****
X   */
X  
X  /*
X!  *  Patch 8, June 3, 1990
X!  *  further debug and refine Macintosh port
X!  *  refine the overlay manager, rearrange the OVLx breakdown for better
X!  *	efficiency, rename the overlay macros, and split off the overlay
X!  *	instructions to Install.ovl
X!  *  introduce NEARDATA for better Amiga efficiency
X!  *  support for more VMS versions (courtesy Joshua Delahunty and Pat Rankin)
X!  *  more const fixes
X!  *  better support for common graphics (DEC VT and IBM)
X!  *  and a number of simple fixes and consistency extensions
X   */
X  
X  /*
X!  *  Patch 9, June 26, 1990
X!  *  clear up some confusing documentation
X!  *  smooth some more rough edges in various ports
X!  *  and fix a couple more bugs
X   */
X  
X  /*
X!  *  Patch 10, February 5, 1991
X!  *  extend overlay manager to multiple files for easier binary distribution
X!  *  allow for more system and compiler variance
X!  *  remove more small insects
X   */
X  
X! /* #define PATCHLEVEL	10 */
X  
X- /* END Version 3.0, BEGIN Version 3.1 */
X- 
X  /*
X!  *  NetHack 3.1, January 25, 1993
X!  *  many, many changes and bugfixes -- some of the highlights include:
X!  *  display rewrite using line-of-sight vision
X!  *  general window interface, with the ability to use multiple interfaces
X!  *	in the same executable
X!  *  intelligent monsters
X!  *  enhanced dungeon mythology
X!  *  branching dungeons with more special levels, quest dungeons, and
X!  *	multi-level endgame
X!  *  more artifacts and more uses for artifacts
X!  *  generalization to multiple shops with damage repair
X!  *  X11 interface
X!  *  ability to recover crashed games
X!  *  full rewrite of Macintosh port
X!  *  Amiga splitter
X!  *  directory rearrangement (dat, doc, sys, win, util)
X   */
X  
X  /*
X!  *  Patch 1, February 25, 1993
X!  *  add Windows NT console port (courtesy Michael Allison)
X!  *  polishing of Amiga, Mac, and X11 windowing
X!  *  fixing many small bugs, including the infamous 3.0 nurse relmon bug
X   */
X  
X- #define PATCHLEVEL	1
X--- 106,175 ----
X   */
X  
X  /*
X!  *  Patch 6, November 19, 1989
X!  *  add overlay support for MS-DOS (courtesy Pierre Martineau, Stephen
X!  *	Spackman, and Norm Meluch)
X!  *  refine Macintosh port
X!  *  different door states show as different symbols (courtesy Ari Huttunen)
X!  *  smarter drawbridges (courtesy Kevin Darcy)
X!  *  add CLIPPING and split INFERNO off HARD
X!  *  further refine eating code wrt picking up and resumption
X!  *  make first few levels easier, by adding :x monsters and increasing initial
X!  *	attribute points and hitting probability
X!  *  teach '/' about configurable symbols
X   */
X  
X  /*
X!  *  Patch 5, October 15, 1989
X!  *  add support for Macintosh OS (courtesy Johnny Lee)
X!  *  fix annoying dependency loop via new color.h file
X!  *  allow interruption while eating -- general handling of partially eaten food
X!  *  smarter treatment of iron balls (courtesy Kevin Darcy)
X!  *  a handful of other bug fixes
X   */
X  
X  /*
X!  *  Patch 4, September 27, 1989
X!  *  add support for VMS (courtesy David Gentzel)
X!  *  move monster-on-floor references into functions and implement the new
X!  *	lookup structure for both objects and monsters
X!  *  extend the definitions of objects and monsters to provide "living color"
X!  *	in the dungeon, instead of a single monster color
X!  *  ifdef varargs usage to satisfy ANSI compilers
X!  *  standardize on the color 'gray'
X!  *  assorted bug fixes
X   */
X  
X! /*
X!  *  Patch 3, September 6, 1989
X!  *  add war hammers and revise object prices
X!  *  extend prototypes to ANSI compilers in addition to the previous MSDOS ones
X!  *  move object-on-floor references into functions in preparation for planned
X!  *	data structures to allow faster access and better colors
X!  *  fix some more bugs, and extend the portability of things added in earlier
X!  *	patches
X!  */
X  
X  /*
X!  *  Patch 2, August 16, 1989
X!  *  add support for OS/2 (courtesy Timo Hakulinen)
X!  *  add a better makefile for MicroSoft C (courtesy Paul Gyugyi)
X!  *  more accomodation of compilers and preprocessors
X!  *  add better screen-size sensing
X!  *  expand color use for PCs and introduce it for SVR3 UNIX machines
X!  *  extend '/' to multiple identifications
X!  *  allow meta key to be used to invoke extended commands
X!  *  fix various minor bugs, and do further code cleaning
X   */
X  
X  /*
X!  *  Patch 1, July 31, 1989
X!  *  add support for Atari TOS (courtesy Eric Smith) and Andrew File System
X!  *	(courtesy Ralf Brown)
X!  *  include the uuencoded version of termcap.arc for the MSDOS versions that
X!  *	was included with 2.2 and 2.3
X!  *  make a number of simple changes to accommodate various compilers
X!  *  fix a handful of bugs, and do some code cleaning elsewhere
X!  *  add more instructions for new environments and things commonly done wrong
X   */
X  
X*** /tmp/da10551	Tue Jun  1 16:03:00 1993
X--- include/pcconf.h	Tue May 11 10:02:50 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)pcconf.h	3.1	92/10/23	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)pcconf.h	3.1	93/04/04  	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 35,40 ****
X--- 35,51 ----
X  
X  # define ANSI_DEFAULT    /* allows NetHack to run without a ./termcap */
X  
X+ /*# define NO_TERMS	/* Allows Nethack to run without ansi.sys by linking */
X+ 			/* screen routines into the .exe     */
X+ 
X+ # ifdef NO_TERMS		/* if NO_TERMS select screen package below */
X+ #  define SCREEN_BIOS		/* Use bios calls for all screen control */
X+ /*  #define SCREEN_DJGPPFAST	/* Use djgpp fast screen routines       */
X+ # endif
X+ 
X+ /*# define PC9801	/* Allows NetHack to run on NEC PC-9801 machines */
X+ 			/* Yamamoto Keizo */
X+ 
X  # define RANDOM		/* have Berkeley random(3) */
X  
X  #endif /* MSDOS configuration stuff */
X***************
X*** 104,109 ****
X--- 115,126 ----
X  #ifdef MSDOS
X  # define TEXTCOLOR /* */
X  #endif
X+ 
X+ #ifdef NO_TERMS		/* Sanity check, do not modify this block */
X+ # undef TERMLIB
X+ # undef ANSI_DEFAULT
X+ # define ASCIIGRAPH
X+ #endif 
X  
X  #ifdef MSC7_WARN	/* define with cl /DMSC7_WARN	*/
X  #pragma warning(disable:4131)
X*** /tmp/da10599	Tue Jun  1 16:03:11 1993
X--- include/rm.h	Wed May 26 14:47:19 1993
X***************
X*** 347,352 ****
X--- 347,353 ----
X      char		*yuk2[COLNO-1][ROWNO];
X  #endif
X      struct obj		*objlist;
X+     struct obj		*buriedobjlist;
X      struct monst	*monlist;
X      struct damage	*damagelist;
X      struct levelflags	flags;
X*** /tmp/da10623	Tue Jun  1 16:03:17 1993
X--- include/system.h	Tue Apr  6 15:58:19 1993
X***************
X*** 272,278 ****
X  E void *FDECL(memcpy, (void *,const void *,size_t));
X  E void *FDECL(memset, (void *,int,size_t));
X  # else
X! #  if defined(AZTEC_50) || defined(NHSTDC)
X  E int  FDECL(memcmp, (const void *, const void *, size_t));
X  E void *FDECL(memcpy, (void *, const void *, size_t));
X  E void *FDECL(memset, (void *, int, size_t));
X--- 272,278 ----
X  E void *FDECL(memcpy, (void *,const void *,size_t));
X  E void *FDECL(memset, (void *,int,size_t));
X  # else
X! #  if defined(AZTEC_50) || defined(NHSTDC) || defined(WIN32)
X  E int  FDECL(memcmp, (const void *, const void *, size_t));
X  E void *FDECL(memcpy, (void *, const void *, size_t));
X  E void *FDECL(memset, (void *, int, size_t));
X*** /tmp/da10631	Tue Jun  1 16:03:20 1993
X--- include/termcap.h	Wed Mar  3 14:21:42 1993
X***************
X*** 12,18 ****
X  #endif
X  
X  /* might display need graphics code? */
X! #if !defined(AMIGA) && !defined(TOS)
X  # if defined(TERMLIB) || defined(OS2) || defined(MSDOS)
X  #  define ASCIIGRAPH
X  # endif
X--- 12,18 ----
X  #endif
X  
X  /* might display need graphics code? */
X! #if !defined(AMIGA) && !defined(TOS) && !defined(MAC)
X  # if defined(TERMLIB) || defined(OS2) || defined(MSDOS)
X  #  define ASCIIGRAPH
X  # endif
X*** /tmp/da10647	Tue Jun  1 16:03:23 1993
X--- include/tradstdc.h	Tue Jun  1 11:36:29 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)tradstdc.h	3.1	92/04/01	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)tradstdc.h	3.1	93/05/30	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 143,157 ****
X  #  endif
X  # endif
X  
X! # if !defined(LATTICE) && !defined(MAC)
X! 		/* Lattice can't even PARSE the const below! */
X! 		/* MPW can parse but expects an identifier, not a keyword... */
X! #  if defined(ULTRIX_PROTO) && !defined(NHSTDC) && !defined(const)
X! #  define const		/* the system header files are *not* __STDC__ */
X  #  endif
X- #  if defined(apollo) && !defined(const)
X- #  define const         /* too much trouble with printf(char *format, ...) */
X- #  endif                 /* instead of printf(const char *format, ...) etc. */
X  # endif
X  
X  #else /* NHSTDC */	/* a "traditional" C  compiler */
X--- 143,159 ----
X  #  endif
X  # endif
X  
X! /*
X!  * Suppress `const' if necessary and not handled elsewhere.
X!  * Don't use `#if defined(xxx) && !defined(const)'
X!  * because some compilers choke on `defined(const)'.
X!  * This has been observed with Lattice, MPW, and High C.
X!  */
X! # if (defined(ULTRIX_PROTO) && !defined(NHSTDC)) || defined(apollo)
X! 	/* the system header files don't use `const' properly */
X! #  ifndef const
X! #   define const
X  #  endif
X  # endif
X  
X  #else /* NHSTDC */	/* a "traditional" C  compiler */
X*** /tmp/da10655	Tue Jun  1 16:03:25 1993
X--- include/trampoli.h	Thu May 20 16:14:30 1993
X***************
X*** 14,19 ****
X--- 14,23 ----
X  #define dorub()   dorub_()
X  
X  
X+ /* ### artifact.c ### */
X+ #define doinvoke()     doinvoke_()
X+ 
X+ 
X  /* ### cmd.c ### */
X  #define doextcmd()         doextcmd_()
X  #define doextlist()        doextlist_()
X***************
X*** 215,220 ****
X--- 219,228 ----
X  /* ### read.c ### */
X  #define doread()	   doread_()
X  #define set_lit(x, y, val) set_lit_(x, y, val)
X+ 
X+ 
X+ /* ### rip.c ### */
X+ #define genl_outrip(tmpwin, how) genl_outrip_(tmpwin, how)
X  
X  
X  /* ### save.c ### */
X*** /tmp/da10671	Tue Jun  1 16:03:29 1993
X--- include/unixconf.h	Tue May 11 10:05:10 1993
X***************
X*** 20,26 ****
X  
X  /* define exactly one of the following four choices */
X  #define BSD		/* define for 4.n BSD  */
X! 			/* also for relatives like SunOS and DG/UX */
X  /* #define ULTRIX	/* define for Ultrix v3.0 or higher (but not lower) */
X  			/* Use BSD for < v3.0 */
X  			/* "ULTRIX" not to be confused with "ultrix" */
X--- 20,26 ----
X  
X  /* define exactly one of the following four choices */
X  #define BSD		/* define for 4.n BSD  */
X! 			/* also for relatives like SunOS, Linux and DG/UX */
X  /* #define ULTRIX	/* define for Ultrix v3.0 or higher (but not lower) */
X  			/* Use BSD for < v3.0 */
X  			/* "ULTRIX" not to be confused with "ultrix" */
X***************
X*** 34,39 ****
X--- 34,40 ----
X  #define NETWORK	/* if running on a networked system */
X  			/* e.g. Suns sharing a playground through NFS */
X  #define SUNOS4	/* SunOS 4.x */
X+ /* #define LINUX  /* Another Unix clone running on Intel processors */
X  /* #define GENIX	/* Yet Another Unix Clone */
X  /* #define HISX		/* Bull Unix for XPS Machines */
X  /* #define BOS		/* Bull Open Software - Unix for DPX/2 Machines */
X***************
X*** 45,52 ****
X  			/* or X11 color	*/
X  /* #define POSIX_JOB_CONTROL	/* use System V POSIX job control */
X  /* #define POSIX_TYPES	/* use POSIX types for system calls and termios */
X  
X- 
X  #define OPENWINBUG	/* avoid a problem using OpenWindows 3.0 for X11
X  			   on SunOS 4.1.x, x>= 2 */
X  /* #define PYRAMID_BUG	/* avoid a bug on the Pyramid */
X--- 46,54 ----
X  			/* or X11 color	*/
X  /* #define POSIX_JOB_CONTROL	/* use System V POSIX job control */
X  /* #define POSIX_TYPES	/* use POSIX types for system calls and termios */
X+                         /* define for platforms using the GNU libraries */
X+                         /* linux, etc .. */
X  
X  #define OPENWINBUG	/* avoid a problem using OpenWindows 3.0 for X11
X  			   on SunOS 4.1.x, x>= 2 */
X  /* #define PYRAMID_BUG	/* avoid a bug on the Pyramid */
X***************
X*** 60,67 ****
X  /* #define RANDOM	/* if neither random/srandom nor lrand48/srand48
X  			   is available from your system */
X  
X! /* #define SYSV386MUSIC	/* Play real music through speaker on systems with
X  			   music driver installed */
X  
X  
X  /*
X--- 62,72 ----
X  /* #define RANDOM	/* if neither random/srandom nor lrand48/srand48
X  			   is available from your system */
X  
X! /* see sys/unix/snd86.shr for more information on these */
X! /* #define UNIX386MUSIC	/* Play real music through speaker on systems with
X  			   music driver installed */
X+ /* #define VPIX_MUSIC	/* Play real music through speaker on systems with
X+ 			   built-in VPIX support */
X  
X  
X  /*
X*** /tmp/da10687	Tue Jun  1 16:03:33 1993
X--- include/vision.h	Mon May 17 13:55:03 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)vision.h	3.1	92/11/14	*/
X  /* Copyright (c) Dean Luick, with acknowledgements to Dave Cohrs, 1990.	*/
X  /* NetHack may be freely redistributed.  See license for details.	*/
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)vision.h	3.1	93/05/15	*/
X  /* Copyright (c) Dean Luick, with acknowledgements to Dave Cohrs, 1990.	*/
X  /* NetHack may be freely redistributed.  See license for details.	*/
X  
X***************
X*** 44,49 ****
X  #define MAX_RADIUS 15	/* this is in points from the source */
X  
X  /* Use this macro to get a list of distances of the edges (see vision.c). */
X! #define circle_ptr(z) (&circle_data[circle_start[z]])
X  
X  #endif /* VISION_H */
X--- 44,49 ----
X  #define MAX_RADIUS 15	/* this is in points from the source */
X  
X  /* Use this macro to get a list of distances of the edges (see vision.c). */
X! #define circle_ptr(z) (&circle_data[(int)circle_start[z]])
X  
X  #endif /* VISION_H */
X*** /tmp/da10695	Tue Jun  1 16:03:36 1993
X--- include/vmsconf.h	Tue Jun  1 10:50:57 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)vmsconf.h	3.1	92/12/11	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)vmsconf.h	3.1	93/05/29	*/
X  /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 16,22 ****
X   *   extra room for patching longer values into an existing executable.
X   */
X  #define Local_WIZARD	"NHWIZARD\0\0\0\0"
X! #define Local_HACKDIR	"DISK$USERS:[GAMES.NETHACK.3-1-0.PLAY]\0\0\0\0\0\0"
X  
X  /*
X   * This section cleans up the stuff done in config.h so that it
X--- 16,22 ----
X   *   extra room for patching longer values into an existing executable.
X   */
X  #define Local_WIZARD	"NHWIZARD\0\0\0\0"
X! #define Local_HACKDIR	"DISK$USERS:[GAMES.NETHACK.3-1-2.PLAY]\0\0\0\0\0\0\0\0"
X  
X  /*
X   * This section cleans up the stuff done in config.h so that it
X***************
X*** 56,63 ****
X  #ifdef COMPRESS
X  # undef COMPRESS
X  #endif
X! #ifndef ZEROCOMP
X! # define ZEROCOMP
X  #endif
X  
X  /* vision algorithm */
X--- 56,63 ----
X  #ifdef COMPRESS
X  # undef COMPRESS
X  #endif
X! #ifndef INTERNAL_COMP
X! # define INTERNAL_COMP
X  #endif
X  
X  /* vision algorithm */
X***************
X*** 210,215 ****
X--- 210,218 ----
X  /* VMS global names are case insensitive... */
X  #define An vms_an
X  #define The vms_the
X+ 
X+ /* avoid global symbol in Alpha/VMS V1.5 STARLET library (link trouble) */
X+ #define ospeed vms_ospeed
X  
X  /* used in several files which don't #include "extern.h" */
X  extern void FDECL(vms_exit, (int));
X*** /tmp/da10703	Tue Jun  1 16:03:38 1993
X--- include/winX.h	Tue Apr 27 17:00:20 1993
X***************
X*** 1,4 ****
X! /*	SCCS Id: @(#)winX.h	3.1	93/01/22		  */
X  /* Copyright (c) Dean Luick, 1992				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X--- 1,4 ----
X! /*	SCCS Id: @(#)winX.h	3.1	93/04/26		  */
X  /* Copyright (c) Dean Luick, 1992				  */
X  /* NetHack may be freely redistributed.  See license for details. */
X  
X***************
X*** 331,335 ****
X--- 331,337 ----
X  /* other defs that really should go away (they're tty specific) */
X  E void NDECL(X11_start_screen);
X  E void NDECL(X11_end_screen);
X+ 
X+ E void FDECL(genl_outrip, (winid,int));
X  
X  #endif /* WINX_H */
END_OF_FILE
if test 56326 -ne `wc -c <'patches02n'`; then
    echo shar: \"'patches02n'\" unpacked with wrong size!
fi
# end of 'patches02n'
if test -f 'sys/amiga/winkey.c' -a "${1}" != "-c" ; then 
  echo shar: Renaming existing file \"'sys/amiga/winkey.c'\" to \"'sys/amiga/winkey.c.orig'\"
  mv -f 'sys/amiga/winkey.c' 'sys/amiga/winkey.c.orig'
fi
echo shar: Extracting \"'sys/amiga/winkey.c'\" \(1946 characters\)
sed "s/^X//" >'sys/amiga/winkey.c' <<'END_OF_FILE'
X/*    SCCS Id: @(#)winkey.c    3.1    93/04/02 */
X/* Copyright (c) Gregg Wonderly, Naperville, Illinois,  1991,1992,1993. */
X/* NetHack may be freely redistributed.  See license for details. */
X
X#include "amiga:windefs.h"
X#include "amiga:winext.h"
X#include "amiga:winproto.h"
X
Xamii_nh_poskey(x, y, mod)
X    int*x, *y, *mod;
X{
X    struct amii_WinDesc *cw;
X    WETYPE type;
X    struct RastPort *rp;
X    struct Window *w;
X
X    if( cw = amii_wins[WIN_MESSAGE] )
X    {
X	cw->wflags &= ~FLMAP_SKIP;
X	if( scrollmsg )
X	    cw->wflags |= FLMSG_FIRST;
X	cw->disprows = 0;
X    }
X
X    if( WIN_MAP != WIN_ERR && (cw = amii_wins[ WIN_MAP ]) && ( w = cw->win ) )
X    {
X	cursor_on( WIN_MAP );
X#ifdef	VIEWWINDOW
X	cursor_on( WIN_VIEW );
X#endif
X    }
X    else
X	panic( "no MAP window opened for nh_poskey\n" );
X
X    rp = w->RPort;
X
X    while( 1 )
X    {
X	type = WindowGetevent( );
X	if( type == WEMOUSE )
X	{
X	    *mod = CLICK_1;
X	    if( lastevent.un.mouse.qual )
X		*mod = 0;
X
X	    /* X coordinates are 1 based, Y are zero based. */
X	    *x = ( (lastevent.un.mouse.x - w->BorderLeft) / MAPFTWIDTH ) + 1;
X	    *y = ( ( lastevent.un.mouse.y - w->BorderTop - MAPFTBASELN ) /
X			MAPFTHEIGHT );
X	    return( 0 );
X	}
X	else if( type == WEKEY )
X	{
X	    lastevent.type = WEUNK;
X	    return( lastevent.un.key );
X	}
X    }
X}
X
Xint
Xamii_nhgetch()
X{
X    int ch;
X    struct amii_WinDesc *cw=amii_wins[WIN_MESSAGE];
X
X    if( WIN_MAP != WIN_ERR && amii_wins[ WIN_MAP ] )
X    {
X	cursor_on( WIN_MAP );
X#ifdef	VIEWWINDOW
X	cursor_on( WIN_VIEW );
X#endif
X    }
X    if(cw)
X		cw->wflags &= ~FLMAP_SKIP;
X
X    ch = WindowGetchar();
X    return( ch );
X}
X
Xvoid
Xamii_get_nh_event()
X{
X    /* nothing now - later I have no idea.  Is this just a Mac hook? */
X}
X
Xvoid
Xamii_getret()
X{
X    register int c;
X
X    raw_print( "" );
X    raw_print( "Press Return..." );
X
X    c = 0;
X
X    while( c != '\n' && c != '\r' )
X    {
X	if( HackPort )
X	    c = WindowGetchar();
X	else
X	    c = getchar();
X    }
X    return;
X}
X
END_OF_FILE
if test 1946 -ne `wc -c <'sys/amiga/winkey.c'`; then
    echo shar: \"'sys/amiga/winkey.c'\" unpacked with wrong size!
fi
# end of 'sys/amiga/winkey.c'
echo shar: End of archive 5 \(of 33\).
cp /dev/null ark5isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 33 archives.
    echo "Now execute ./patchit.sh"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
